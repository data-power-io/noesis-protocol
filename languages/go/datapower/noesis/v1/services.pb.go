// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: datapower/noesis/v1/services.proto

package noesisv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RowLookupRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Table         string                 `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Fields        []string               `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty"` // Optional: specific fields to return
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RowLookupRequest) Reset() {
	*x = RowLookupRequest{}
	mi := &file_datapower_noesis_v1_services_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RowLookupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RowLookupRequest) ProtoMessage() {}

func (x *RowLookupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datapower_noesis_v1_services_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RowLookupRequest.ProtoReflect.Descriptor instead.
func (*RowLookupRequest) Descriptor() ([]byte, []int) {
	return file_datapower_noesis_v1_services_proto_rawDescGZIP(), []int{0}
}

func (x *RowLookupRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *RowLookupRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RowLookupRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

type RowLookupResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Found         bool                   `protobuf:"varint,1,opt,name=found,proto3" json:"found,omitempty"`
	Data          *structpb.Struct       `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RowLookupResponse) Reset() {
	*x = RowLookupResponse{}
	mi := &file_datapower_noesis_v1_services_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RowLookupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RowLookupResponse) ProtoMessage() {}

func (x *RowLookupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_datapower_noesis_v1_services_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RowLookupResponse.ProtoReflect.Descriptor instead.
func (*RowLookupResponse) Descriptor() ([]byte, []int) {
	return file_datapower_noesis_v1_services_proto_rawDescGZIP(), []int{1}
}

func (x *RowLookupResponse) GetFound() bool {
	if x != nil {
		return x.Found
	}
	return false
}

func (x *RowLookupResponse) GetData() *structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *RowLookupResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type SearchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Table         string                 `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	Filters       map[string]string      `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	Fields        []string               `protobuf:"bytes,5,rep,name=fields,proto3" json:"fields,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	mi := &file_datapower_noesis_v1_services_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datapower_noesis_v1_services_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_datapower_noesis_v1_services_proto_rawDescGZIP(), []int{2}
}

func (x *SearchRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *SearchRequest) GetFilters() map[string]string {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *SearchRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *SearchRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

type SearchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*structpb.Struct     `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchResponse) Reset() {
	*x = SearchResponse{}
	mi := &file_datapower_noesis_v1_services_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse) ProtoMessage() {}

func (x *SearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_datapower_noesis_v1_services_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse.ProtoReflect.Descriptor instead.
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return file_datapower_noesis_v1_services_proto_rawDescGZIP(), []int{3}
}

func (x *SearchResponse) GetResults() []*structpb.Struct {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *SearchResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *SearchResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type BatchLookupRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Table         string                 `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	Ids           []string               `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty"`
	Fields        []string               `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchLookupRequest) Reset() {
	*x = BatchLookupRequest{}
	mi := &file_datapower_noesis_v1_services_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchLookupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchLookupRequest) ProtoMessage() {}

func (x *BatchLookupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datapower_noesis_v1_services_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchLookupRequest.ProtoReflect.Descriptor instead.
func (*BatchLookupRequest) Descriptor() ([]byte, []int) {
	return file_datapower_noesis_v1_services_proto_rawDescGZIP(), []int{4}
}

func (x *BatchLookupRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *BatchLookupRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *BatchLookupRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

type BatchLookupResponse struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Results       map[string]*structpb.Struct `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	NotFound      []string                    `protobuf:"bytes,2,rep,name=not_found,json=notFound,proto3" json:"not_found,omitempty"`
	Error         string                      `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchLookupResponse) Reset() {
	*x = BatchLookupResponse{}
	mi := &file_datapower_noesis_v1_services_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchLookupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchLookupResponse) ProtoMessage() {}

func (x *BatchLookupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_datapower_noesis_v1_services_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchLookupResponse.ProtoReflect.Descriptor instead.
func (*BatchLookupResponse) Descriptor() ([]byte, []int) {
	return file_datapower_noesis_v1_services_proto_rawDescGZIP(), []int{5}
}

func (x *BatchLookupResponse) GetResults() map[string]*structpb.Struct {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *BatchLookupResponse) GetNotFound() []string {
	if x != nil {
		return x.NotFound
	}
	return nil
}

func (x *BatchLookupResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type EnrichmentRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Table           string                 `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	Record          *structpb.Struct       `protobuf:"bytes,2,opt,name=record,proto3" json:"record,omitempty"`
	Context         map[string]string      `protobuf:"bytes,3,rep,name=context,proto3" json:"context,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	RequestedFields []string               `protobuf:"bytes,4,rep,name=requested_fields,json=requestedFields,proto3" json:"requested_fields,omitempty"` // Optional: specific fields to enrich
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *EnrichmentRequest) Reset() {
	*x = EnrichmentRequest{}
	mi := &file_datapower_noesis_v1_services_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnrichmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnrichmentRequest) ProtoMessage() {}

func (x *EnrichmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datapower_noesis_v1_services_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnrichmentRequest.ProtoReflect.Descriptor instead.
func (*EnrichmentRequest) Descriptor() ([]byte, []int) {
	return file_datapower_noesis_v1_services_proto_rawDescGZIP(), []int{6}
}

func (x *EnrichmentRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *EnrichmentRequest) GetRecord() *structpb.Struct {
	if x != nil {
		return x.Record
	}
	return nil
}

func (x *EnrichmentRequest) GetContext() map[string]string {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *EnrichmentRequest) GetRequestedFields() []string {
	if x != nil {
		return x.RequestedFields
	}
	return nil
}

type EnrichmentResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	EnrichedRecord *structpb.Struct       `protobuf:"bytes,1,opt,name=enriched_record,json=enrichedRecord,proto3" json:"enriched_record,omitempty"`
	AddedFields    map[string]string      `protobuf:"bytes,2,rep,name=added_fields,json=addedFields,proto3" json:"added_fields,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Error          string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *EnrichmentResponse) Reset() {
	*x = EnrichmentResponse{}
	mi := &file_datapower_noesis_v1_services_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnrichmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnrichmentResponse) ProtoMessage() {}

func (x *EnrichmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_datapower_noesis_v1_services_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnrichmentResponse.ProtoReflect.Descriptor instead.
func (*EnrichmentResponse) Descriptor() ([]byte, []int) {
	return file_datapower_noesis_v1_services_proto_rawDescGZIP(), []int{7}
}

func (x *EnrichmentResponse) GetEnrichedRecord() *structpb.Struct {
	if x != nil {
		return x.EnrichedRecord
	}
	return nil
}

func (x *EnrichmentResponse) GetAddedFields() map[string]string {
	if x != nil {
		return x.AddedFields
	}
	return nil
}

func (x *EnrichmentResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ValidationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Table         string                 `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	Record        *structpb.Struct       `protobuf:"bytes,2,opt,name=record,proto3" json:"record,omitempty"`
	Rules         []string               `protobuf:"bytes,3,rep,name=rules,proto3" json:"rules,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidationRequest) Reset() {
	*x = ValidationRequest{}
	mi := &file_datapower_noesis_v1_services_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationRequest) ProtoMessage() {}

func (x *ValidationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datapower_noesis_v1_services_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationRequest.ProtoReflect.Descriptor instead.
func (*ValidationRequest) Descriptor() ([]byte, []int) {
	return file_datapower_noesis_v1_services_proto_rawDescGZIP(), []int{8}
}

func (x *ValidationRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *ValidationRequest) GetRecord() *structpb.Struct {
	if x != nil {
		return x.Record
	}
	return nil
}

func (x *ValidationRequest) GetRules() []string {
	if x != nil {
		return x.Rules
	}
	return nil
}

type ValidationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Valid         bool                   `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	Errors        []*ValidationError     `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidationResponse) Reset() {
	*x = ValidationResponse{}
	mi := &file_datapower_noesis_v1_services_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationResponse) ProtoMessage() {}

func (x *ValidationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_datapower_noesis_v1_services_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationResponse.ProtoReflect.Descriptor instead.
func (*ValidationResponse) Descriptor() ([]byte, []int) {
	return file_datapower_noesis_v1_services_proto_rawDescGZIP(), []int{9}
}

func (x *ValidationResponse) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *ValidationResponse) GetErrors() []*ValidationError {
	if x != nil {
		return x.Errors
	}
	return nil
}

type ValidationError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Field         string                 `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Rule          string                 `protobuf:"bytes,2,opt,name=rule,proto3" json:"rule,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidationError) Reset() {
	*x = ValidationError{}
	mi := &file_datapower_noesis_v1_services_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidationError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationError) ProtoMessage() {}

func (x *ValidationError) ProtoReflect() protoreflect.Message {
	mi := &file_datapower_noesis_v1_services_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationError.ProtoReflect.Descriptor instead.
func (*ValidationError) Descriptor() ([]byte, []int) {
	return file_datapower_noesis_v1_services_proto_rawDescGZIP(), []int{10}
}

func (x *ValidationError) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *ValidationError) GetRule() string {
	if x != nil {
		return x.Rule
	}
	return ""
}

func (x *ValidationError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_datapower_noesis_v1_services_proto protoreflect.FileDescriptor

const file_datapower_noesis_v1_services_proto_rawDesc = "" +
	"\n" +
	"\"datapower/noesis/v1/services.proto\x12\x13datapower.noesis.v1\x1a\x1cgoogle/protobuf/struct.proto\"P\n" +
	"\x10RowLookupRequest\x12\x14\n" +
	"\x05table\x18\x01 \x01(\tR\x05table\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12\x16\n" +
	"\x06fields\x18\x03 \x03(\tR\x06fields\"l\n" +
	"\x11RowLookupResponse\x12\x14\n" +
	"\x05found\x18\x01 \x01(\bR\x05found\x12+\n" +
	"\x04data\x18\x02 \x01(\v2\x17.google.protobuf.StructR\x04data\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\"\xf2\x01\n" +
	"\rSearchRequest\x12\x14\n" +
	"\x05table\x18\x01 \x01(\tR\x05table\x12I\n" +
	"\afilters\x18\x02 \x03(\v2/.datapower.noesis.v1.SearchRequest.FiltersEntryR\afilters\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x04 \x01(\x05R\x06offset\x12\x16\n" +
	"\x06fields\x18\x05 \x03(\tR\x06fields\x1a:\n" +
	"\fFiltersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"z\n" +
	"\x0eSearchResponse\x121\n" +
	"\aresults\x18\x01 \x03(\v2\x17.google.protobuf.StructR\aresults\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\"T\n" +
	"\x12BatchLookupRequest\x12\x14\n" +
	"\x05table\x18\x01 \x01(\tR\x05table\x12\x10\n" +
	"\x03ids\x18\x02 \x03(\tR\x03ids\x12\x16\n" +
	"\x06fields\x18\x03 \x03(\tR\x06fields\"\xee\x01\n" +
	"\x13BatchLookupResponse\x12O\n" +
	"\aresults\x18\x01 \x03(\v25.datapower.noesis.v1.BatchLookupResponse.ResultsEntryR\aresults\x12\x1b\n" +
	"\tnot_found\x18\x02 \x03(\tR\bnotFound\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\x1aS\n" +
	"\fResultsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12-\n" +
	"\x05value\x18\x02 \x01(\v2\x17.google.protobuf.StructR\x05value:\x028\x01\"\x90\x02\n" +
	"\x11EnrichmentRequest\x12\x14\n" +
	"\x05table\x18\x01 \x01(\tR\x05table\x12/\n" +
	"\x06record\x18\x02 \x01(\v2\x17.google.protobuf.StructR\x06record\x12M\n" +
	"\acontext\x18\x03 \x03(\v23.datapower.noesis.v1.EnrichmentRequest.ContextEntryR\acontext\x12)\n" +
	"\x10requested_fields\x18\x04 \x03(\tR\x0frequestedFields\x1a:\n" +
	"\fContextEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x89\x02\n" +
	"\x12EnrichmentResponse\x12@\n" +
	"\x0fenriched_record\x18\x01 \x01(\v2\x17.google.protobuf.StructR\x0eenrichedRecord\x12[\n" +
	"\fadded_fields\x18\x02 \x03(\v28.datapower.noesis.v1.EnrichmentResponse.AddedFieldsEntryR\vaddedFields\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\x1a>\n" +
	"\x10AddedFieldsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"p\n" +
	"\x11ValidationRequest\x12\x14\n" +
	"\x05table\x18\x01 \x01(\tR\x05table\x12/\n" +
	"\x06record\x18\x02 \x01(\v2\x17.google.protobuf.StructR\x06record\x12\x14\n" +
	"\x05rules\x18\x03 \x03(\tR\x05rules\"h\n" +
	"\x12ValidationResponse\x12\x14\n" +
	"\x05valid\x18\x01 \x01(\bR\x05valid\x12<\n" +
	"\x06errors\x18\x02 \x03(\v2$.datapower.noesis.v1.ValidationErrorR\x06errors\"U\n" +
	"\x0fValidationError\x12\x14\n" +
	"\x05field\x18\x01 \x01(\tR\x05field\x12\x12\n" +
	"\x04rule\x18\x02 \x01(\tR\x04rule\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage2\xa2\x02\n" +
	"\x0eRawDataService\x12[\n" +
	"\n" +
	"GetRowById\x12%.datapower.noesis.v1.RowLookupRequest\x1a&.datapower.noesis.v1.RowLookupResponse\x12Q\n" +
	"\x06Search\x12\".datapower.noesis.v1.SearchRequest\x1a#.datapower.noesis.v1.SearchResponse\x12`\n" +
	"\vBatchLookup\x12'.datapower.noesis.v1.BatchLookupRequest\x1a(.datapower.noesis.v1.BatchLookupResponse2\xd7\x01\n" +
	"\x11EnrichmentService\x12_\n" +
	"\fEnrichRecord\x12&.datapower.noesis.v1.EnrichmentRequest\x1a'.datapower.noesis.v1.EnrichmentResponse\x12a\n" +
	"\x0eValidateRecord\x12&.datapower.noesis.v1.ValidationRequest\x1a'.datapower.noesis.v1.ValidationResponseBk\n" +
	"\x13datapower.noesis.v1P\x01ZRgithub.com/data-power-io/noesis-protocol/languages/go/datapower/noesis/v1;noesisv1b\x06proto3"

var (
	file_datapower_noesis_v1_services_proto_rawDescOnce sync.Once
	file_datapower_noesis_v1_services_proto_rawDescData []byte
)

func file_datapower_noesis_v1_services_proto_rawDescGZIP() []byte {
	file_datapower_noesis_v1_services_proto_rawDescOnce.Do(func() {
		file_datapower_noesis_v1_services_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_datapower_noesis_v1_services_proto_rawDesc), len(file_datapower_noesis_v1_services_proto_rawDesc)))
	})
	return file_datapower_noesis_v1_services_proto_rawDescData
}

var file_datapower_noesis_v1_services_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_datapower_noesis_v1_services_proto_goTypes = []any{
	(*RowLookupRequest)(nil),    // 0: datapower.noesis.v1.RowLookupRequest
	(*RowLookupResponse)(nil),   // 1: datapower.noesis.v1.RowLookupResponse
	(*SearchRequest)(nil),       // 2: datapower.noesis.v1.SearchRequest
	(*SearchResponse)(nil),      // 3: datapower.noesis.v1.SearchResponse
	(*BatchLookupRequest)(nil),  // 4: datapower.noesis.v1.BatchLookupRequest
	(*BatchLookupResponse)(nil), // 5: datapower.noesis.v1.BatchLookupResponse
	(*EnrichmentRequest)(nil),   // 6: datapower.noesis.v1.EnrichmentRequest
	(*EnrichmentResponse)(nil),  // 7: datapower.noesis.v1.EnrichmentResponse
	(*ValidationRequest)(nil),   // 8: datapower.noesis.v1.ValidationRequest
	(*ValidationResponse)(nil),  // 9: datapower.noesis.v1.ValidationResponse
	(*ValidationError)(nil),     // 10: datapower.noesis.v1.ValidationError
	nil,                         // 11: datapower.noesis.v1.SearchRequest.FiltersEntry
	nil,                         // 12: datapower.noesis.v1.BatchLookupResponse.ResultsEntry
	nil,                         // 13: datapower.noesis.v1.EnrichmentRequest.ContextEntry
	nil,                         // 14: datapower.noesis.v1.EnrichmentResponse.AddedFieldsEntry
	(*structpb.Struct)(nil),     // 15: google.protobuf.Struct
}
var file_datapower_noesis_v1_services_proto_depIdxs = []int32{
	15, // 0: datapower.noesis.v1.RowLookupResponse.data:type_name -> google.protobuf.Struct
	11, // 1: datapower.noesis.v1.SearchRequest.filters:type_name -> datapower.noesis.v1.SearchRequest.FiltersEntry
	15, // 2: datapower.noesis.v1.SearchResponse.results:type_name -> google.protobuf.Struct
	12, // 3: datapower.noesis.v1.BatchLookupResponse.results:type_name -> datapower.noesis.v1.BatchLookupResponse.ResultsEntry
	15, // 4: datapower.noesis.v1.EnrichmentRequest.record:type_name -> google.protobuf.Struct
	13, // 5: datapower.noesis.v1.EnrichmentRequest.context:type_name -> datapower.noesis.v1.EnrichmentRequest.ContextEntry
	15, // 6: datapower.noesis.v1.EnrichmentResponse.enriched_record:type_name -> google.protobuf.Struct
	14, // 7: datapower.noesis.v1.EnrichmentResponse.added_fields:type_name -> datapower.noesis.v1.EnrichmentResponse.AddedFieldsEntry
	15, // 8: datapower.noesis.v1.ValidationRequest.record:type_name -> google.protobuf.Struct
	10, // 9: datapower.noesis.v1.ValidationResponse.errors:type_name -> datapower.noesis.v1.ValidationError
	15, // 10: datapower.noesis.v1.BatchLookupResponse.ResultsEntry.value:type_name -> google.protobuf.Struct
	0,  // 11: datapower.noesis.v1.RawDataService.GetRowById:input_type -> datapower.noesis.v1.RowLookupRequest
	2,  // 12: datapower.noesis.v1.RawDataService.Search:input_type -> datapower.noesis.v1.SearchRequest
	4,  // 13: datapower.noesis.v1.RawDataService.BatchLookup:input_type -> datapower.noesis.v1.BatchLookupRequest
	6,  // 14: datapower.noesis.v1.EnrichmentService.EnrichRecord:input_type -> datapower.noesis.v1.EnrichmentRequest
	8,  // 15: datapower.noesis.v1.EnrichmentService.ValidateRecord:input_type -> datapower.noesis.v1.ValidationRequest
	1,  // 16: datapower.noesis.v1.RawDataService.GetRowById:output_type -> datapower.noesis.v1.RowLookupResponse
	3,  // 17: datapower.noesis.v1.RawDataService.Search:output_type -> datapower.noesis.v1.SearchResponse
	5,  // 18: datapower.noesis.v1.RawDataService.BatchLookup:output_type -> datapower.noesis.v1.BatchLookupResponse
	7,  // 19: datapower.noesis.v1.EnrichmentService.EnrichRecord:output_type -> datapower.noesis.v1.EnrichmentResponse
	9,  // 20: datapower.noesis.v1.EnrichmentService.ValidateRecord:output_type -> datapower.noesis.v1.ValidationResponse
	16, // [16:21] is the sub-list for method output_type
	11, // [11:16] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_datapower_noesis_v1_services_proto_init() }
func file_datapower_noesis_v1_services_proto_init() {
	if File_datapower_noesis_v1_services_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_datapower_noesis_v1_services_proto_rawDesc), len(file_datapower_noesis_v1_services_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_datapower_noesis_v1_services_proto_goTypes,
		DependencyIndexes: file_datapower_noesis_v1_services_proto_depIdxs,
		MessageInfos:      file_datapower_noesis_v1_services_proto_msgTypes,
	}.Build()
	File_datapower_noesis_v1_services_proto = out.File
	file_datapower_noesis_v1_services_proto_goTypes = nil
	file_datapower_noesis_v1_services_proto_depIdxs = nil
}
