// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datapower/noesis/v1/execution.proto

package datapower.noesis.v1;

/**
 * <pre>
 * ConnectorConfig holds connector-specific configuration
 * </pre>
 *
 * Protobuf type {@code datapower.noesis.v1.ConnectorConfig}
 */
public final class ConnectorConfig extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:datapower.noesis.v1.ConnectorConfig)
    ConnectorConfigOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ConnectorConfig.newBuilder() to construct.
  private ConnectorConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ConnectorConfig() {
    connectorType_ = "";
    connectorImage_ = "";
    connectorVersion_ = "";
    entityName_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ConnectorConfig();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return datapower.noesis.v1.Execution.internal_static_datapower_noesis_v1_ConnectorConfig_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 4:
        return internalGetConfig();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return datapower.noesis.v1.Execution.internal_static_datapower_noesis_v1_ConnectorConfig_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            datapower.noesis.v1.ConnectorConfig.class, datapower.noesis.v1.ConnectorConfig.Builder.class);
  }

  public static final int CONNECTOR_TYPE_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object connectorType_ = "";
  /**
   * <pre>
   * Connector type (e.g., "postgres", "mysql", "oracle")
   * </pre>
   *
   * <code>string connector_type = 1 [json_name = "connectorType"];</code>
   * @return The connectorType.
   */
  @java.lang.Override
  public java.lang.String getConnectorType() {
    java.lang.Object ref = connectorType_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      connectorType_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Connector type (e.g., "postgres", "mysql", "oracle")
   * </pre>
   *
   * <code>string connector_type = 1 [json_name = "connectorType"];</code>
   * @return The bytes for connectorType.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getConnectorTypeBytes() {
    java.lang.Object ref = connectorType_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      connectorType_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CONNECTOR_IMAGE_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object connectorImage_ = "";
  /**
   * <pre>
   * Docker image for the connector
   * </pre>
   *
   * <code>string connector_image = 2 [json_name = "connectorImage"];</code>
   * @return The connectorImage.
   */
  @java.lang.Override
  public java.lang.String getConnectorImage() {
    java.lang.Object ref = connectorImage_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      connectorImage_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Docker image for the connector
   * </pre>
   *
   * <code>string connector_image = 2 [json_name = "connectorImage"];</code>
   * @return The bytes for connectorImage.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getConnectorImageBytes() {
    java.lang.Object ref = connectorImage_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      connectorImage_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CONNECTOR_VERSION_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private volatile java.lang.Object connectorVersion_ = "";
  /**
   * <pre>
   * Connector version
   * </pre>
   *
   * <code>string connector_version = 3 [json_name = "connectorVersion"];</code>
   * @return The connectorVersion.
   */
  @java.lang.Override
  public java.lang.String getConnectorVersion() {
    java.lang.Object ref = connectorVersion_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      connectorVersion_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Connector version
   * </pre>
   *
   * <code>string connector_version = 3 [json_name = "connectorVersion"];</code>
   * @return The bytes for connectorVersion.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getConnectorVersionBytes() {
    java.lang.Object ref = connectorVersion_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      connectorVersion_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CONFIG_FIELD_NUMBER = 4;
  private static final class ConfigDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.String>newDefaultInstance(
                datapower.noesis.v1.Execution.internal_static_datapower_noesis_v1_ConnectorConfig_ConfigEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.String> config_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.String>
  internalGetConfig() {
    if (config_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          ConfigDefaultEntryHolder.defaultEntry);
    }
    return config_;
  }
  public int getConfigCount() {
    return internalGetConfig().getMap().size();
  }
  /**
   * <pre>
   * Connection configuration (credentials, endpoints, etc.)
   * </pre>
   *
   * <code>map&lt;string, string&gt; config = 4 [json_name = "config"];</code>
   */
  @java.lang.Override
  public boolean containsConfig(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetConfig().getMap().containsKey(key);
  }
  /**
   * Use {@link #getConfigMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getConfig() {
    return getConfigMap();
  }
  /**
   * <pre>
   * Connection configuration (credentials, endpoints, etc.)
   * </pre>
   *
   * <code>map&lt;string, string&gt; config = 4 [json_name = "config"];</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.String, java.lang.String> getConfigMap() {
    return internalGetConfig().getMap();
  }
  /**
   * <pre>
   * Connection configuration (credentials, endpoints, etc.)
   * </pre>
   *
   * <code>map&lt;string, string&gt; config = 4 [json_name = "config"];</code>
   */
  @java.lang.Override
  public /* nullable */
java.lang.String getConfigOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetConfig().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Connection configuration (credentials, endpoints, etc.)
   * </pre>
   *
   * <code>map&lt;string, string&gt; config = 4 [json_name = "config"];</code>
   */
  @java.lang.Override
  public java.lang.String getConfigOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetConfig().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int ENTITY_NAME_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private volatile java.lang.Object entityName_ = "";
  /**
   * <pre>
   * Entity name in source system
   * </pre>
   *
   * <code>string entity_name = 5 [json_name = "entityName"];</code>
   * @return The entityName.
   */
  @java.lang.Override
  public java.lang.String getEntityName() {
    java.lang.Object ref = entityName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      entityName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Entity name in source system
   * </pre>
   *
   * <code>string entity_name = 5 [json_name = "entityName"];</code>
   * @return The bytes for entityName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getEntityNameBytes() {
    java.lang.Object ref = entityName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      entityName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(connectorType_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, connectorType_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(connectorImage_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, connectorImage_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(connectorVersion_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, connectorVersion_);
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetConfig(),
        ConfigDefaultEntryHolder.defaultEntry,
        4);
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(entityName_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, entityName_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(connectorType_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, connectorType_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(connectorImage_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, connectorImage_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(connectorVersion_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, connectorVersion_);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
         : internalGetConfig().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
      config__ = ConfigDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, config__);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(entityName_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, entityName_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof datapower.noesis.v1.ConnectorConfig)) {
      return super.equals(obj);
    }
    datapower.noesis.v1.ConnectorConfig other = (datapower.noesis.v1.ConnectorConfig) obj;

    if (!getConnectorType()
        .equals(other.getConnectorType())) return false;
    if (!getConnectorImage()
        .equals(other.getConnectorImage())) return false;
    if (!getConnectorVersion()
        .equals(other.getConnectorVersion())) return false;
    if (!internalGetConfig().equals(
        other.internalGetConfig())) return false;
    if (!getEntityName()
        .equals(other.getEntityName())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + CONNECTOR_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + getConnectorType().hashCode();
    hash = (37 * hash) + CONNECTOR_IMAGE_FIELD_NUMBER;
    hash = (53 * hash) + getConnectorImage().hashCode();
    hash = (37 * hash) + CONNECTOR_VERSION_FIELD_NUMBER;
    hash = (53 * hash) + getConnectorVersion().hashCode();
    if (!internalGetConfig().getMap().isEmpty()) {
      hash = (37 * hash) + CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + internalGetConfig().hashCode();
    }
    hash = (37 * hash) + ENTITY_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getEntityName().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static datapower.noesis.v1.ConnectorConfig parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.ConnectorConfig parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.ConnectorConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.ConnectorConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.ConnectorConfig parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.ConnectorConfig parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.ConnectorConfig parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.ConnectorConfig parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static datapower.noesis.v1.ConnectorConfig parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static datapower.noesis.v1.ConnectorConfig parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static datapower.noesis.v1.ConnectorConfig parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.ConnectorConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(datapower.noesis.v1.ConnectorConfig prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * ConnectorConfig holds connector-specific configuration
   * </pre>
   *
   * Protobuf type {@code datapower.noesis.v1.ConnectorConfig}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:datapower.noesis.v1.ConnectorConfig)
      datapower.noesis.v1.ConnectorConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return datapower.noesis.v1.Execution.internal_static_datapower_noesis_v1_ConnectorConfig_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 4:
          return internalGetConfig();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 4:
          return internalGetMutableConfig();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return datapower.noesis.v1.Execution.internal_static_datapower_noesis_v1_ConnectorConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              datapower.noesis.v1.ConnectorConfig.class, datapower.noesis.v1.ConnectorConfig.Builder.class);
    }

    // Construct using datapower.noesis.v1.ConnectorConfig.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      connectorType_ = "";
      connectorImage_ = "";
      connectorVersion_ = "";
      internalGetMutableConfig().clear();
      entityName_ = "";
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return datapower.noesis.v1.Execution.internal_static_datapower_noesis_v1_ConnectorConfig_descriptor;
    }

    @java.lang.Override
    public datapower.noesis.v1.ConnectorConfig getDefaultInstanceForType() {
      return datapower.noesis.v1.ConnectorConfig.getDefaultInstance();
    }

    @java.lang.Override
    public datapower.noesis.v1.ConnectorConfig build() {
      datapower.noesis.v1.ConnectorConfig result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public datapower.noesis.v1.ConnectorConfig buildPartial() {
      datapower.noesis.v1.ConnectorConfig result = new datapower.noesis.v1.ConnectorConfig(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(datapower.noesis.v1.ConnectorConfig result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.connectorType_ = connectorType_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.connectorImage_ = connectorImage_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.connectorVersion_ = connectorVersion_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.config_ = internalGetConfig();
        result.config_.makeImmutable();
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.entityName_ = entityName_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof datapower.noesis.v1.ConnectorConfig) {
        return mergeFrom((datapower.noesis.v1.ConnectorConfig)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(datapower.noesis.v1.ConnectorConfig other) {
      if (other == datapower.noesis.v1.ConnectorConfig.getDefaultInstance()) return this;
      if (!other.getConnectorType().isEmpty()) {
        connectorType_ = other.connectorType_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getConnectorImage().isEmpty()) {
        connectorImage_ = other.connectorImage_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (!other.getConnectorVersion().isEmpty()) {
        connectorVersion_ = other.connectorVersion_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      internalGetMutableConfig().mergeFrom(
          other.internalGetConfig());
      bitField0_ |= 0x00000008;
      if (!other.getEntityName().isEmpty()) {
        entityName_ = other.entityName_;
        bitField0_ |= 0x00000010;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              connectorType_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              connectorImage_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              connectorVersion_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              config__ = input.readMessage(
                  ConfigDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableConfig().getMutableMap().put(
                  config__.getKey(), config__.getValue());
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              entityName_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object connectorType_ = "";
    /**
     * <pre>
     * Connector type (e.g., "postgres", "mysql", "oracle")
     * </pre>
     *
     * <code>string connector_type = 1 [json_name = "connectorType"];</code>
     * @return The connectorType.
     */
    public java.lang.String getConnectorType() {
      java.lang.Object ref = connectorType_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        connectorType_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Connector type (e.g., "postgres", "mysql", "oracle")
     * </pre>
     *
     * <code>string connector_type = 1 [json_name = "connectorType"];</code>
     * @return The bytes for connectorType.
     */
    public com.google.protobuf.ByteString
        getConnectorTypeBytes() {
      java.lang.Object ref = connectorType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        connectorType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Connector type (e.g., "postgres", "mysql", "oracle")
     * </pre>
     *
     * <code>string connector_type = 1 [json_name = "connectorType"];</code>
     * @param value The connectorType to set.
     * @return This builder for chaining.
     */
    public Builder setConnectorType(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      connectorType_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Connector type (e.g., "postgres", "mysql", "oracle")
     * </pre>
     *
     * <code>string connector_type = 1 [json_name = "connectorType"];</code>
     * @return This builder for chaining.
     */
    public Builder clearConnectorType() {
      connectorType_ = getDefaultInstance().getConnectorType();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Connector type (e.g., "postgres", "mysql", "oracle")
     * </pre>
     *
     * <code>string connector_type = 1 [json_name = "connectorType"];</code>
     * @param value The bytes for connectorType to set.
     * @return This builder for chaining.
     */
    public Builder setConnectorTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      connectorType_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object connectorImage_ = "";
    /**
     * <pre>
     * Docker image for the connector
     * </pre>
     *
     * <code>string connector_image = 2 [json_name = "connectorImage"];</code>
     * @return The connectorImage.
     */
    public java.lang.String getConnectorImage() {
      java.lang.Object ref = connectorImage_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        connectorImage_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Docker image for the connector
     * </pre>
     *
     * <code>string connector_image = 2 [json_name = "connectorImage"];</code>
     * @return The bytes for connectorImage.
     */
    public com.google.protobuf.ByteString
        getConnectorImageBytes() {
      java.lang.Object ref = connectorImage_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        connectorImage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Docker image for the connector
     * </pre>
     *
     * <code>string connector_image = 2 [json_name = "connectorImage"];</code>
     * @param value The connectorImage to set.
     * @return This builder for chaining.
     */
    public Builder setConnectorImage(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      connectorImage_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Docker image for the connector
     * </pre>
     *
     * <code>string connector_image = 2 [json_name = "connectorImage"];</code>
     * @return This builder for chaining.
     */
    public Builder clearConnectorImage() {
      connectorImage_ = getDefaultInstance().getConnectorImage();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Docker image for the connector
     * </pre>
     *
     * <code>string connector_image = 2 [json_name = "connectorImage"];</code>
     * @param value The bytes for connectorImage to set.
     * @return This builder for chaining.
     */
    public Builder setConnectorImageBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      connectorImage_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private java.lang.Object connectorVersion_ = "";
    /**
     * <pre>
     * Connector version
     * </pre>
     *
     * <code>string connector_version = 3 [json_name = "connectorVersion"];</code>
     * @return The connectorVersion.
     */
    public java.lang.String getConnectorVersion() {
      java.lang.Object ref = connectorVersion_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        connectorVersion_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Connector version
     * </pre>
     *
     * <code>string connector_version = 3 [json_name = "connectorVersion"];</code>
     * @return The bytes for connectorVersion.
     */
    public com.google.protobuf.ByteString
        getConnectorVersionBytes() {
      java.lang.Object ref = connectorVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        connectorVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Connector version
     * </pre>
     *
     * <code>string connector_version = 3 [json_name = "connectorVersion"];</code>
     * @param value The connectorVersion to set.
     * @return This builder for chaining.
     */
    public Builder setConnectorVersion(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      connectorVersion_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Connector version
     * </pre>
     *
     * <code>string connector_version = 3 [json_name = "connectorVersion"];</code>
     * @return This builder for chaining.
     */
    public Builder clearConnectorVersion() {
      connectorVersion_ = getDefaultInstance().getConnectorVersion();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Connector version
     * </pre>
     *
     * <code>string connector_version = 3 [json_name = "connectorVersion"];</code>
     * @param value The bytes for connectorVersion to set.
     * @return This builder for chaining.
     */
    public Builder setConnectorVersionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      connectorVersion_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> config_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetConfig() {
      if (config_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ConfigDefaultEntryHolder.defaultEntry);
      }
      return config_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMutableConfig() {
      if (config_ == null) {
        config_ = com.google.protobuf.MapField.newMapField(
            ConfigDefaultEntryHolder.defaultEntry);
      }
      if (!config_.isMutable()) {
        config_ = config_.copy();
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return config_;
    }
    public int getConfigCount() {
      return internalGetConfig().getMap().size();
    }
    /**
     * <pre>
     * Connection configuration (credentials, endpoints, etc.)
     * </pre>
     *
     * <code>map&lt;string, string&gt; config = 4 [json_name = "config"];</code>
     */
    @java.lang.Override
    public boolean containsConfig(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetConfig().getMap().containsKey(key);
    }
    /**
     * Use {@link #getConfigMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getConfig() {
      return getConfigMap();
    }
    /**
     * <pre>
     * Connection configuration (credentials, endpoints, etc.)
     * </pre>
     *
     * <code>map&lt;string, string&gt; config = 4 [json_name = "config"];</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.String> getConfigMap() {
      return internalGetConfig().getMap();
    }
    /**
     * <pre>
     * Connection configuration (credentials, endpoints, etc.)
     * </pre>
     *
     * <code>map&lt;string, string&gt; config = 4 [json_name = "config"];</code>
     */
    @java.lang.Override
    public /* nullable */
java.lang.String getConfigOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetConfig().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Connection configuration (credentials, endpoints, etc.)
     * </pre>
     *
     * <code>map&lt;string, string&gt; config = 4 [json_name = "config"];</code>
     */
    @java.lang.Override
    public java.lang.String getConfigOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetConfig().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    public Builder clearConfig() {
      bitField0_ = (bitField0_ & ~0x00000008);
      internalGetMutableConfig().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * Connection configuration (credentials, endpoints, etc.)
     * </pre>
     *
     * <code>map&lt;string, string&gt; config = 4 [json_name = "config"];</code>
     */
    public Builder removeConfig(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableConfig().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String>
        getMutableConfig() {
      bitField0_ |= 0x00000008;
      return internalGetMutableConfig().getMutableMap();
    }
    /**
     * <pre>
     * Connection configuration (credentials, endpoints, etc.)
     * </pre>
     *
     * <code>map&lt;string, string&gt; config = 4 [json_name = "config"];</code>
     */
    public Builder putConfig(
        java.lang.String key,
        java.lang.String value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) { throw new NullPointerException("map value"); }
      internalGetMutableConfig().getMutableMap()
          .put(key, value);
      bitField0_ |= 0x00000008;
      return this;
    }
    /**
     * <pre>
     * Connection configuration (credentials, endpoints, etc.)
     * </pre>
     *
     * <code>map&lt;string, string&gt; config = 4 [json_name = "config"];</code>
     */
    public Builder putAllConfig(
        java.util.Map<java.lang.String, java.lang.String> values) {
      internalGetMutableConfig().getMutableMap()
          .putAll(values);
      bitField0_ |= 0x00000008;
      return this;
    }

    private java.lang.Object entityName_ = "";
    /**
     * <pre>
     * Entity name in source system
     * </pre>
     *
     * <code>string entity_name = 5 [json_name = "entityName"];</code>
     * @return The entityName.
     */
    public java.lang.String getEntityName() {
      java.lang.Object ref = entityName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        entityName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Entity name in source system
     * </pre>
     *
     * <code>string entity_name = 5 [json_name = "entityName"];</code>
     * @return The bytes for entityName.
     */
    public com.google.protobuf.ByteString
        getEntityNameBytes() {
      java.lang.Object ref = entityName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        entityName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Entity name in source system
     * </pre>
     *
     * <code>string entity_name = 5 [json_name = "entityName"];</code>
     * @param value The entityName to set.
     * @return This builder for chaining.
     */
    public Builder setEntityName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      entityName_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Entity name in source system
     * </pre>
     *
     * <code>string entity_name = 5 [json_name = "entityName"];</code>
     * @return This builder for chaining.
     */
    public Builder clearEntityName() {
      entityName_ = getDefaultInstance().getEntityName();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Entity name in source system
     * </pre>
     *
     * <code>string entity_name = 5 [json_name = "entityName"];</code>
     * @param value The bytes for entityName to set.
     * @return This builder for chaining.
     */
    public Builder setEntityNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      entityName_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:datapower.noesis.v1.ConnectorConfig)
  }

  // @@protoc_insertion_point(class_scope:datapower.noesis.v1.ConnectorConfig)
  private static final datapower.noesis.v1.ConnectorConfig DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new datapower.noesis.v1.ConnectorConfig();
  }

  public static datapower.noesis.v1.ConnectorConfig getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ConnectorConfig>
      PARSER = new com.google.protobuf.AbstractParser<ConnectorConfig>() {
    @java.lang.Override
    public ConnectorConfig parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ConnectorConfig> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ConnectorConfig> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public datapower.noesis.v1.ConnectorConfig getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

