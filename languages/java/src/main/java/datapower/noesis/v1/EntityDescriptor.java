// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datapower/noesis/v1/connector.proto

package datapower.noesis.v1;

/**
 * <pre>
 * An entity is either a business object (NODE) or a link object (LINK) with attributes.
 * LINKs must declare their src/dst endpoints (logical FKs).
 * </pre>
 *
 * Protobuf type {@code datapower.noesis.v1.EntityDescriptor}
 */
public final class EntityDescriptor extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:datapower.noesis.v1.EntityDescriptor)
    EntityDescriptorOrBuilder {
private static final long serialVersionUID = 0L;
  // Use EntityDescriptor.newBuilder() to construct.
  private EntityDescriptor(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private EntityDescriptor() {
    name_ = "";
    kind_ = 0;
    displayName_ = "";
    description_ = "";
    primaryKey_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    uniqueKeys_ = java.util.Collections.emptyList();
    softDeleteField_ = "";
    cursors_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new EntityDescriptor();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_EntityDescriptor_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_EntityDescriptor_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            datapower.noesis.v1.EntityDescriptor.class, datapower.noesis.v1.EntityDescriptor.Builder.class);
  }

  public static final int NAME_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object name_ = "";
  /**
   * <pre>
   * e.g., "Part", "Document", "BOMLink"
   * </pre>
   *
   * <code>string name = 1 [json_name = "name"];</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * e.g., "Part", "Document", "BOMLink"
   * </pre>
   *
   * <code>string name = 1 [json_name = "name"];</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int KIND_FIELD_NUMBER = 2;
  private int kind_ = 0;
  /**
   * <pre>
   * NODE or LINK
   * </pre>
   *
   * <code>.datapower.noesis.v1.EntityKind kind = 2 [json_name = "kind"];</code>
   * @return The enum numeric value on the wire for kind.
   */
  @java.lang.Override public int getKindValue() {
    return kind_;
  }
  /**
   * <pre>
   * NODE or LINK
   * </pre>
   *
   * <code>.datapower.noesis.v1.EntityKind kind = 2 [json_name = "kind"];</code>
   * @return The kind.
   */
  @java.lang.Override public datapower.noesis.v1.EntityKind getKind() {
    datapower.noesis.v1.EntityKind result = datapower.noesis.v1.EntityKind.forNumber(kind_);
    return result == null ? datapower.noesis.v1.EntityKind.UNRECOGNIZED : result;
  }

  public static final int DISPLAY_NAME_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private volatile java.lang.Object displayName_ = "";
  /**
   * <pre>
   * Human-friendly label
   * </pre>
   *
   * <code>string display_name = 3 [json_name = "displayName"];</code>
   * @return The displayName.
   */
  @java.lang.Override
  public java.lang.String getDisplayName() {
    java.lang.Object ref = displayName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      displayName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Human-friendly label
   * </pre>
   *
   * <code>string display_name = 3 [json_name = "displayName"];</code>
   * @return The bytes for displayName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDisplayNameBytes() {
    java.lang.Object ref = displayName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      displayName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DESCRIPTION_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private volatile java.lang.Object description_ = "";
  /**
   * <pre>
   * Optional docs
   * </pre>
   *
   * <code>string description = 4 [json_name = "description"];</code>
   * @return The description.
   */
  @java.lang.Override
  public java.lang.String getDescription() {
    java.lang.Object ref = description_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      description_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Optional docs
   * </pre>
   *
   * <code>string description = 4 [json_name = "description"];</code>
   * @return The bytes for description.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDescriptionBytes() {
    java.lang.Object ref = description_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      description_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SCHEMA_FIELD_NUMBER = 5;
  private datapower.noesis.v1.StructuredSchemaDescriptor schema_;
  /**
   * <pre>
   * Schema in structured format
   * </pre>
   *
   * <code>.datapower.noesis.v1.StructuredSchemaDescriptor schema = 5 [json_name = "schema"];</code>
   * @return Whether the schema field is set.
   */
  @java.lang.Override
  public boolean hasSchema() {
    return schema_ != null;
  }
  /**
   * <pre>
   * Schema in structured format
   * </pre>
   *
   * <code>.datapower.noesis.v1.StructuredSchemaDescriptor schema = 5 [json_name = "schema"];</code>
   * @return The schema.
   */
  @java.lang.Override
  public datapower.noesis.v1.StructuredSchemaDescriptor getSchema() {
    return schema_ == null ? datapower.noesis.v1.StructuredSchemaDescriptor.getDefaultInstance() : schema_;
  }
  /**
   * <pre>
   * Schema in structured format
   * </pre>
   *
   * <code>.datapower.noesis.v1.StructuredSchemaDescriptor schema = 5 [json_name = "schema"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.StructuredSchemaDescriptorOrBuilder getSchemaOrBuilder() {
    return schema_ == null ? datapower.noesis.v1.StructuredSchemaDescriptor.getDefaultInstance() : schema_;
  }

  public static final int PRIMARY_KEY_FIELD_NUMBER = 6;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringArrayList primaryKey_ =
      com.google.protobuf.LazyStringArrayList.emptyList();
  /**
   * <pre>
   * Keys &amp; relational hints.
   * </pre>
   *
   * <code>repeated string primary_key = 6 [json_name = "primaryKey"];</code>
   * @return A list containing the primaryKey.
   */
  public com.google.protobuf.ProtocolStringList
      getPrimaryKeyList() {
    return primaryKey_;
  }
  /**
   * <pre>
   * Keys &amp; relational hints.
   * </pre>
   *
   * <code>repeated string primary_key = 6 [json_name = "primaryKey"];</code>
   * @return The count of primaryKey.
   */
  public int getPrimaryKeyCount() {
    return primaryKey_.size();
  }
  /**
   * <pre>
   * Keys &amp; relational hints.
   * </pre>
   *
   * <code>repeated string primary_key = 6 [json_name = "primaryKey"];</code>
   * @param index The index of the element to return.
   * @return The primaryKey at the given index.
   */
  public java.lang.String getPrimaryKey(int index) {
    return primaryKey_.get(index);
  }
  /**
   * <pre>
   * Keys &amp; relational hints.
   * </pre>
   *
   * <code>repeated string primary_key = 6 [json_name = "primaryKey"];</code>
   * @param index The index of the value to return.
   * @return The bytes of the primaryKey at the given index.
   */
  public com.google.protobuf.ByteString
      getPrimaryKeyBytes(int index) {
    return primaryKey_.getByteString(index);
  }

  public static final int UNIQUE_KEYS_FIELD_NUMBER = 7;
  @SuppressWarnings("serial")
  private java.util.List<datapower.noesis.v1.UniqueKey> uniqueKeys_;
  /**
   * <pre>
   * Additional unique constraints
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.UniqueKey unique_keys = 7 [json_name = "uniqueKeys"];</code>
   */
  @java.lang.Override
  public java.util.List<datapower.noesis.v1.UniqueKey> getUniqueKeysList() {
    return uniqueKeys_;
  }
  /**
   * <pre>
   * Additional unique constraints
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.UniqueKey unique_keys = 7 [json_name = "uniqueKeys"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends datapower.noesis.v1.UniqueKeyOrBuilder> 
      getUniqueKeysOrBuilderList() {
    return uniqueKeys_;
  }
  /**
   * <pre>
   * Additional unique constraints
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.UniqueKey unique_keys = 7 [json_name = "uniqueKeys"];</code>
   */
  @java.lang.Override
  public int getUniqueKeysCount() {
    return uniqueKeys_.size();
  }
  /**
   * <pre>
   * Additional unique constraints
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.UniqueKey unique_keys = 7 [json_name = "uniqueKeys"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.UniqueKey getUniqueKeys(int index) {
    return uniqueKeys_.get(index);
  }
  /**
   * <pre>
   * Additional unique constraints
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.UniqueKey unique_keys = 7 [json_name = "uniqueKeys"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.UniqueKeyOrBuilder getUniqueKeysOrBuilder(
      int index) {
    return uniqueKeys_.get(index);
  }

  public static final int SOFT_DELETE_FIELD_NUMBER = 8;
  private boolean softDelete_ = false;
  /**
   * <pre>
   * If soft deletes exist
   * </pre>
   *
   * <code>bool soft_delete = 8 [json_name = "softDelete"];</code>
   * @return The softDelete.
   */
  @java.lang.Override
  public boolean getSoftDelete() {
    return softDelete_;
  }

  public static final int SOFT_DELETE_FIELD_FIELD_NUMBER = 9;
  @SuppressWarnings("serial")
  private volatile java.lang.Object softDeleteField_ = "";
  /**
   * <pre>
   * Field name for soft delete marker (e.g., "deleted_at")
   * </pre>
   *
   * <code>string soft_delete_field = 9 [json_name = "softDeleteField"];</code>
   * @return The softDeleteField.
   */
  @java.lang.Override
  public java.lang.String getSoftDeleteField() {
    java.lang.Object ref = softDeleteField_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      softDeleteField_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Field name for soft delete marker (e.g., "deleted_at")
   * </pre>
   *
   * <code>string soft_delete_field = 9 [json_name = "softDeleteField"];</code>
   * @return The bytes for softDeleteField.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSoftDeleteFieldBytes() {
    java.lang.Object ref = softDeleteField_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      softDeleteField_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SRC_FIELD_NUMBER = 10;
  private datapower.noesis.v1.LinkEndpoint src_;
  /**
   * <pre>
   * For LINK (kind=LINK): logical endpoints the link connects (should match target entity PKs).
   * </pre>
   *
   * <code>.datapower.noesis.v1.LinkEndpoint src = 10 [json_name = "src"];</code>
   * @return Whether the src field is set.
   */
  @java.lang.Override
  public boolean hasSrc() {
    return src_ != null;
  }
  /**
   * <pre>
   * For LINK (kind=LINK): logical endpoints the link connects (should match target entity PKs).
   * </pre>
   *
   * <code>.datapower.noesis.v1.LinkEndpoint src = 10 [json_name = "src"];</code>
   * @return The src.
   */
  @java.lang.Override
  public datapower.noesis.v1.LinkEndpoint getSrc() {
    return src_ == null ? datapower.noesis.v1.LinkEndpoint.getDefaultInstance() : src_;
  }
  /**
   * <pre>
   * For LINK (kind=LINK): logical endpoints the link connects (should match target entity PKs).
   * </pre>
   *
   * <code>.datapower.noesis.v1.LinkEndpoint src = 10 [json_name = "src"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.LinkEndpointOrBuilder getSrcOrBuilder() {
    return src_ == null ? datapower.noesis.v1.LinkEndpoint.getDefaultInstance() : src_;
  }

  public static final int DST_FIELD_NUMBER = 11;
  private datapower.noesis.v1.LinkEndpoint dst_;
  /**
   * <code>.datapower.noesis.v1.LinkEndpoint dst = 11 [json_name = "dst"];</code>
   * @return Whether the dst field is set.
   */
  @java.lang.Override
  public boolean hasDst() {
    return dst_ != null;
  }
  /**
   * <code>.datapower.noesis.v1.LinkEndpoint dst = 11 [json_name = "dst"];</code>
   * @return The dst.
   */
  @java.lang.Override
  public datapower.noesis.v1.LinkEndpoint getDst() {
    return dst_ == null ? datapower.noesis.v1.LinkEndpoint.getDefaultInstance() : dst_;
  }
  /**
   * <code>.datapower.noesis.v1.LinkEndpoint dst = 11 [json_name = "dst"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.LinkEndpointOrBuilder getDstOrBuilder() {
    return dst_ == null ? datapower.noesis.v1.LinkEndpoint.getDefaultInstance() : dst_;
  }

  public static final int CURSORS_FIELD_NUMBER = 12;
  @SuppressWarnings("serial")
  private java.util.List<datapower.noesis.v1.CursorField> cursors_;
  /**
   * <pre>
   * Supported cursor fields for incremental reads (updated_at, version, LSN, etc.).
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.CursorField cursors = 12 [json_name = "cursors"];</code>
   */
  @java.lang.Override
  public java.util.List<datapower.noesis.v1.CursorField> getCursorsList() {
    return cursors_;
  }
  /**
   * <pre>
   * Supported cursor fields for incremental reads (updated_at, version, LSN, etc.).
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.CursorField cursors = 12 [json_name = "cursors"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends datapower.noesis.v1.CursorFieldOrBuilder> 
      getCursorsOrBuilderList() {
    return cursors_;
  }
  /**
   * <pre>
   * Supported cursor fields for incremental reads (updated_at, version, LSN, etc.).
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.CursorField cursors = 12 [json_name = "cursors"];</code>
   */
  @java.lang.Override
  public int getCursorsCount() {
    return cursors_.size();
  }
  /**
   * <pre>
   * Supported cursor fields for incremental reads (updated_at, version, LSN, etc.).
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.CursorField cursors = 12 [json_name = "cursors"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.CursorField getCursors(int index) {
    return cursors_.get(index);
  }
  /**
   * <pre>
   * Supported cursor fields for incremental reads (updated_at, version, LSN, etc.).
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.CursorField cursors = 12 [json_name = "cursors"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.CursorFieldOrBuilder getCursorsOrBuilder(
      int index) {
    return cursors_.get(index);
  }

  public static final int CAPABILITIES_FIELD_NUMBER = 13;
  private datapower.noesis.v1.ExtractionCapabilities capabilities_;
  /**
   * <pre>
   * Which extraction modes / features are supported by this entity.
   * </pre>
   *
   * <code>.datapower.noesis.v1.ExtractionCapabilities capabilities = 13 [json_name = "capabilities"];</code>
   * @return Whether the capabilities field is set.
   */
  @java.lang.Override
  public boolean hasCapabilities() {
    return capabilities_ != null;
  }
  /**
   * <pre>
   * Which extraction modes / features are supported by this entity.
   * </pre>
   *
   * <code>.datapower.noesis.v1.ExtractionCapabilities capabilities = 13 [json_name = "capabilities"];</code>
   * @return The capabilities.
   */
  @java.lang.Override
  public datapower.noesis.v1.ExtractionCapabilities getCapabilities() {
    return capabilities_ == null ? datapower.noesis.v1.ExtractionCapabilities.getDefaultInstance() : capabilities_;
  }
  /**
   * <pre>
   * Which extraction modes / features are supported by this entity.
   * </pre>
   *
   * <code>.datapower.noesis.v1.ExtractionCapabilities capabilities = 13 [json_name = "capabilities"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.ExtractionCapabilitiesOrBuilder getCapabilitiesOrBuilder() {
    return capabilities_ == null ? datapower.noesis.v1.ExtractionCapabilities.getDefaultInstance() : capabilities_;
  }

  public static final int ESTIMATED_ROWS_FIELD_NUMBER = 14;
  private long estimatedRows_ = 0L;
  /**
   * <pre>
   * Optional sizing hint.
   * </pre>
   *
   * <code>int64 estimated_rows = 14 [json_name = "estimatedRows"];</code>
   * @return The estimatedRows.
   */
  @java.lang.Override
  public long getEstimatedRows() {
    return estimatedRows_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
    }
    if (kind_ != datapower.noesis.v1.EntityKind.KIND_UNSPECIFIED.getNumber()) {
      output.writeEnum(2, kind_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(displayName_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, displayName_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(description_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, description_);
    }
    if (schema_ != null) {
      output.writeMessage(5, getSchema());
    }
    for (int i = 0; i < primaryKey_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, primaryKey_.getRaw(i));
    }
    for (int i = 0; i < uniqueKeys_.size(); i++) {
      output.writeMessage(7, uniqueKeys_.get(i));
    }
    if (softDelete_ != false) {
      output.writeBool(8, softDelete_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(softDeleteField_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 9, softDeleteField_);
    }
    if (src_ != null) {
      output.writeMessage(10, getSrc());
    }
    if (dst_ != null) {
      output.writeMessage(11, getDst());
    }
    for (int i = 0; i < cursors_.size(); i++) {
      output.writeMessage(12, cursors_.get(i));
    }
    if (capabilities_ != null) {
      output.writeMessage(13, getCapabilities());
    }
    if (estimatedRows_ != 0L) {
      output.writeInt64(14, estimatedRows_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
    }
    if (kind_ != datapower.noesis.v1.EntityKind.KIND_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, kind_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(displayName_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, displayName_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(description_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, description_);
    }
    if (schema_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getSchema());
    }
    {
      int dataSize = 0;
      for (int i = 0; i < primaryKey_.size(); i++) {
        dataSize += computeStringSizeNoTag(primaryKey_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getPrimaryKeyList().size();
    }
    for (int i = 0; i < uniqueKeys_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, uniqueKeys_.get(i));
    }
    if (softDelete_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(8, softDelete_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(softDeleteField_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, softDeleteField_);
    }
    if (src_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, getSrc());
    }
    if (dst_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, getDst());
    }
    for (int i = 0; i < cursors_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(12, cursors_.get(i));
    }
    if (capabilities_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(13, getCapabilities());
    }
    if (estimatedRows_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(14, estimatedRows_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof datapower.noesis.v1.EntityDescriptor)) {
      return super.equals(obj);
    }
    datapower.noesis.v1.EntityDescriptor other = (datapower.noesis.v1.EntityDescriptor) obj;

    if (!getName()
        .equals(other.getName())) return false;
    if (kind_ != other.kind_) return false;
    if (!getDisplayName()
        .equals(other.getDisplayName())) return false;
    if (!getDescription()
        .equals(other.getDescription())) return false;
    if (hasSchema() != other.hasSchema()) return false;
    if (hasSchema()) {
      if (!getSchema()
          .equals(other.getSchema())) return false;
    }
    if (!getPrimaryKeyList()
        .equals(other.getPrimaryKeyList())) return false;
    if (!getUniqueKeysList()
        .equals(other.getUniqueKeysList())) return false;
    if (getSoftDelete()
        != other.getSoftDelete()) return false;
    if (!getSoftDeleteField()
        .equals(other.getSoftDeleteField())) return false;
    if (hasSrc() != other.hasSrc()) return false;
    if (hasSrc()) {
      if (!getSrc()
          .equals(other.getSrc())) return false;
    }
    if (hasDst() != other.hasDst()) return false;
    if (hasDst()) {
      if (!getDst()
          .equals(other.getDst())) return false;
    }
    if (!getCursorsList()
        .equals(other.getCursorsList())) return false;
    if (hasCapabilities() != other.hasCapabilities()) return false;
    if (hasCapabilities()) {
      if (!getCapabilities()
          .equals(other.getCapabilities())) return false;
    }
    if (getEstimatedRows()
        != other.getEstimatedRows()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    hash = (37 * hash) + KIND_FIELD_NUMBER;
    hash = (53 * hash) + kind_;
    hash = (37 * hash) + DISPLAY_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getDisplayName().hashCode();
    hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
    hash = (53 * hash) + getDescription().hashCode();
    if (hasSchema()) {
      hash = (37 * hash) + SCHEMA_FIELD_NUMBER;
      hash = (53 * hash) + getSchema().hashCode();
    }
    if (getPrimaryKeyCount() > 0) {
      hash = (37 * hash) + PRIMARY_KEY_FIELD_NUMBER;
      hash = (53 * hash) + getPrimaryKeyList().hashCode();
    }
    if (getUniqueKeysCount() > 0) {
      hash = (37 * hash) + UNIQUE_KEYS_FIELD_NUMBER;
      hash = (53 * hash) + getUniqueKeysList().hashCode();
    }
    hash = (37 * hash) + SOFT_DELETE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getSoftDelete());
    hash = (37 * hash) + SOFT_DELETE_FIELD_FIELD_NUMBER;
    hash = (53 * hash) + getSoftDeleteField().hashCode();
    if (hasSrc()) {
      hash = (37 * hash) + SRC_FIELD_NUMBER;
      hash = (53 * hash) + getSrc().hashCode();
    }
    if (hasDst()) {
      hash = (37 * hash) + DST_FIELD_NUMBER;
      hash = (53 * hash) + getDst().hashCode();
    }
    if (getCursorsCount() > 0) {
      hash = (37 * hash) + CURSORS_FIELD_NUMBER;
      hash = (53 * hash) + getCursorsList().hashCode();
    }
    if (hasCapabilities()) {
      hash = (37 * hash) + CAPABILITIES_FIELD_NUMBER;
      hash = (53 * hash) + getCapabilities().hashCode();
    }
    hash = (37 * hash) + ESTIMATED_ROWS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getEstimatedRows());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static datapower.noesis.v1.EntityDescriptor parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.EntityDescriptor parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.EntityDescriptor parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.EntityDescriptor parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.EntityDescriptor parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.EntityDescriptor parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.EntityDescriptor parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.EntityDescriptor parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static datapower.noesis.v1.EntityDescriptor parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static datapower.noesis.v1.EntityDescriptor parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static datapower.noesis.v1.EntityDescriptor parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.EntityDescriptor parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(datapower.noesis.v1.EntityDescriptor prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * An entity is either a business object (NODE) or a link object (LINK) with attributes.
   * LINKs must declare their src/dst endpoints (logical FKs).
   * </pre>
   *
   * Protobuf type {@code datapower.noesis.v1.EntityDescriptor}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:datapower.noesis.v1.EntityDescriptor)
      datapower.noesis.v1.EntityDescriptorOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_EntityDescriptor_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_EntityDescriptor_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              datapower.noesis.v1.EntityDescriptor.class, datapower.noesis.v1.EntityDescriptor.Builder.class);
    }

    // Construct using datapower.noesis.v1.EntityDescriptor.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      name_ = "";
      kind_ = 0;
      displayName_ = "";
      description_ = "";
      schema_ = null;
      if (schemaBuilder_ != null) {
        schemaBuilder_.dispose();
        schemaBuilder_ = null;
      }
      primaryKey_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      if (uniqueKeysBuilder_ == null) {
        uniqueKeys_ = java.util.Collections.emptyList();
      } else {
        uniqueKeys_ = null;
        uniqueKeysBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000040);
      softDelete_ = false;
      softDeleteField_ = "";
      src_ = null;
      if (srcBuilder_ != null) {
        srcBuilder_.dispose();
        srcBuilder_ = null;
      }
      dst_ = null;
      if (dstBuilder_ != null) {
        dstBuilder_.dispose();
        dstBuilder_ = null;
      }
      if (cursorsBuilder_ == null) {
        cursors_ = java.util.Collections.emptyList();
      } else {
        cursors_ = null;
        cursorsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000800);
      capabilities_ = null;
      if (capabilitiesBuilder_ != null) {
        capabilitiesBuilder_.dispose();
        capabilitiesBuilder_ = null;
      }
      estimatedRows_ = 0L;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_EntityDescriptor_descriptor;
    }

    @java.lang.Override
    public datapower.noesis.v1.EntityDescriptor getDefaultInstanceForType() {
      return datapower.noesis.v1.EntityDescriptor.getDefaultInstance();
    }

    @java.lang.Override
    public datapower.noesis.v1.EntityDescriptor build() {
      datapower.noesis.v1.EntityDescriptor result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public datapower.noesis.v1.EntityDescriptor buildPartial() {
      datapower.noesis.v1.EntityDescriptor result = new datapower.noesis.v1.EntityDescriptor(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(datapower.noesis.v1.EntityDescriptor result) {
      if (uniqueKeysBuilder_ == null) {
        if (((bitField0_ & 0x00000040) != 0)) {
          uniqueKeys_ = java.util.Collections.unmodifiableList(uniqueKeys_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.uniqueKeys_ = uniqueKeys_;
      } else {
        result.uniqueKeys_ = uniqueKeysBuilder_.build();
      }
      if (cursorsBuilder_ == null) {
        if (((bitField0_ & 0x00000800) != 0)) {
          cursors_ = java.util.Collections.unmodifiableList(cursors_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.cursors_ = cursors_;
      } else {
        result.cursors_ = cursorsBuilder_.build();
      }
    }

    private void buildPartial0(datapower.noesis.v1.EntityDescriptor result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.name_ = name_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.kind_ = kind_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.displayName_ = displayName_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.description_ = description_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.schema_ = schemaBuilder_ == null
            ? schema_
            : schemaBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        primaryKey_.makeImmutable();
        result.primaryKey_ = primaryKey_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.softDelete_ = softDelete_;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.softDeleteField_ = softDeleteField_;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.src_ = srcBuilder_ == null
            ? src_
            : srcBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000400) != 0)) {
        result.dst_ = dstBuilder_ == null
            ? dst_
            : dstBuilder_.build();
      }
      if (((from_bitField0_ & 0x00001000) != 0)) {
        result.capabilities_ = capabilitiesBuilder_ == null
            ? capabilities_
            : capabilitiesBuilder_.build();
      }
      if (((from_bitField0_ & 0x00002000) != 0)) {
        result.estimatedRows_ = estimatedRows_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof datapower.noesis.v1.EntityDescriptor) {
        return mergeFrom((datapower.noesis.v1.EntityDescriptor)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(datapower.noesis.v1.EntityDescriptor other) {
      if (other == datapower.noesis.v1.EntityDescriptor.getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.kind_ != 0) {
        setKindValue(other.getKindValue());
      }
      if (!other.getDisplayName().isEmpty()) {
        displayName_ = other.displayName_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (!other.getDescription().isEmpty()) {
        description_ = other.description_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      if (other.hasSchema()) {
        mergeSchema(other.getSchema());
      }
      if (!other.primaryKey_.isEmpty()) {
        if (primaryKey_.isEmpty()) {
          primaryKey_ = other.primaryKey_;
          bitField0_ |= 0x00000020;
        } else {
          ensurePrimaryKeyIsMutable();
          primaryKey_.addAll(other.primaryKey_);
        }
        onChanged();
      }
      if (uniqueKeysBuilder_ == null) {
        if (!other.uniqueKeys_.isEmpty()) {
          if (uniqueKeys_.isEmpty()) {
            uniqueKeys_ = other.uniqueKeys_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureUniqueKeysIsMutable();
            uniqueKeys_.addAll(other.uniqueKeys_);
          }
          onChanged();
        }
      } else {
        if (!other.uniqueKeys_.isEmpty()) {
          if (uniqueKeysBuilder_.isEmpty()) {
            uniqueKeysBuilder_.dispose();
            uniqueKeysBuilder_ = null;
            uniqueKeys_ = other.uniqueKeys_;
            bitField0_ = (bitField0_ & ~0x00000040);
            uniqueKeysBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getUniqueKeysFieldBuilder() : null;
          } else {
            uniqueKeysBuilder_.addAllMessages(other.uniqueKeys_);
          }
        }
      }
      if (other.getSoftDelete() != false) {
        setSoftDelete(other.getSoftDelete());
      }
      if (!other.getSoftDeleteField().isEmpty()) {
        softDeleteField_ = other.softDeleteField_;
        bitField0_ |= 0x00000100;
        onChanged();
      }
      if (other.hasSrc()) {
        mergeSrc(other.getSrc());
      }
      if (other.hasDst()) {
        mergeDst(other.getDst());
      }
      if (cursorsBuilder_ == null) {
        if (!other.cursors_.isEmpty()) {
          if (cursors_.isEmpty()) {
            cursors_ = other.cursors_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureCursorsIsMutable();
            cursors_.addAll(other.cursors_);
          }
          onChanged();
        }
      } else {
        if (!other.cursors_.isEmpty()) {
          if (cursorsBuilder_.isEmpty()) {
            cursorsBuilder_.dispose();
            cursorsBuilder_ = null;
            cursors_ = other.cursors_;
            bitField0_ = (bitField0_ & ~0x00000800);
            cursorsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getCursorsFieldBuilder() : null;
          } else {
            cursorsBuilder_.addAllMessages(other.cursors_);
          }
        }
      }
      if (other.hasCapabilities()) {
        mergeCapabilities(other.getCapabilities());
      }
      if (other.getEstimatedRows() != 0L) {
        setEstimatedRows(other.getEstimatedRows());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              name_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 16: {
              kind_ = input.readEnum();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 26: {
              displayName_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              description_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getSchemaFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();
              ensurePrimaryKeyIsMutable();
              primaryKey_.add(s);
              break;
            } // case 50
            case 58: {
              datapower.noesis.v1.UniqueKey m =
                  input.readMessage(
                      datapower.noesis.v1.UniqueKey.parser(),
                      extensionRegistry);
              if (uniqueKeysBuilder_ == null) {
                ensureUniqueKeysIsMutable();
                uniqueKeys_.add(m);
              } else {
                uniqueKeysBuilder_.addMessage(m);
              }
              break;
            } // case 58
            case 64: {
              softDelete_ = input.readBool();
              bitField0_ |= 0x00000080;
              break;
            } // case 64
            case 74: {
              softDeleteField_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000100;
              break;
            } // case 74
            case 82: {
              input.readMessage(
                  getSrcFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000200;
              break;
            } // case 82
            case 90: {
              input.readMessage(
                  getDstFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000400;
              break;
            } // case 90
            case 98: {
              datapower.noesis.v1.CursorField m =
                  input.readMessage(
                      datapower.noesis.v1.CursorField.parser(),
                      extensionRegistry);
              if (cursorsBuilder_ == null) {
                ensureCursorsIsMutable();
                cursors_.add(m);
              } else {
                cursorsBuilder_.addMessage(m);
              }
              break;
            } // case 98
            case 106: {
              input.readMessage(
                  getCapabilitiesFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00001000;
              break;
            } // case 106
            case 112: {
              estimatedRows_ = input.readInt64();
              bitField0_ |= 0x00002000;
              break;
            } // case 112
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object name_ = "";
    /**
     * <pre>
     * e.g., "Part", "Document", "BOMLink"
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * e.g., "Part", "Document", "BOMLink"
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * e.g., "Part", "Document", "BOMLink"
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * e.g., "Part", "Document", "BOMLink"
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      name_ = getDefaultInstance().getName();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * e.g., "Part", "Document", "BOMLink"
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private int kind_ = 0;
    /**
     * <pre>
     * NODE or LINK
     * </pre>
     *
     * <code>.datapower.noesis.v1.EntityKind kind = 2 [json_name = "kind"];</code>
     * @return The enum numeric value on the wire for kind.
     */
    @java.lang.Override public int getKindValue() {
      return kind_;
    }
    /**
     * <pre>
     * NODE or LINK
     * </pre>
     *
     * <code>.datapower.noesis.v1.EntityKind kind = 2 [json_name = "kind"];</code>
     * @param value The enum numeric value on the wire for kind to set.
     * @return This builder for chaining.
     */
    public Builder setKindValue(int value) {
      kind_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * NODE or LINK
     * </pre>
     *
     * <code>.datapower.noesis.v1.EntityKind kind = 2 [json_name = "kind"];</code>
     * @return The kind.
     */
    @java.lang.Override
    public datapower.noesis.v1.EntityKind getKind() {
      datapower.noesis.v1.EntityKind result = datapower.noesis.v1.EntityKind.forNumber(kind_);
      return result == null ? datapower.noesis.v1.EntityKind.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * NODE or LINK
     * </pre>
     *
     * <code>.datapower.noesis.v1.EntityKind kind = 2 [json_name = "kind"];</code>
     * @param value The kind to set.
     * @return This builder for chaining.
     */
    public Builder setKind(datapower.noesis.v1.EntityKind value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      kind_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * NODE or LINK
     * </pre>
     *
     * <code>.datapower.noesis.v1.EntityKind kind = 2 [json_name = "kind"];</code>
     * @return This builder for chaining.
     */
    public Builder clearKind() {
      bitField0_ = (bitField0_ & ~0x00000002);
      kind_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object displayName_ = "";
    /**
     * <pre>
     * Human-friendly label
     * </pre>
     *
     * <code>string display_name = 3 [json_name = "displayName"];</code>
     * @return The displayName.
     */
    public java.lang.String getDisplayName() {
      java.lang.Object ref = displayName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        displayName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Human-friendly label
     * </pre>
     *
     * <code>string display_name = 3 [json_name = "displayName"];</code>
     * @return The bytes for displayName.
     */
    public com.google.protobuf.ByteString
        getDisplayNameBytes() {
      java.lang.Object ref = displayName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        displayName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Human-friendly label
     * </pre>
     *
     * <code>string display_name = 3 [json_name = "displayName"];</code>
     * @param value The displayName to set.
     * @return This builder for chaining.
     */
    public Builder setDisplayName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      displayName_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Human-friendly label
     * </pre>
     *
     * <code>string display_name = 3 [json_name = "displayName"];</code>
     * @return This builder for chaining.
     */
    public Builder clearDisplayName() {
      displayName_ = getDefaultInstance().getDisplayName();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Human-friendly label
     * </pre>
     *
     * <code>string display_name = 3 [json_name = "displayName"];</code>
     * @param value The bytes for displayName to set.
     * @return This builder for chaining.
     */
    public Builder setDisplayNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      displayName_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private java.lang.Object description_ = "";
    /**
     * <pre>
     * Optional docs
     * </pre>
     *
     * <code>string description = 4 [json_name = "description"];</code>
     * @return The description.
     */
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Optional docs
     * </pre>
     *
     * <code>string description = 4 [json_name = "description"];</code>
     * @return The bytes for description.
     */
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Optional docs
     * </pre>
     *
     * <code>string description = 4 [json_name = "description"];</code>
     * @param value The description to set.
     * @return This builder for chaining.
     */
    public Builder setDescription(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      description_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional docs
     * </pre>
     *
     * <code>string description = 4 [json_name = "description"];</code>
     * @return This builder for chaining.
     */
    public Builder clearDescription() {
      description_ = getDefaultInstance().getDescription();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional docs
     * </pre>
     *
     * <code>string description = 4 [json_name = "description"];</code>
     * @param value The bytes for description to set.
     * @return This builder for chaining.
     */
    public Builder setDescriptionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      description_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private datapower.noesis.v1.StructuredSchemaDescriptor schema_;
    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.StructuredSchemaDescriptor, datapower.noesis.v1.StructuredSchemaDescriptor.Builder, datapower.noesis.v1.StructuredSchemaDescriptorOrBuilder> schemaBuilder_;
    /**
     * <pre>
     * Schema in structured format
     * </pre>
     *
     * <code>.datapower.noesis.v1.StructuredSchemaDescriptor schema = 5 [json_name = "schema"];</code>
     * @return Whether the schema field is set.
     */
    public boolean hasSchema() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Schema in structured format
     * </pre>
     *
     * <code>.datapower.noesis.v1.StructuredSchemaDescriptor schema = 5 [json_name = "schema"];</code>
     * @return The schema.
     */
    public datapower.noesis.v1.StructuredSchemaDescriptor getSchema() {
      if (schemaBuilder_ == null) {
        return schema_ == null ? datapower.noesis.v1.StructuredSchemaDescriptor.getDefaultInstance() : schema_;
      } else {
        return schemaBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Schema in structured format
     * </pre>
     *
     * <code>.datapower.noesis.v1.StructuredSchemaDescriptor schema = 5 [json_name = "schema"];</code>
     */
    public Builder setSchema(datapower.noesis.v1.StructuredSchemaDescriptor value) {
      if (schemaBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        schema_ = value;
      } else {
        schemaBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Schema in structured format
     * </pre>
     *
     * <code>.datapower.noesis.v1.StructuredSchemaDescriptor schema = 5 [json_name = "schema"];</code>
     */
    public Builder setSchema(
        datapower.noesis.v1.StructuredSchemaDescriptor.Builder builderForValue) {
      if (schemaBuilder_ == null) {
        schema_ = builderForValue.build();
      } else {
        schemaBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Schema in structured format
     * </pre>
     *
     * <code>.datapower.noesis.v1.StructuredSchemaDescriptor schema = 5 [json_name = "schema"];</code>
     */
    public Builder mergeSchema(datapower.noesis.v1.StructuredSchemaDescriptor value) {
      if (schemaBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0) &&
          schema_ != null &&
          schema_ != datapower.noesis.v1.StructuredSchemaDescriptor.getDefaultInstance()) {
          getSchemaBuilder().mergeFrom(value);
        } else {
          schema_ = value;
        }
      } else {
        schemaBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Schema in structured format
     * </pre>
     *
     * <code>.datapower.noesis.v1.StructuredSchemaDescriptor schema = 5 [json_name = "schema"];</code>
     */
    public Builder clearSchema() {
      bitField0_ = (bitField0_ & ~0x00000010);
      schema_ = null;
      if (schemaBuilder_ != null) {
        schemaBuilder_.dispose();
        schemaBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Schema in structured format
     * </pre>
     *
     * <code>.datapower.noesis.v1.StructuredSchemaDescriptor schema = 5 [json_name = "schema"];</code>
     */
    public datapower.noesis.v1.StructuredSchemaDescriptor.Builder getSchemaBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getSchemaFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Schema in structured format
     * </pre>
     *
     * <code>.datapower.noesis.v1.StructuredSchemaDescriptor schema = 5 [json_name = "schema"];</code>
     */
    public datapower.noesis.v1.StructuredSchemaDescriptorOrBuilder getSchemaOrBuilder() {
      if (schemaBuilder_ != null) {
        return schemaBuilder_.getMessageOrBuilder();
      } else {
        return schema_ == null ?
            datapower.noesis.v1.StructuredSchemaDescriptor.getDefaultInstance() : schema_;
      }
    }
    /**
     * <pre>
     * Schema in structured format
     * </pre>
     *
     * <code>.datapower.noesis.v1.StructuredSchemaDescriptor schema = 5 [json_name = "schema"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.StructuredSchemaDescriptor, datapower.noesis.v1.StructuredSchemaDescriptor.Builder, datapower.noesis.v1.StructuredSchemaDescriptorOrBuilder> 
        getSchemaFieldBuilder() {
      if (schemaBuilder_ == null) {
        schemaBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            datapower.noesis.v1.StructuredSchemaDescriptor, datapower.noesis.v1.StructuredSchemaDescriptor.Builder, datapower.noesis.v1.StructuredSchemaDescriptorOrBuilder>(
                getSchema(),
                getParentForChildren(),
                isClean());
        schema_ = null;
      }
      return schemaBuilder_;
    }

    private com.google.protobuf.LazyStringArrayList primaryKey_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    private void ensurePrimaryKeyIsMutable() {
      if (!primaryKey_.isModifiable()) {
        primaryKey_ = new com.google.protobuf.LazyStringArrayList(primaryKey_);
      }
      bitField0_ |= 0x00000020;
    }
    /**
     * <pre>
     * Keys &amp; relational hints.
     * </pre>
     *
     * <code>repeated string primary_key = 6 [json_name = "primaryKey"];</code>
     * @return A list containing the primaryKey.
     */
    public com.google.protobuf.ProtocolStringList
        getPrimaryKeyList() {
      primaryKey_.makeImmutable();
      return primaryKey_;
    }
    /**
     * <pre>
     * Keys &amp; relational hints.
     * </pre>
     *
     * <code>repeated string primary_key = 6 [json_name = "primaryKey"];</code>
     * @return The count of primaryKey.
     */
    public int getPrimaryKeyCount() {
      return primaryKey_.size();
    }
    /**
     * <pre>
     * Keys &amp; relational hints.
     * </pre>
     *
     * <code>repeated string primary_key = 6 [json_name = "primaryKey"];</code>
     * @param index The index of the element to return.
     * @return The primaryKey at the given index.
     */
    public java.lang.String getPrimaryKey(int index) {
      return primaryKey_.get(index);
    }
    /**
     * <pre>
     * Keys &amp; relational hints.
     * </pre>
     *
     * <code>repeated string primary_key = 6 [json_name = "primaryKey"];</code>
     * @param index The index of the value to return.
     * @return The bytes of the primaryKey at the given index.
     */
    public com.google.protobuf.ByteString
        getPrimaryKeyBytes(int index) {
      return primaryKey_.getByteString(index);
    }
    /**
     * <pre>
     * Keys &amp; relational hints.
     * </pre>
     *
     * <code>repeated string primary_key = 6 [json_name = "primaryKey"];</code>
     * @param index The index to set the value at.
     * @param value The primaryKey to set.
     * @return This builder for chaining.
     */
    public Builder setPrimaryKey(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensurePrimaryKeyIsMutable();
      primaryKey_.set(index, value);
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Keys &amp; relational hints.
     * </pre>
     *
     * <code>repeated string primary_key = 6 [json_name = "primaryKey"];</code>
     * @param value The primaryKey to add.
     * @return This builder for chaining.
     */
    public Builder addPrimaryKey(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensurePrimaryKeyIsMutable();
      primaryKey_.add(value);
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Keys &amp; relational hints.
     * </pre>
     *
     * <code>repeated string primary_key = 6 [json_name = "primaryKey"];</code>
     * @param values The primaryKey to add.
     * @return This builder for chaining.
     */
    public Builder addAllPrimaryKey(
        java.lang.Iterable<java.lang.String> values) {
      ensurePrimaryKeyIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, primaryKey_);
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Keys &amp; relational hints.
     * </pre>
     *
     * <code>repeated string primary_key = 6 [json_name = "primaryKey"];</code>
     * @return This builder for chaining.
     */
    public Builder clearPrimaryKey() {
      primaryKey_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
      bitField0_ = (bitField0_ & ~0x00000020);;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Keys &amp; relational hints.
     * </pre>
     *
     * <code>repeated string primary_key = 6 [json_name = "primaryKey"];</code>
     * @param value The bytes of the primaryKey to add.
     * @return This builder for chaining.
     */
    public Builder addPrimaryKeyBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensurePrimaryKeyIsMutable();
      primaryKey_.add(value);
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }

    private java.util.List<datapower.noesis.v1.UniqueKey> uniqueKeys_ =
      java.util.Collections.emptyList();
    private void ensureUniqueKeysIsMutable() {
      if (!((bitField0_ & 0x00000040) != 0)) {
        uniqueKeys_ = new java.util.ArrayList<datapower.noesis.v1.UniqueKey>(uniqueKeys_);
        bitField0_ |= 0x00000040;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        datapower.noesis.v1.UniqueKey, datapower.noesis.v1.UniqueKey.Builder, datapower.noesis.v1.UniqueKeyOrBuilder> uniqueKeysBuilder_;

    /**
     * <pre>
     * Additional unique constraints
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.UniqueKey unique_keys = 7 [json_name = "uniqueKeys"];</code>
     */
    public java.util.List<datapower.noesis.v1.UniqueKey> getUniqueKeysList() {
      if (uniqueKeysBuilder_ == null) {
        return java.util.Collections.unmodifiableList(uniqueKeys_);
      } else {
        return uniqueKeysBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Additional unique constraints
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.UniqueKey unique_keys = 7 [json_name = "uniqueKeys"];</code>
     */
    public int getUniqueKeysCount() {
      if (uniqueKeysBuilder_ == null) {
        return uniqueKeys_.size();
      } else {
        return uniqueKeysBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Additional unique constraints
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.UniqueKey unique_keys = 7 [json_name = "uniqueKeys"];</code>
     */
    public datapower.noesis.v1.UniqueKey getUniqueKeys(int index) {
      if (uniqueKeysBuilder_ == null) {
        return uniqueKeys_.get(index);
      } else {
        return uniqueKeysBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Additional unique constraints
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.UniqueKey unique_keys = 7 [json_name = "uniqueKeys"];</code>
     */
    public Builder setUniqueKeys(
        int index, datapower.noesis.v1.UniqueKey value) {
      if (uniqueKeysBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUniqueKeysIsMutable();
        uniqueKeys_.set(index, value);
        onChanged();
      } else {
        uniqueKeysBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Additional unique constraints
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.UniqueKey unique_keys = 7 [json_name = "uniqueKeys"];</code>
     */
    public Builder setUniqueKeys(
        int index, datapower.noesis.v1.UniqueKey.Builder builderForValue) {
      if (uniqueKeysBuilder_ == null) {
        ensureUniqueKeysIsMutable();
        uniqueKeys_.set(index, builderForValue.build());
        onChanged();
      } else {
        uniqueKeysBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Additional unique constraints
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.UniqueKey unique_keys = 7 [json_name = "uniqueKeys"];</code>
     */
    public Builder addUniqueKeys(datapower.noesis.v1.UniqueKey value) {
      if (uniqueKeysBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUniqueKeysIsMutable();
        uniqueKeys_.add(value);
        onChanged();
      } else {
        uniqueKeysBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Additional unique constraints
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.UniqueKey unique_keys = 7 [json_name = "uniqueKeys"];</code>
     */
    public Builder addUniqueKeys(
        int index, datapower.noesis.v1.UniqueKey value) {
      if (uniqueKeysBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUniqueKeysIsMutable();
        uniqueKeys_.add(index, value);
        onChanged();
      } else {
        uniqueKeysBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Additional unique constraints
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.UniqueKey unique_keys = 7 [json_name = "uniqueKeys"];</code>
     */
    public Builder addUniqueKeys(
        datapower.noesis.v1.UniqueKey.Builder builderForValue) {
      if (uniqueKeysBuilder_ == null) {
        ensureUniqueKeysIsMutable();
        uniqueKeys_.add(builderForValue.build());
        onChanged();
      } else {
        uniqueKeysBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Additional unique constraints
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.UniqueKey unique_keys = 7 [json_name = "uniqueKeys"];</code>
     */
    public Builder addUniqueKeys(
        int index, datapower.noesis.v1.UniqueKey.Builder builderForValue) {
      if (uniqueKeysBuilder_ == null) {
        ensureUniqueKeysIsMutable();
        uniqueKeys_.add(index, builderForValue.build());
        onChanged();
      } else {
        uniqueKeysBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Additional unique constraints
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.UniqueKey unique_keys = 7 [json_name = "uniqueKeys"];</code>
     */
    public Builder addAllUniqueKeys(
        java.lang.Iterable<? extends datapower.noesis.v1.UniqueKey> values) {
      if (uniqueKeysBuilder_ == null) {
        ensureUniqueKeysIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, uniqueKeys_);
        onChanged();
      } else {
        uniqueKeysBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Additional unique constraints
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.UniqueKey unique_keys = 7 [json_name = "uniqueKeys"];</code>
     */
    public Builder clearUniqueKeys() {
      if (uniqueKeysBuilder_ == null) {
        uniqueKeys_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
      } else {
        uniqueKeysBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Additional unique constraints
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.UniqueKey unique_keys = 7 [json_name = "uniqueKeys"];</code>
     */
    public Builder removeUniqueKeys(int index) {
      if (uniqueKeysBuilder_ == null) {
        ensureUniqueKeysIsMutable();
        uniqueKeys_.remove(index);
        onChanged();
      } else {
        uniqueKeysBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Additional unique constraints
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.UniqueKey unique_keys = 7 [json_name = "uniqueKeys"];</code>
     */
    public datapower.noesis.v1.UniqueKey.Builder getUniqueKeysBuilder(
        int index) {
      return getUniqueKeysFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Additional unique constraints
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.UniqueKey unique_keys = 7 [json_name = "uniqueKeys"];</code>
     */
    public datapower.noesis.v1.UniqueKeyOrBuilder getUniqueKeysOrBuilder(
        int index) {
      if (uniqueKeysBuilder_ == null) {
        return uniqueKeys_.get(index);  } else {
        return uniqueKeysBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Additional unique constraints
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.UniqueKey unique_keys = 7 [json_name = "uniqueKeys"];</code>
     */
    public java.util.List<? extends datapower.noesis.v1.UniqueKeyOrBuilder> 
         getUniqueKeysOrBuilderList() {
      if (uniqueKeysBuilder_ != null) {
        return uniqueKeysBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(uniqueKeys_);
      }
    }
    /**
     * <pre>
     * Additional unique constraints
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.UniqueKey unique_keys = 7 [json_name = "uniqueKeys"];</code>
     */
    public datapower.noesis.v1.UniqueKey.Builder addUniqueKeysBuilder() {
      return getUniqueKeysFieldBuilder().addBuilder(
          datapower.noesis.v1.UniqueKey.getDefaultInstance());
    }
    /**
     * <pre>
     * Additional unique constraints
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.UniqueKey unique_keys = 7 [json_name = "uniqueKeys"];</code>
     */
    public datapower.noesis.v1.UniqueKey.Builder addUniqueKeysBuilder(
        int index) {
      return getUniqueKeysFieldBuilder().addBuilder(
          index, datapower.noesis.v1.UniqueKey.getDefaultInstance());
    }
    /**
     * <pre>
     * Additional unique constraints
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.UniqueKey unique_keys = 7 [json_name = "uniqueKeys"];</code>
     */
    public java.util.List<datapower.noesis.v1.UniqueKey.Builder> 
         getUniqueKeysBuilderList() {
      return getUniqueKeysFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        datapower.noesis.v1.UniqueKey, datapower.noesis.v1.UniqueKey.Builder, datapower.noesis.v1.UniqueKeyOrBuilder> 
        getUniqueKeysFieldBuilder() {
      if (uniqueKeysBuilder_ == null) {
        uniqueKeysBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            datapower.noesis.v1.UniqueKey, datapower.noesis.v1.UniqueKey.Builder, datapower.noesis.v1.UniqueKeyOrBuilder>(
                uniqueKeys_,
                ((bitField0_ & 0x00000040) != 0),
                getParentForChildren(),
                isClean());
        uniqueKeys_ = null;
      }
      return uniqueKeysBuilder_;
    }

    private boolean softDelete_ ;
    /**
     * <pre>
     * If soft deletes exist
     * </pre>
     *
     * <code>bool soft_delete = 8 [json_name = "softDelete"];</code>
     * @return The softDelete.
     */
    @java.lang.Override
    public boolean getSoftDelete() {
      return softDelete_;
    }
    /**
     * <pre>
     * If soft deletes exist
     * </pre>
     *
     * <code>bool soft_delete = 8 [json_name = "softDelete"];</code>
     * @param value The softDelete to set.
     * @return This builder for chaining.
     */
    public Builder setSoftDelete(boolean value) {

      softDelete_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If soft deletes exist
     * </pre>
     *
     * <code>bool soft_delete = 8 [json_name = "softDelete"];</code>
     * @return This builder for chaining.
     */
    public Builder clearSoftDelete() {
      bitField0_ = (bitField0_ & ~0x00000080);
      softDelete_ = false;
      onChanged();
      return this;
    }

    private java.lang.Object softDeleteField_ = "";
    /**
     * <pre>
     * Field name for soft delete marker (e.g., "deleted_at")
     * </pre>
     *
     * <code>string soft_delete_field = 9 [json_name = "softDeleteField"];</code>
     * @return The softDeleteField.
     */
    public java.lang.String getSoftDeleteField() {
      java.lang.Object ref = softDeleteField_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        softDeleteField_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Field name for soft delete marker (e.g., "deleted_at")
     * </pre>
     *
     * <code>string soft_delete_field = 9 [json_name = "softDeleteField"];</code>
     * @return The bytes for softDeleteField.
     */
    public com.google.protobuf.ByteString
        getSoftDeleteFieldBytes() {
      java.lang.Object ref = softDeleteField_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        softDeleteField_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Field name for soft delete marker (e.g., "deleted_at")
     * </pre>
     *
     * <code>string soft_delete_field = 9 [json_name = "softDeleteField"];</code>
     * @param value The softDeleteField to set.
     * @return This builder for chaining.
     */
    public Builder setSoftDeleteField(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      softDeleteField_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Field name for soft delete marker (e.g., "deleted_at")
     * </pre>
     *
     * <code>string soft_delete_field = 9 [json_name = "softDeleteField"];</code>
     * @return This builder for chaining.
     */
    public Builder clearSoftDeleteField() {
      softDeleteField_ = getDefaultInstance().getSoftDeleteField();
      bitField0_ = (bitField0_ & ~0x00000100);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Field name for soft delete marker (e.g., "deleted_at")
     * </pre>
     *
     * <code>string soft_delete_field = 9 [json_name = "softDeleteField"];</code>
     * @param value The bytes for softDeleteField to set.
     * @return This builder for chaining.
     */
    public Builder setSoftDeleteFieldBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      softDeleteField_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }

    private datapower.noesis.v1.LinkEndpoint src_;
    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.LinkEndpoint, datapower.noesis.v1.LinkEndpoint.Builder, datapower.noesis.v1.LinkEndpointOrBuilder> srcBuilder_;
    /**
     * <pre>
     * For LINK (kind=LINK): logical endpoints the link connects (should match target entity PKs).
     * </pre>
     *
     * <code>.datapower.noesis.v1.LinkEndpoint src = 10 [json_name = "src"];</code>
     * @return Whether the src field is set.
     */
    public boolean hasSrc() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <pre>
     * For LINK (kind=LINK): logical endpoints the link connects (should match target entity PKs).
     * </pre>
     *
     * <code>.datapower.noesis.v1.LinkEndpoint src = 10 [json_name = "src"];</code>
     * @return The src.
     */
    public datapower.noesis.v1.LinkEndpoint getSrc() {
      if (srcBuilder_ == null) {
        return src_ == null ? datapower.noesis.v1.LinkEndpoint.getDefaultInstance() : src_;
      } else {
        return srcBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * For LINK (kind=LINK): logical endpoints the link connects (should match target entity PKs).
     * </pre>
     *
     * <code>.datapower.noesis.v1.LinkEndpoint src = 10 [json_name = "src"];</code>
     */
    public Builder setSrc(datapower.noesis.v1.LinkEndpoint value) {
      if (srcBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        src_ = value;
      } else {
        srcBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * For LINK (kind=LINK): logical endpoints the link connects (should match target entity PKs).
     * </pre>
     *
     * <code>.datapower.noesis.v1.LinkEndpoint src = 10 [json_name = "src"];</code>
     */
    public Builder setSrc(
        datapower.noesis.v1.LinkEndpoint.Builder builderForValue) {
      if (srcBuilder_ == null) {
        src_ = builderForValue.build();
      } else {
        srcBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * For LINK (kind=LINK): logical endpoints the link connects (should match target entity PKs).
     * </pre>
     *
     * <code>.datapower.noesis.v1.LinkEndpoint src = 10 [json_name = "src"];</code>
     */
    public Builder mergeSrc(datapower.noesis.v1.LinkEndpoint value) {
      if (srcBuilder_ == null) {
        if (((bitField0_ & 0x00000200) != 0) &&
          src_ != null &&
          src_ != datapower.noesis.v1.LinkEndpoint.getDefaultInstance()) {
          getSrcBuilder().mergeFrom(value);
        } else {
          src_ = value;
        }
      } else {
        srcBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * For LINK (kind=LINK): logical endpoints the link connects (should match target entity PKs).
     * </pre>
     *
     * <code>.datapower.noesis.v1.LinkEndpoint src = 10 [json_name = "src"];</code>
     */
    public Builder clearSrc() {
      bitField0_ = (bitField0_ & ~0x00000200);
      src_ = null;
      if (srcBuilder_ != null) {
        srcBuilder_.dispose();
        srcBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * For LINK (kind=LINK): logical endpoints the link connects (should match target entity PKs).
     * </pre>
     *
     * <code>.datapower.noesis.v1.LinkEndpoint src = 10 [json_name = "src"];</code>
     */
    public datapower.noesis.v1.LinkEndpoint.Builder getSrcBuilder() {
      bitField0_ |= 0x00000200;
      onChanged();
      return getSrcFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * For LINK (kind=LINK): logical endpoints the link connects (should match target entity PKs).
     * </pre>
     *
     * <code>.datapower.noesis.v1.LinkEndpoint src = 10 [json_name = "src"];</code>
     */
    public datapower.noesis.v1.LinkEndpointOrBuilder getSrcOrBuilder() {
      if (srcBuilder_ != null) {
        return srcBuilder_.getMessageOrBuilder();
      } else {
        return src_ == null ?
            datapower.noesis.v1.LinkEndpoint.getDefaultInstance() : src_;
      }
    }
    /**
     * <pre>
     * For LINK (kind=LINK): logical endpoints the link connects (should match target entity PKs).
     * </pre>
     *
     * <code>.datapower.noesis.v1.LinkEndpoint src = 10 [json_name = "src"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.LinkEndpoint, datapower.noesis.v1.LinkEndpoint.Builder, datapower.noesis.v1.LinkEndpointOrBuilder> 
        getSrcFieldBuilder() {
      if (srcBuilder_ == null) {
        srcBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            datapower.noesis.v1.LinkEndpoint, datapower.noesis.v1.LinkEndpoint.Builder, datapower.noesis.v1.LinkEndpointOrBuilder>(
                getSrc(),
                getParentForChildren(),
                isClean());
        src_ = null;
      }
      return srcBuilder_;
    }

    private datapower.noesis.v1.LinkEndpoint dst_;
    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.LinkEndpoint, datapower.noesis.v1.LinkEndpoint.Builder, datapower.noesis.v1.LinkEndpointOrBuilder> dstBuilder_;
    /**
     * <code>.datapower.noesis.v1.LinkEndpoint dst = 11 [json_name = "dst"];</code>
     * @return Whether the dst field is set.
     */
    public boolean hasDst() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <code>.datapower.noesis.v1.LinkEndpoint dst = 11 [json_name = "dst"];</code>
     * @return The dst.
     */
    public datapower.noesis.v1.LinkEndpoint getDst() {
      if (dstBuilder_ == null) {
        return dst_ == null ? datapower.noesis.v1.LinkEndpoint.getDefaultInstance() : dst_;
      } else {
        return dstBuilder_.getMessage();
      }
    }
    /**
     * <code>.datapower.noesis.v1.LinkEndpoint dst = 11 [json_name = "dst"];</code>
     */
    public Builder setDst(datapower.noesis.v1.LinkEndpoint value) {
      if (dstBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        dst_ = value;
      } else {
        dstBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }
    /**
     * <code>.datapower.noesis.v1.LinkEndpoint dst = 11 [json_name = "dst"];</code>
     */
    public Builder setDst(
        datapower.noesis.v1.LinkEndpoint.Builder builderForValue) {
      if (dstBuilder_ == null) {
        dst_ = builderForValue.build();
      } else {
        dstBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }
    /**
     * <code>.datapower.noesis.v1.LinkEndpoint dst = 11 [json_name = "dst"];</code>
     */
    public Builder mergeDst(datapower.noesis.v1.LinkEndpoint value) {
      if (dstBuilder_ == null) {
        if (((bitField0_ & 0x00000400) != 0) &&
          dst_ != null &&
          dst_ != datapower.noesis.v1.LinkEndpoint.getDefaultInstance()) {
          getDstBuilder().mergeFrom(value);
        } else {
          dst_ = value;
        }
      } else {
        dstBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }
    /**
     * <code>.datapower.noesis.v1.LinkEndpoint dst = 11 [json_name = "dst"];</code>
     */
    public Builder clearDst() {
      bitField0_ = (bitField0_ & ~0x00000400);
      dst_ = null;
      if (dstBuilder_ != null) {
        dstBuilder_.dispose();
        dstBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.datapower.noesis.v1.LinkEndpoint dst = 11 [json_name = "dst"];</code>
     */
    public datapower.noesis.v1.LinkEndpoint.Builder getDstBuilder() {
      bitField0_ |= 0x00000400;
      onChanged();
      return getDstFieldBuilder().getBuilder();
    }
    /**
     * <code>.datapower.noesis.v1.LinkEndpoint dst = 11 [json_name = "dst"];</code>
     */
    public datapower.noesis.v1.LinkEndpointOrBuilder getDstOrBuilder() {
      if (dstBuilder_ != null) {
        return dstBuilder_.getMessageOrBuilder();
      } else {
        return dst_ == null ?
            datapower.noesis.v1.LinkEndpoint.getDefaultInstance() : dst_;
      }
    }
    /**
     * <code>.datapower.noesis.v1.LinkEndpoint dst = 11 [json_name = "dst"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.LinkEndpoint, datapower.noesis.v1.LinkEndpoint.Builder, datapower.noesis.v1.LinkEndpointOrBuilder> 
        getDstFieldBuilder() {
      if (dstBuilder_ == null) {
        dstBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            datapower.noesis.v1.LinkEndpoint, datapower.noesis.v1.LinkEndpoint.Builder, datapower.noesis.v1.LinkEndpointOrBuilder>(
                getDst(),
                getParentForChildren(),
                isClean());
        dst_ = null;
      }
      return dstBuilder_;
    }

    private java.util.List<datapower.noesis.v1.CursorField> cursors_ =
      java.util.Collections.emptyList();
    private void ensureCursorsIsMutable() {
      if (!((bitField0_ & 0x00000800) != 0)) {
        cursors_ = new java.util.ArrayList<datapower.noesis.v1.CursorField>(cursors_);
        bitField0_ |= 0x00000800;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        datapower.noesis.v1.CursorField, datapower.noesis.v1.CursorField.Builder, datapower.noesis.v1.CursorFieldOrBuilder> cursorsBuilder_;

    /**
     * <pre>
     * Supported cursor fields for incremental reads (updated_at, version, LSN, etc.).
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.CursorField cursors = 12 [json_name = "cursors"];</code>
     */
    public java.util.List<datapower.noesis.v1.CursorField> getCursorsList() {
      if (cursorsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(cursors_);
      } else {
        return cursorsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Supported cursor fields for incremental reads (updated_at, version, LSN, etc.).
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.CursorField cursors = 12 [json_name = "cursors"];</code>
     */
    public int getCursorsCount() {
      if (cursorsBuilder_ == null) {
        return cursors_.size();
      } else {
        return cursorsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Supported cursor fields for incremental reads (updated_at, version, LSN, etc.).
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.CursorField cursors = 12 [json_name = "cursors"];</code>
     */
    public datapower.noesis.v1.CursorField getCursors(int index) {
      if (cursorsBuilder_ == null) {
        return cursors_.get(index);
      } else {
        return cursorsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Supported cursor fields for incremental reads (updated_at, version, LSN, etc.).
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.CursorField cursors = 12 [json_name = "cursors"];</code>
     */
    public Builder setCursors(
        int index, datapower.noesis.v1.CursorField value) {
      if (cursorsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCursorsIsMutable();
        cursors_.set(index, value);
        onChanged();
      } else {
        cursorsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Supported cursor fields for incremental reads (updated_at, version, LSN, etc.).
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.CursorField cursors = 12 [json_name = "cursors"];</code>
     */
    public Builder setCursors(
        int index, datapower.noesis.v1.CursorField.Builder builderForValue) {
      if (cursorsBuilder_ == null) {
        ensureCursorsIsMutable();
        cursors_.set(index, builderForValue.build());
        onChanged();
      } else {
        cursorsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Supported cursor fields for incremental reads (updated_at, version, LSN, etc.).
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.CursorField cursors = 12 [json_name = "cursors"];</code>
     */
    public Builder addCursors(datapower.noesis.v1.CursorField value) {
      if (cursorsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCursorsIsMutable();
        cursors_.add(value);
        onChanged();
      } else {
        cursorsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Supported cursor fields for incremental reads (updated_at, version, LSN, etc.).
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.CursorField cursors = 12 [json_name = "cursors"];</code>
     */
    public Builder addCursors(
        int index, datapower.noesis.v1.CursorField value) {
      if (cursorsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCursorsIsMutable();
        cursors_.add(index, value);
        onChanged();
      } else {
        cursorsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Supported cursor fields for incremental reads (updated_at, version, LSN, etc.).
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.CursorField cursors = 12 [json_name = "cursors"];</code>
     */
    public Builder addCursors(
        datapower.noesis.v1.CursorField.Builder builderForValue) {
      if (cursorsBuilder_ == null) {
        ensureCursorsIsMutable();
        cursors_.add(builderForValue.build());
        onChanged();
      } else {
        cursorsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Supported cursor fields for incremental reads (updated_at, version, LSN, etc.).
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.CursorField cursors = 12 [json_name = "cursors"];</code>
     */
    public Builder addCursors(
        int index, datapower.noesis.v1.CursorField.Builder builderForValue) {
      if (cursorsBuilder_ == null) {
        ensureCursorsIsMutable();
        cursors_.add(index, builderForValue.build());
        onChanged();
      } else {
        cursorsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Supported cursor fields for incremental reads (updated_at, version, LSN, etc.).
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.CursorField cursors = 12 [json_name = "cursors"];</code>
     */
    public Builder addAllCursors(
        java.lang.Iterable<? extends datapower.noesis.v1.CursorField> values) {
      if (cursorsBuilder_ == null) {
        ensureCursorsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, cursors_);
        onChanged();
      } else {
        cursorsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Supported cursor fields for incremental reads (updated_at, version, LSN, etc.).
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.CursorField cursors = 12 [json_name = "cursors"];</code>
     */
    public Builder clearCursors() {
      if (cursorsBuilder_ == null) {
        cursors_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
      } else {
        cursorsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Supported cursor fields for incremental reads (updated_at, version, LSN, etc.).
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.CursorField cursors = 12 [json_name = "cursors"];</code>
     */
    public Builder removeCursors(int index) {
      if (cursorsBuilder_ == null) {
        ensureCursorsIsMutable();
        cursors_.remove(index);
        onChanged();
      } else {
        cursorsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Supported cursor fields for incremental reads (updated_at, version, LSN, etc.).
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.CursorField cursors = 12 [json_name = "cursors"];</code>
     */
    public datapower.noesis.v1.CursorField.Builder getCursorsBuilder(
        int index) {
      return getCursorsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Supported cursor fields for incremental reads (updated_at, version, LSN, etc.).
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.CursorField cursors = 12 [json_name = "cursors"];</code>
     */
    public datapower.noesis.v1.CursorFieldOrBuilder getCursorsOrBuilder(
        int index) {
      if (cursorsBuilder_ == null) {
        return cursors_.get(index);  } else {
        return cursorsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Supported cursor fields for incremental reads (updated_at, version, LSN, etc.).
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.CursorField cursors = 12 [json_name = "cursors"];</code>
     */
    public java.util.List<? extends datapower.noesis.v1.CursorFieldOrBuilder> 
         getCursorsOrBuilderList() {
      if (cursorsBuilder_ != null) {
        return cursorsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(cursors_);
      }
    }
    /**
     * <pre>
     * Supported cursor fields for incremental reads (updated_at, version, LSN, etc.).
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.CursorField cursors = 12 [json_name = "cursors"];</code>
     */
    public datapower.noesis.v1.CursorField.Builder addCursorsBuilder() {
      return getCursorsFieldBuilder().addBuilder(
          datapower.noesis.v1.CursorField.getDefaultInstance());
    }
    /**
     * <pre>
     * Supported cursor fields for incremental reads (updated_at, version, LSN, etc.).
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.CursorField cursors = 12 [json_name = "cursors"];</code>
     */
    public datapower.noesis.v1.CursorField.Builder addCursorsBuilder(
        int index) {
      return getCursorsFieldBuilder().addBuilder(
          index, datapower.noesis.v1.CursorField.getDefaultInstance());
    }
    /**
     * <pre>
     * Supported cursor fields for incremental reads (updated_at, version, LSN, etc.).
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.CursorField cursors = 12 [json_name = "cursors"];</code>
     */
    public java.util.List<datapower.noesis.v1.CursorField.Builder> 
         getCursorsBuilderList() {
      return getCursorsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        datapower.noesis.v1.CursorField, datapower.noesis.v1.CursorField.Builder, datapower.noesis.v1.CursorFieldOrBuilder> 
        getCursorsFieldBuilder() {
      if (cursorsBuilder_ == null) {
        cursorsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            datapower.noesis.v1.CursorField, datapower.noesis.v1.CursorField.Builder, datapower.noesis.v1.CursorFieldOrBuilder>(
                cursors_,
                ((bitField0_ & 0x00000800) != 0),
                getParentForChildren(),
                isClean());
        cursors_ = null;
      }
      return cursorsBuilder_;
    }

    private datapower.noesis.v1.ExtractionCapabilities capabilities_;
    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.ExtractionCapabilities, datapower.noesis.v1.ExtractionCapabilities.Builder, datapower.noesis.v1.ExtractionCapabilitiesOrBuilder> capabilitiesBuilder_;
    /**
     * <pre>
     * Which extraction modes / features are supported by this entity.
     * </pre>
     *
     * <code>.datapower.noesis.v1.ExtractionCapabilities capabilities = 13 [json_name = "capabilities"];</code>
     * @return Whether the capabilities field is set.
     */
    public boolean hasCapabilities() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <pre>
     * Which extraction modes / features are supported by this entity.
     * </pre>
     *
     * <code>.datapower.noesis.v1.ExtractionCapabilities capabilities = 13 [json_name = "capabilities"];</code>
     * @return The capabilities.
     */
    public datapower.noesis.v1.ExtractionCapabilities getCapabilities() {
      if (capabilitiesBuilder_ == null) {
        return capabilities_ == null ? datapower.noesis.v1.ExtractionCapabilities.getDefaultInstance() : capabilities_;
      } else {
        return capabilitiesBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Which extraction modes / features are supported by this entity.
     * </pre>
     *
     * <code>.datapower.noesis.v1.ExtractionCapabilities capabilities = 13 [json_name = "capabilities"];</code>
     */
    public Builder setCapabilities(datapower.noesis.v1.ExtractionCapabilities value) {
      if (capabilitiesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        capabilities_ = value;
      } else {
        capabilitiesBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00001000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Which extraction modes / features are supported by this entity.
     * </pre>
     *
     * <code>.datapower.noesis.v1.ExtractionCapabilities capabilities = 13 [json_name = "capabilities"];</code>
     */
    public Builder setCapabilities(
        datapower.noesis.v1.ExtractionCapabilities.Builder builderForValue) {
      if (capabilitiesBuilder_ == null) {
        capabilities_ = builderForValue.build();
      } else {
        capabilitiesBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00001000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Which extraction modes / features are supported by this entity.
     * </pre>
     *
     * <code>.datapower.noesis.v1.ExtractionCapabilities capabilities = 13 [json_name = "capabilities"];</code>
     */
    public Builder mergeCapabilities(datapower.noesis.v1.ExtractionCapabilities value) {
      if (capabilitiesBuilder_ == null) {
        if (((bitField0_ & 0x00001000) != 0) &&
          capabilities_ != null &&
          capabilities_ != datapower.noesis.v1.ExtractionCapabilities.getDefaultInstance()) {
          getCapabilitiesBuilder().mergeFrom(value);
        } else {
          capabilities_ = value;
        }
      } else {
        capabilitiesBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00001000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Which extraction modes / features are supported by this entity.
     * </pre>
     *
     * <code>.datapower.noesis.v1.ExtractionCapabilities capabilities = 13 [json_name = "capabilities"];</code>
     */
    public Builder clearCapabilities() {
      bitField0_ = (bitField0_ & ~0x00001000);
      capabilities_ = null;
      if (capabilitiesBuilder_ != null) {
        capabilitiesBuilder_.dispose();
        capabilitiesBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Which extraction modes / features are supported by this entity.
     * </pre>
     *
     * <code>.datapower.noesis.v1.ExtractionCapabilities capabilities = 13 [json_name = "capabilities"];</code>
     */
    public datapower.noesis.v1.ExtractionCapabilities.Builder getCapabilitiesBuilder() {
      bitField0_ |= 0x00001000;
      onChanged();
      return getCapabilitiesFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Which extraction modes / features are supported by this entity.
     * </pre>
     *
     * <code>.datapower.noesis.v1.ExtractionCapabilities capabilities = 13 [json_name = "capabilities"];</code>
     */
    public datapower.noesis.v1.ExtractionCapabilitiesOrBuilder getCapabilitiesOrBuilder() {
      if (capabilitiesBuilder_ != null) {
        return capabilitiesBuilder_.getMessageOrBuilder();
      } else {
        return capabilities_ == null ?
            datapower.noesis.v1.ExtractionCapabilities.getDefaultInstance() : capabilities_;
      }
    }
    /**
     * <pre>
     * Which extraction modes / features are supported by this entity.
     * </pre>
     *
     * <code>.datapower.noesis.v1.ExtractionCapabilities capabilities = 13 [json_name = "capabilities"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.ExtractionCapabilities, datapower.noesis.v1.ExtractionCapabilities.Builder, datapower.noesis.v1.ExtractionCapabilitiesOrBuilder> 
        getCapabilitiesFieldBuilder() {
      if (capabilitiesBuilder_ == null) {
        capabilitiesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            datapower.noesis.v1.ExtractionCapabilities, datapower.noesis.v1.ExtractionCapabilities.Builder, datapower.noesis.v1.ExtractionCapabilitiesOrBuilder>(
                getCapabilities(),
                getParentForChildren(),
                isClean());
        capabilities_ = null;
      }
      return capabilitiesBuilder_;
    }

    private long estimatedRows_ ;
    /**
     * <pre>
     * Optional sizing hint.
     * </pre>
     *
     * <code>int64 estimated_rows = 14 [json_name = "estimatedRows"];</code>
     * @return The estimatedRows.
     */
    @java.lang.Override
    public long getEstimatedRows() {
      return estimatedRows_;
    }
    /**
     * <pre>
     * Optional sizing hint.
     * </pre>
     *
     * <code>int64 estimated_rows = 14 [json_name = "estimatedRows"];</code>
     * @param value The estimatedRows to set.
     * @return This builder for chaining.
     */
    public Builder setEstimatedRows(long value) {

      estimatedRows_ = value;
      bitField0_ |= 0x00002000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional sizing hint.
     * </pre>
     *
     * <code>int64 estimated_rows = 14 [json_name = "estimatedRows"];</code>
     * @return This builder for chaining.
     */
    public Builder clearEstimatedRows() {
      bitField0_ = (bitField0_ & ~0x00002000);
      estimatedRows_ = 0L;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:datapower.noesis.v1.EntityDescriptor)
  }

  // @@protoc_insertion_point(class_scope:datapower.noesis.v1.EntityDescriptor)
  private static final datapower.noesis.v1.EntityDescriptor DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new datapower.noesis.v1.EntityDescriptor();
  }

  public static datapower.noesis.v1.EntityDescriptor getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<EntityDescriptor>
      PARSER = new com.google.protobuf.AbstractParser<EntityDescriptor>() {
    @java.lang.Override
    public EntityDescriptor parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<EntityDescriptor> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<EntityDescriptor> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public datapower.noesis.v1.EntityDescriptor getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

