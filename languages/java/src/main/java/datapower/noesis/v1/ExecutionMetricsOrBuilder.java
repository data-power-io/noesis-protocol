// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datapower/noesis/v1/execution.proto

package datapower.noesis.v1;

public interface ExecutionMetricsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:datapower.noesis.v1.ExecutionMetrics)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Total records processed
   * </pre>
   *
   * <code>int64 total_records = 1 [json_name = "totalRecords"];</code>
   * @return The totalRecords.
   */
  long getTotalRecords();

  /**
   * <pre>
   * Total bytes processed
   * </pre>
   *
   * <code>int64 total_bytes = 2 [json_name = "totalBytes"];</code>
   * @return The totalBytes.
   */
  long getTotalBytes();

  /**
   * <pre>
   * Extraction metrics
   * </pre>
   *
   * <code>int64 extraction_duration_ms = 3 [json_name = "extractionDurationMs"];</code>
   * @return The extractionDurationMs.
   */
  long getExtractionDurationMs();

  /**
   * <code>int64 extraction_records = 4 [json_name = "extractionRecords"];</code>
   * @return The extractionRecords.
   */
  long getExtractionRecords();

  /**
   * <pre>
   * Iceberg load metrics
   * </pre>
   *
   * <code>int64 iceberg_load_duration_ms = 5 [json_name = "icebergLoadDurationMs"];</code>
   * @return The icebergLoadDurationMs.
   */
  long getIcebergLoadDurationMs();

  /**
   * <code>int64 iceberg_records_loaded = 6 [json_name = "icebergRecordsLoaded"];</code>
   * @return The icebergRecordsLoaded.
   */
  long getIcebergRecordsLoaded();

  /**
   * <pre>
   * Batch job metrics
   * </pre>
   *
   * <code>int64 batch_job_duration_ms = 7 [json_name = "batchJobDurationMs"];</code>
   * @return The batchJobDurationMs.
   */
  long getBatchJobDurationMs();

  /**
   * <code>int64 batch_records_written = 8 [json_name = "batchRecordsWritten"];</code>
   * @return The batchRecordsWritten.
   */
  long getBatchRecordsWritten();

  /**
   * <pre>
   * Parallelism achieved
   * </pre>
   *
   * <code>int32 extraction_parallelism = 9 [json_name = "extractionParallelism"];</code>
   * @return The extractionParallelism.
   */
  int getExtractionParallelism();

  /**
   * <code>int32 batch_parallelism = 10 [json_name = "batchParallelism"];</code>
   * @return The batchParallelism.
   */
  int getBatchParallelism();
}
