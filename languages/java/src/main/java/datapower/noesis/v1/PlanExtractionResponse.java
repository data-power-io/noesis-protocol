// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datapower/noesis/v1/connector.proto

package datapower.noesis.v1;

/**
 * Protobuf type {@code datapower.noesis.v1.PlanExtractionResponse}
 */
public final class PlanExtractionResponse extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:datapower.noesis.v1.PlanExtractionResponse)
    PlanExtractionResponseOrBuilder {
private static final long serialVersionUID = 0L;
  // Use PlanExtractionResponse.newBuilder() to construct.
  private PlanExtractionResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private PlanExtractionResponse() {
    splits_ = java.util.Collections.emptyList();
    snapshotId_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new PlanExtractionResponse();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_PlanExtractionResponse_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_PlanExtractionResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            datapower.noesis.v1.PlanExtractionResponse.class, datapower.noesis.v1.PlanExtractionResponse.Builder.class);
  }

  public static final int SPLITS_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private java.util.List<datapower.noesis.v1.ExtractionSplit> splits_;
  /**
   * <pre>
   * List of independent extraction splits
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.ExtractionSplit splits = 1 [json_name = "splits"];</code>
   */
  @java.lang.Override
  public java.util.List<datapower.noesis.v1.ExtractionSplit> getSplitsList() {
    return splits_;
  }
  /**
   * <pre>
   * List of independent extraction splits
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.ExtractionSplit splits = 1 [json_name = "splits"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends datapower.noesis.v1.ExtractionSplitOrBuilder> 
      getSplitsOrBuilderList() {
    return splits_;
  }
  /**
   * <pre>
   * List of independent extraction splits
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.ExtractionSplit splits = 1 [json_name = "splits"];</code>
   */
  @java.lang.Override
  public int getSplitsCount() {
    return splits_.size();
  }
  /**
   * <pre>
   * List of independent extraction splits
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.ExtractionSplit splits = 1 [json_name = "splits"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.ExtractionSplit getSplits(int index) {
    return splits_.get(index);
  }
  /**
   * <pre>
   * List of independent extraction splits
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.ExtractionSplit splits = 1 [json_name = "splits"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.ExtractionSplitOrBuilder getSplitsOrBuilder(
      int index) {
    return splits_.get(index);
  }

  public static final int SNAPSHOT_ID_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object snapshotId_ = "";
  /**
   * <pre>
   * Optional: snapshot identifier for consistency
   * </pre>
   *
   * <code>string snapshot_id = 2 [json_name = "snapshotId"];</code>
   * @return The snapshotId.
   */
  @java.lang.Override
  public java.lang.String getSnapshotId() {
    java.lang.Object ref = snapshotId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      snapshotId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Optional: snapshot identifier for consistency
   * </pre>
   *
   * <code>string snapshot_id = 2 [json_name = "snapshotId"];</code>
   * @return The bytes for snapshotId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSnapshotIdBytes() {
    java.lang.Object ref = snapshotId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      snapshotId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TOTAL_ESTIMATED_ROWS_FIELD_NUMBER = 3;
  private long totalEstimatedRows_ = 0L;
  /**
   * <pre>
   * Total estimated rows across all splits
   * </pre>
   *
   * <code>int64 total_estimated_rows = 3 [json_name = "totalEstimatedRows"];</code>
   * @return The totalEstimatedRows.
   */
  @java.lang.Override
  public long getTotalEstimatedRows() {
    return totalEstimatedRows_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < splits_.size(); i++) {
      output.writeMessage(1, splits_.get(i));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(snapshotId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, snapshotId_);
    }
    if (totalEstimatedRows_ != 0L) {
      output.writeInt64(3, totalEstimatedRows_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < splits_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, splits_.get(i));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(snapshotId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, snapshotId_);
    }
    if (totalEstimatedRows_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(3, totalEstimatedRows_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof datapower.noesis.v1.PlanExtractionResponse)) {
      return super.equals(obj);
    }
    datapower.noesis.v1.PlanExtractionResponse other = (datapower.noesis.v1.PlanExtractionResponse) obj;

    if (!getSplitsList()
        .equals(other.getSplitsList())) return false;
    if (!getSnapshotId()
        .equals(other.getSnapshotId())) return false;
    if (getTotalEstimatedRows()
        != other.getTotalEstimatedRows()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getSplitsCount() > 0) {
      hash = (37 * hash) + SPLITS_FIELD_NUMBER;
      hash = (53 * hash) + getSplitsList().hashCode();
    }
    hash = (37 * hash) + SNAPSHOT_ID_FIELD_NUMBER;
    hash = (53 * hash) + getSnapshotId().hashCode();
    hash = (37 * hash) + TOTAL_ESTIMATED_ROWS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTotalEstimatedRows());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static datapower.noesis.v1.PlanExtractionResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.PlanExtractionResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.PlanExtractionResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.PlanExtractionResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.PlanExtractionResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.PlanExtractionResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.PlanExtractionResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.PlanExtractionResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static datapower.noesis.v1.PlanExtractionResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static datapower.noesis.v1.PlanExtractionResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static datapower.noesis.v1.PlanExtractionResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.PlanExtractionResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(datapower.noesis.v1.PlanExtractionResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code datapower.noesis.v1.PlanExtractionResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:datapower.noesis.v1.PlanExtractionResponse)
      datapower.noesis.v1.PlanExtractionResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_PlanExtractionResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_PlanExtractionResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              datapower.noesis.v1.PlanExtractionResponse.class, datapower.noesis.v1.PlanExtractionResponse.Builder.class);
    }

    // Construct using datapower.noesis.v1.PlanExtractionResponse.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (splitsBuilder_ == null) {
        splits_ = java.util.Collections.emptyList();
      } else {
        splits_ = null;
        splitsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      snapshotId_ = "";
      totalEstimatedRows_ = 0L;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_PlanExtractionResponse_descriptor;
    }

    @java.lang.Override
    public datapower.noesis.v1.PlanExtractionResponse getDefaultInstanceForType() {
      return datapower.noesis.v1.PlanExtractionResponse.getDefaultInstance();
    }

    @java.lang.Override
    public datapower.noesis.v1.PlanExtractionResponse build() {
      datapower.noesis.v1.PlanExtractionResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public datapower.noesis.v1.PlanExtractionResponse buildPartial() {
      datapower.noesis.v1.PlanExtractionResponse result = new datapower.noesis.v1.PlanExtractionResponse(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(datapower.noesis.v1.PlanExtractionResponse result) {
      if (splitsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          splits_ = java.util.Collections.unmodifiableList(splits_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.splits_ = splits_;
      } else {
        result.splits_ = splitsBuilder_.build();
      }
    }

    private void buildPartial0(datapower.noesis.v1.PlanExtractionResponse result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.snapshotId_ = snapshotId_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.totalEstimatedRows_ = totalEstimatedRows_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof datapower.noesis.v1.PlanExtractionResponse) {
        return mergeFrom((datapower.noesis.v1.PlanExtractionResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(datapower.noesis.v1.PlanExtractionResponse other) {
      if (other == datapower.noesis.v1.PlanExtractionResponse.getDefaultInstance()) return this;
      if (splitsBuilder_ == null) {
        if (!other.splits_.isEmpty()) {
          if (splits_.isEmpty()) {
            splits_ = other.splits_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureSplitsIsMutable();
            splits_.addAll(other.splits_);
          }
          onChanged();
        }
      } else {
        if (!other.splits_.isEmpty()) {
          if (splitsBuilder_.isEmpty()) {
            splitsBuilder_.dispose();
            splitsBuilder_ = null;
            splits_ = other.splits_;
            bitField0_ = (bitField0_ & ~0x00000001);
            splitsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSplitsFieldBuilder() : null;
          } else {
            splitsBuilder_.addAllMessages(other.splits_);
          }
        }
      }
      if (!other.getSnapshotId().isEmpty()) {
        snapshotId_ = other.snapshotId_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (other.getTotalEstimatedRows() != 0L) {
        setTotalEstimatedRows(other.getTotalEstimatedRows());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              datapower.noesis.v1.ExtractionSplit m =
                  input.readMessage(
                      datapower.noesis.v1.ExtractionSplit.parser(),
                      extensionRegistry);
              if (splitsBuilder_ == null) {
                ensureSplitsIsMutable();
                splits_.add(m);
              } else {
                splitsBuilder_.addMessage(m);
              }
              break;
            } // case 10
            case 18: {
              snapshotId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 24: {
              totalEstimatedRows_ = input.readInt64();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.util.List<datapower.noesis.v1.ExtractionSplit> splits_ =
      java.util.Collections.emptyList();
    private void ensureSplitsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        splits_ = new java.util.ArrayList<datapower.noesis.v1.ExtractionSplit>(splits_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        datapower.noesis.v1.ExtractionSplit, datapower.noesis.v1.ExtractionSplit.Builder, datapower.noesis.v1.ExtractionSplitOrBuilder> splitsBuilder_;

    /**
     * <pre>
     * List of independent extraction splits
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.ExtractionSplit splits = 1 [json_name = "splits"];</code>
     */
    public java.util.List<datapower.noesis.v1.ExtractionSplit> getSplitsList() {
      if (splitsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(splits_);
      } else {
        return splitsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * List of independent extraction splits
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.ExtractionSplit splits = 1 [json_name = "splits"];</code>
     */
    public int getSplitsCount() {
      if (splitsBuilder_ == null) {
        return splits_.size();
      } else {
        return splitsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * List of independent extraction splits
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.ExtractionSplit splits = 1 [json_name = "splits"];</code>
     */
    public datapower.noesis.v1.ExtractionSplit getSplits(int index) {
      if (splitsBuilder_ == null) {
        return splits_.get(index);
      } else {
        return splitsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * List of independent extraction splits
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.ExtractionSplit splits = 1 [json_name = "splits"];</code>
     */
    public Builder setSplits(
        int index, datapower.noesis.v1.ExtractionSplit value) {
      if (splitsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSplitsIsMutable();
        splits_.set(index, value);
        onChanged();
      } else {
        splitsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * List of independent extraction splits
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.ExtractionSplit splits = 1 [json_name = "splits"];</code>
     */
    public Builder setSplits(
        int index, datapower.noesis.v1.ExtractionSplit.Builder builderForValue) {
      if (splitsBuilder_ == null) {
        ensureSplitsIsMutable();
        splits_.set(index, builderForValue.build());
        onChanged();
      } else {
        splitsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * List of independent extraction splits
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.ExtractionSplit splits = 1 [json_name = "splits"];</code>
     */
    public Builder addSplits(datapower.noesis.v1.ExtractionSplit value) {
      if (splitsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSplitsIsMutable();
        splits_.add(value);
        onChanged();
      } else {
        splitsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * List of independent extraction splits
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.ExtractionSplit splits = 1 [json_name = "splits"];</code>
     */
    public Builder addSplits(
        int index, datapower.noesis.v1.ExtractionSplit value) {
      if (splitsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSplitsIsMutable();
        splits_.add(index, value);
        onChanged();
      } else {
        splitsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * List of independent extraction splits
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.ExtractionSplit splits = 1 [json_name = "splits"];</code>
     */
    public Builder addSplits(
        datapower.noesis.v1.ExtractionSplit.Builder builderForValue) {
      if (splitsBuilder_ == null) {
        ensureSplitsIsMutable();
        splits_.add(builderForValue.build());
        onChanged();
      } else {
        splitsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * List of independent extraction splits
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.ExtractionSplit splits = 1 [json_name = "splits"];</code>
     */
    public Builder addSplits(
        int index, datapower.noesis.v1.ExtractionSplit.Builder builderForValue) {
      if (splitsBuilder_ == null) {
        ensureSplitsIsMutable();
        splits_.add(index, builderForValue.build());
        onChanged();
      } else {
        splitsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * List of independent extraction splits
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.ExtractionSplit splits = 1 [json_name = "splits"];</code>
     */
    public Builder addAllSplits(
        java.lang.Iterable<? extends datapower.noesis.v1.ExtractionSplit> values) {
      if (splitsBuilder_ == null) {
        ensureSplitsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, splits_);
        onChanged();
      } else {
        splitsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * List of independent extraction splits
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.ExtractionSplit splits = 1 [json_name = "splits"];</code>
     */
    public Builder clearSplits() {
      if (splitsBuilder_ == null) {
        splits_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        splitsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * List of independent extraction splits
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.ExtractionSplit splits = 1 [json_name = "splits"];</code>
     */
    public Builder removeSplits(int index) {
      if (splitsBuilder_ == null) {
        ensureSplitsIsMutable();
        splits_.remove(index);
        onChanged();
      } else {
        splitsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * List of independent extraction splits
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.ExtractionSplit splits = 1 [json_name = "splits"];</code>
     */
    public datapower.noesis.v1.ExtractionSplit.Builder getSplitsBuilder(
        int index) {
      return getSplitsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * List of independent extraction splits
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.ExtractionSplit splits = 1 [json_name = "splits"];</code>
     */
    public datapower.noesis.v1.ExtractionSplitOrBuilder getSplitsOrBuilder(
        int index) {
      if (splitsBuilder_ == null) {
        return splits_.get(index);  } else {
        return splitsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * List of independent extraction splits
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.ExtractionSplit splits = 1 [json_name = "splits"];</code>
     */
    public java.util.List<? extends datapower.noesis.v1.ExtractionSplitOrBuilder> 
         getSplitsOrBuilderList() {
      if (splitsBuilder_ != null) {
        return splitsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(splits_);
      }
    }
    /**
     * <pre>
     * List of independent extraction splits
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.ExtractionSplit splits = 1 [json_name = "splits"];</code>
     */
    public datapower.noesis.v1.ExtractionSplit.Builder addSplitsBuilder() {
      return getSplitsFieldBuilder().addBuilder(
          datapower.noesis.v1.ExtractionSplit.getDefaultInstance());
    }
    /**
     * <pre>
     * List of independent extraction splits
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.ExtractionSplit splits = 1 [json_name = "splits"];</code>
     */
    public datapower.noesis.v1.ExtractionSplit.Builder addSplitsBuilder(
        int index) {
      return getSplitsFieldBuilder().addBuilder(
          index, datapower.noesis.v1.ExtractionSplit.getDefaultInstance());
    }
    /**
     * <pre>
     * List of independent extraction splits
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.ExtractionSplit splits = 1 [json_name = "splits"];</code>
     */
    public java.util.List<datapower.noesis.v1.ExtractionSplit.Builder> 
         getSplitsBuilderList() {
      return getSplitsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        datapower.noesis.v1.ExtractionSplit, datapower.noesis.v1.ExtractionSplit.Builder, datapower.noesis.v1.ExtractionSplitOrBuilder> 
        getSplitsFieldBuilder() {
      if (splitsBuilder_ == null) {
        splitsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            datapower.noesis.v1.ExtractionSplit, datapower.noesis.v1.ExtractionSplit.Builder, datapower.noesis.v1.ExtractionSplitOrBuilder>(
                splits_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        splits_ = null;
      }
      return splitsBuilder_;
    }

    private java.lang.Object snapshotId_ = "";
    /**
     * <pre>
     * Optional: snapshot identifier for consistency
     * </pre>
     *
     * <code>string snapshot_id = 2 [json_name = "snapshotId"];</code>
     * @return The snapshotId.
     */
    public java.lang.String getSnapshotId() {
      java.lang.Object ref = snapshotId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        snapshotId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Optional: snapshot identifier for consistency
     * </pre>
     *
     * <code>string snapshot_id = 2 [json_name = "snapshotId"];</code>
     * @return The bytes for snapshotId.
     */
    public com.google.protobuf.ByteString
        getSnapshotIdBytes() {
      java.lang.Object ref = snapshotId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        snapshotId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Optional: snapshot identifier for consistency
     * </pre>
     *
     * <code>string snapshot_id = 2 [json_name = "snapshotId"];</code>
     * @param value The snapshotId to set.
     * @return This builder for chaining.
     */
    public Builder setSnapshotId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      snapshotId_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: snapshot identifier for consistency
     * </pre>
     *
     * <code>string snapshot_id = 2 [json_name = "snapshotId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearSnapshotId() {
      snapshotId_ = getDefaultInstance().getSnapshotId();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: snapshot identifier for consistency
     * </pre>
     *
     * <code>string snapshot_id = 2 [json_name = "snapshotId"];</code>
     * @param value The bytes for snapshotId to set.
     * @return This builder for chaining.
     */
    public Builder setSnapshotIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      snapshotId_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private long totalEstimatedRows_ ;
    /**
     * <pre>
     * Total estimated rows across all splits
     * </pre>
     *
     * <code>int64 total_estimated_rows = 3 [json_name = "totalEstimatedRows"];</code>
     * @return The totalEstimatedRows.
     */
    @java.lang.Override
    public long getTotalEstimatedRows() {
      return totalEstimatedRows_;
    }
    /**
     * <pre>
     * Total estimated rows across all splits
     * </pre>
     *
     * <code>int64 total_estimated_rows = 3 [json_name = "totalEstimatedRows"];</code>
     * @param value The totalEstimatedRows to set.
     * @return This builder for chaining.
     */
    public Builder setTotalEstimatedRows(long value) {

      totalEstimatedRows_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Total estimated rows across all splits
     * </pre>
     *
     * <code>int64 total_estimated_rows = 3 [json_name = "totalEstimatedRows"];</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalEstimatedRows() {
      bitField0_ = (bitField0_ & ~0x00000004);
      totalEstimatedRows_ = 0L;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:datapower.noesis.v1.PlanExtractionResponse)
  }

  // @@protoc_insertion_point(class_scope:datapower.noesis.v1.PlanExtractionResponse)
  private static final datapower.noesis.v1.PlanExtractionResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new datapower.noesis.v1.PlanExtractionResponse();
  }

  public static datapower.noesis.v1.PlanExtractionResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PlanExtractionResponse>
      PARSER = new com.google.protobuf.AbstractParser<PlanExtractionResponse>() {
    @java.lang.Override
    public PlanExtractionResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<PlanExtractionResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PlanExtractionResponse> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public datapower.noesis.v1.PlanExtractionResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

