// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datapower/noesis/v1/sidecar.proto

package datapower.noesis.v1;

/**
 * Protobuf type {@code datapower.noesis.v1.InitSessionRequest}
 */
public final class InitSessionRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:datapower.noesis.v1.InitSessionRequest)
    InitSessionRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use InitSessionRequest.newBuilder() to construct.
  private InitSessionRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private InitSessionRequest() {
    sessionId_ = "";
    entity_ = "";
    splitId_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new InitSessionRequest();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return datapower.noesis.v1.SidecarOuterClass.internal_static_datapower_noesis_v1_InitSessionRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return datapower.noesis.v1.SidecarOuterClass.internal_static_datapower_noesis_v1_InitSessionRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            datapower.noesis.v1.InitSessionRequest.class, datapower.noesis.v1.InitSessionRequest.Builder.class);
  }

  public static final int SESSION_ID_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object sessionId_ = "";
  /**
   * <pre>
   * Unique session identifier
   * </pre>
   *
   * <code>string session_id = 1 [json_name = "sessionId"];</code>
   * @return The sessionId.
   */
  @java.lang.Override
  public java.lang.String getSessionId() {
    java.lang.Object ref = sessionId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      sessionId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Unique session identifier
   * </pre>
   *
   * <code>string session_id = 1 [json_name = "sessionId"];</code>
   * @return The bytes for sessionId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSessionIdBytes() {
    java.lang.Object ref = sessionId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      sessionId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ENTITY_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object entity_ = "";
  /**
   * <pre>
   * Entity being extracted (e.g., "customers")
   * </pre>
   *
   * <code>string entity = 2 [json_name = "entity"];</code>
   * @return The entity.
   */
  @java.lang.Override
  public java.lang.String getEntity() {
    java.lang.Object ref = entity_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      entity_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Entity being extracted (e.g., "customers")
   * </pre>
   *
   * <code>string entity = 2 [json_name = "entity"];</code>
   * @return The bytes for entity.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getEntityBytes() {
    java.lang.Object ref = entity_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      entity_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SCHEMA_FIELD_NUMBER = 3;
  private datapower.noesis.v1.StructuredSchemaDescriptor schema_;
  /**
   * <pre>
   * Schema for the data
   * </pre>
   *
   * <code>.datapower.noesis.v1.StructuredSchemaDescriptor schema = 3 [json_name = "schema"];</code>
   * @return Whether the schema field is set.
   */
  @java.lang.Override
  public boolean hasSchema() {
    return schema_ != null;
  }
  /**
   * <pre>
   * Schema for the data
   * </pre>
   *
   * <code>.datapower.noesis.v1.StructuredSchemaDescriptor schema = 3 [json_name = "schema"];</code>
   * @return The schema.
   */
  @java.lang.Override
  public datapower.noesis.v1.StructuredSchemaDescriptor getSchema() {
    return schema_ == null ? datapower.noesis.v1.StructuredSchemaDescriptor.getDefaultInstance() : schema_;
  }
  /**
   * <pre>
   * Schema for the data
   * </pre>
   *
   * <code>.datapower.noesis.v1.StructuredSchemaDescriptor schema = 3 [json_name = "schema"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.StructuredSchemaDescriptorOrBuilder getSchemaOrBuilder() {
    return schema_ == null ? datapower.noesis.v1.StructuredSchemaDescriptor.getDefaultInstance() : schema_;
  }

  public static final int STORAGE_FIELD_NUMBER = 4;
  private datapower.noesis.v1.StorageConfig storage_;
  /**
   * <pre>
   * Where to upload Parquet files
   * </pre>
   *
   * <code>.datapower.noesis.v1.StorageConfig storage = 4 [json_name = "storage"];</code>
   * @return Whether the storage field is set.
   */
  @java.lang.Override
  public boolean hasStorage() {
    return storage_ != null;
  }
  /**
   * <pre>
   * Where to upload Parquet files
   * </pre>
   *
   * <code>.datapower.noesis.v1.StorageConfig storage = 4 [json_name = "storage"];</code>
   * @return The storage.
   */
  @java.lang.Override
  public datapower.noesis.v1.StorageConfig getStorage() {
    return storage_ == null ? datapower.noesis.v1.StorageConfig.getDefaultInstance() : storage_;
  }
  /**
   * <pre>
   * Where to upload Parquet files
   * </pre>
   *
   * <code>.datapower.noesis.v1.StorageConfig storage = 4 [json_name = "storage"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.StorageConfigOrBuilder getStorageOrBuilder() {
    return storage_ == null ? datapower.noesis.v1.StorageConfig.getDefaultInstance() : storage_;
  }

  public static final int PARQUET_CONFIG_FIELD_NUMBER = 5;
  private datapower.noesis.v1.ParquetConfig parquetConfig_;
  /**
   * <pre>
   * Parquet file settings
   * </pre>
   *
   * <code>.datapower.noesis.v1.ParquetConfig parquet_config = 5 [json_name = "parquetConfig"];</code>
   * @return Whether the parquetConfig field is set.
   */
  @java.lang.Override
  public boolean hasParquetConfig() {
    return parquetConfig_ != null;
  }
  /**
   * <pre>
   * Parquet file settings
   * </pre>
   *
   * <code>.datapower.noesis.v1.ParquetConfig parquet_config = 5 [json_name = "parquetConfig"];</code>
   * @return The parquetConfig.
   */
  @java.lang.Override
  public datapower.noesis.v1.ParquetConfig getParquetConfig() {
    return parquetConfig_ == null ? datapower.noesis.v1.ParquetConfig.getDefaultInstance() : parquetConfig_;
  }
  /**
   * <pre>
   * Parquet file settings
   * </pre>
   *
   * <code>.datapower.noesis.v1.ParquetConfig parquet_config = 5 [json_name = "parquetConfig"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.ParquetConfigOrBuilder getParquetConfigOrBuilder() {
    return parquetConfig_ == null ? datapower.noesis.v1.ParquetConfig.getDefaultInstance() : parquetConfig_;
  }

  public static final int SPLIT_ID_FIELD_NUMBER = 6;
  @SuppressWarnings("serial")
  private volatile java.lang.Object splitId_ = "";
  /**
   * <pre>
   * Optional: split identifier for this extraction
   * </pre>
   *
   * <code>string split_id = 6 [json_name = "splitId"];</code>
   * @return The splitId.
   */
  @java.lang.Override
  public java.lang.String getSplitId() {
    java.lang.Object ref = splitId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      splitId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Optional: split identifier for this extraction
   * </pre>
   *
   * <code>string split_id = 6 [json_name = "splitId"];</code>
   * @return The bytes for splitId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSplitIdBytes() {
    java.lang.Object ref = splitId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      splitId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sessionId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, sessionId_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(entity_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, entity_);
    }
    if (schema_ != null) {
      output.writeMessage(3, getSchema());
    }
    if (storage_ != null) {
      output.writeMessage(4, getStorage());
    }
    if (parquetConfig_ != null) {
      output.writeMessage(5, getParquetConfig());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(splitId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, splitId_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sessionId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, sessionId_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(entity_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, entity_);
    }
    if (schema_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getSchema());
    }
    if (storage_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getStorage());
    }
    if (parquetConfig_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getParquetConfig());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(splitId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, splitId_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof datapower.noesis.v1.InitSessionRequest)) {
      return super.equals(obj);
    }
    datapower.noesis.v1.InitSessionRequest other = (datapower.noesis.v1.InitSessionRequest) obj;

    if (!getSessionId()
        .equals(other.getSessionId())) return false;
    if (!getEntity()
        .equals(other.getEntity())) return false;
    if (hasSchema() != other.hasSchema()) return false;
    if (hasSchema()) {
      if (!getSchema()
          .equals(other.getSchema())) return false;
    }
    if (hasStorage() != other.hasStorage()) return false;
    if (hasStorage()) {
      if (!getStorage()
          .equals(other.getStorage())) return false;
    }
    if (hasParquetConfig() != other.hasParquetConfig()) return false;
    if (hasParquetConfig()) {
      if (!getParquetConfig()
          .equals(other.getParquetConfig())) return false;
    }
    if (!getSplitId()
        .equals(other.getSplitId())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + SESSION_ID_FIELD_NUMBER;
    hash = (53 * hash) + getSessionId().hashCode();
    hash = (37 * hash) + ENTITY_FIELD_NUMBER;
    hash = (53 * hash) + getEntity().hashCode();
    if (hasSchema()) {
      hash = (37 * hash) + SCHEMA_FIELD_NUMBER;
      hash = (53 * hash) + getSchema().hashCode();
    }
    if (hasStorage()) {
      hash = (37 * hash) + STORAGE_FIELD_NUMBER;
      hash = (53 * hash) + getStorage().hashCode();
    }
    if (hasParquetConfig()) {
      hash = (37 * hash) + PARQUET_CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getParquetConfig().hashCode();
    }
    hash = (37 * hash) + SPLIT_ID_FIELD_NUMBER;
    hash = (53 * hash) + getSplitId().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static datapower.noesis.v1.InitSessionRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.InitSessionRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.InitSessionRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.InitSessionRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.InitSessionRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.InitSessionRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.InitSessionRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.InitSessionRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static datapower.noesis.v1.InitSessionRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static datapower.noesis.v1.InitSessionRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static datapower.noesis.v1.InitSessionRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.InitSessionRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(datapower.noesis.v1.InitSessionRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code datapower.noesis.v1.InitSessionRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:datapower.noesis.v1.InitSessionRequest)
      datapower.noesis.v1.InitSessionRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return datapower.noesis.v1.SidecarOuterClass.internal_static_datapower_noesis_v1_InitSessionRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return datapower.noesis.v1.SidecarOuterClass.internal_static_datapower_noesis_v1_InitSessionRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              datapower.noesis.v1.InitSessionRequest.class, datapower.noesis.v1.InitSessionRequest.Builder.class);
    }

    // Construct using datapower.noesis.v1.InitSessionRequest.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      sessionId_ = "";
      entity_ = "";
      schema_ = null;
      if (schemaBuilder_ != null) {
        schemaBuilder_.dispose();
        schemaBuilder_ = null;
      }
      storage_ = null;
      if (storageBuilder_ != null) {
        storageBuilder_.dispose();
        storageBuilder_ = null;
      }
      parquetConfig_ = null;
      if (parquetConfigBuilder_ != null) {
        parquetConfigBuilder_.dispose();
        parquetConfigBuilder_ = null;
      }
      splitId_ = "";
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return datapower.noesis.v1.SidecarOuterClass.internal_static_datapower_noesis_v1_InitSessionRequest_descriptor;
    }

    @java.lang.Override
    public datapower.noesis.v1.InitSessionRequest getDefaultInstanceForType() {
      return datapower.noesis.v1.InitSessionRequest.getDefaultInstance();
    }

    @java.lang.Override
    public datapower.noesis.v1.InitSessionRequest build() {
      datapower.noesis.v1.InitSessionRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public datapower.noesis.v1.InitSessionRequest buildPartial() {
      datapower.noesis.v1.InitSessionRequest result = new datapower.noesis.v1.InitSessionRequest(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(datapower.noesis.v1.InitSessionRequest result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.sessionId_ = sessionId_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.entity_ = entity_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.schema_ = schemaBuilder_ == null
            ? schema_
            : schemaBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.storage_ = storageBuilder_ == null
            ? storage_
            : storageBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.parquetConfig_ = parquetConfigBuilder_ == null
            ? parquetConfig_
            : parquetConfigBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.splitId_ = splitId_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof datapower.noesis.v1.InitSessionRequest) {
        return mergeFrom((datapower.noesis.v1.InitSessionRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(datapower.noesis.v1.InitSessionRequest other) {
      if (other == datapower.noesis.v1.InitSessionRequest.getDefaultInstance()) return this;
      if (!other.getSessionId().isEmpty()) {
        sessionId_ = other.sessionId_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getEntity().isEmpty()) {
        entity_ = other.entity_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (other.hasSchema()) {
        mergeSchema(other.getSchema());
      }
      if (other.hasStorage()) {
        mergeStorage(other.getStorage());
      }
      if (other.hasParquetConfig()) {
        mergeParquetConfig(other.getParquetConfig());
      }
      if (!other.getSplitId().isEmpty()) {
        splitId_ = other.splitId_;
        bitField0_ |= 0x00000020;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              sessionId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              entity_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getSchemaFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getStorageFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getParquetConfigFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            case 50: {
              splitId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000020;
              break;
            } // case 50
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object sessionId_ = "";
    /**
     * <pre>
     * Unique session identifier
     * </pre>
     *
     * <code>string session_id = 1 [json_name = "sessionId"];</code>
     * @return The sessionId.
     */
    public java.lang.String getSessionId() {
      java.lang.Object ref = sessionId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sessionId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Unique session identifier
     * </pre>
     *
     * <code>string session_id = 1 [json_name = "sessionId"];</code>
     * @return The bytes for sessionId.
     */
    public com.google.protobuf.ByteString
        getSessionIdBytes() {
      java.lang.Object ref = sessionId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sessionId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Unique session identifier
     * </pre>
     *
     * <code>string session_id = 1 [json_name = "sessionId"];</code>
     * @param value The sessionId to set.
     * @return This builder for chaining.
     */
    public Builder setSessionId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      sessionId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Unique session identifier
     * </pre>
     *
     * <code>string session_id = 1 [json_name = "sessionId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearSessionId() {
      sessionId_ = getDefaultInstance().getSessionId();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Unique session identifier
     * </pre>
     *
     * <code>string session_id = 1 [json_name = "sessionId"];</code>
     * @param value The bytes for sessionId to set.
     * @return This builder for chaining.
     */
    public Builder setSessionIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      sessionId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object entity_ = "";
    /**
     * <pre>
     * Entity being extracted (e.g., "customers")
     * </pre>
     *
     * <code>string entity = 2 [json_name = "entity"];</code>
     * @return The entity.
     */
    public java.lang.String getEntity() {
      java.lang.Object ref = entity_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        entity_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Entity being extracted (e.g., "customers")
     * </pre>
     *
     * <code>string entity = 2 [json_name = "entity"];</code>
     * @return The bytes for entity.
     */
    public com.google.protobuf.ByteString
        getEntityBytes() {
      java.lang.Object ref = entity_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        entity_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Entity being extracted (e.g., "customers")
     * </pre>
     *
     * <code>string entity = 2 [json_name = "entity"];</code>
     * @param value The entity to set.
     * @return This builder for chaining.
     */
    public Builder setEntity(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      entity_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Entity being extracted (e.g., "customers")
     * </pre>
     *
     * <code>string entity = 2 [json_name = "entity"];</code>
     * @return This builder for chaining.
     */
    public Builder clearEntity() {
      entity_ = getDefaultInstance().getEntity();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Entity being extracted (e.g., "customers")
     * </pre>
     *
     * <code>string entity = 2 [json_name = "entity"];</code>
     * @param value The bytes for entity to set.
     * @return This builder for chaining.
     */
    public Builder setEntityBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      entity_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private datapower.noesis.v1.StructuredSchemaDescriptor schema_;
    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.StructuredSchemaDescriptor, datapower.noesis.v1.StructuredSchemaDescriptor.Builder, datapower.noesis.v1.StructuredSchemaDescriptorOrBuilder> schemaBuilder_;
    /**
     * <pre>
     * Schema for the data
     * </pre>
     *
     * <code>.datapower.noesis.v1.StructuredSchemaDescriptor schema = 3 [json_name = "schema"];</code>
     * @return Whether the schema field is set.
     */
    public boolean hasSchema() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Schema for the data
     * </pre>
     *
     * <code>.datapower.noesis.v1.StructuredSchemaDescriptor schema = 3 [json_name = "schema"];</code>
     * @return The schema.
     */
    public datapower.noesis.v1.StructuredSchemaDescriptor getSchema() {
      if (schemaBuilder_ == null) {
        return schema_ == null ? datapower.noesis.v1.StructuredSchemaDescriptor.getDefaultInstance() : schema_;
      } else {
        return schemaBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Schema for the data
     * </pre>
     *
     * <code>.datapower.noesis.v1.StructuredSchemaDescriptor schema = 3 [json_name = "schema"];</code>
     */
    public Builder setSchema(datapower.noesis.v1.StructuredSchemaDescriptor value) {
      if (schemaBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        schema_ = value;
      } else {
        schemaBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Schema for the data
     * </pre>
     *
     * <code>.datapower.noesis.v1.StructuredSchemaDescriptor schema = 3 [json_name = "schema"];</code>
     */
    public Builder setSchema(
        datapower.noesis.v1.StructuredSchemaDescriptor.Builder builderForValue) {
      if (schemaBuilder_ == null) {
        schema_ = builderForValue.build();
      } else {
        schemaBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Schema for the data
     * </pre>
     *
     * <code>.datapower.noesis.v1.StructuredSchemaDescriptor schema = 3 [json_name = "schema"];</code>
     */
    public Builder mergeSchema(datapower.noesis.v1.StructuredSchemaDescriptor value) {
      if (schemaBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          schema_ != null &&
          schema_ != datapower.noesis.v1.StructuredSchemaDescriptor.getDefaultInstance()) {
          getSchemaBuilder().mergeFrom(value);
        } else {
          schema_ = value;
        }
      } else {
        schemaBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Schema for the data
     * </pre>
     *
     * <code>.datapower.noesis.v1.StructuredSchemaDescriptor schema = 3 [json_name = "schema"];</code>
     */
    public Builder clearSchema() {
      bitField0_ = (bitField0_ & ~0x00000004);
      schema_ = null;
      if (schemaBuilder_ != null) {
        schemaBuilder_.dispose();
        schemaBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Schema for the data
     * </pre>
     *
     * <code>.datapower.noesis.v1.StructuredSchemaDescriptor schema = 3 [json_name = "schema"];</code>
     */
    public datapower.noesis.v1.StructuredSchemaDescriptor.Builder getSchemaBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getSchemaFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Schema for the data
     * </pre>
     *
     * <code>.datapower.noesis.v1.StructuredSchemaDescriptor schema = 3 [json_name = "schema"];</code>
     */
    public datapower.noesis.v1.StructuredSchemaDescriptorOrBuilder getSchemaOrBuilder() {
      if (schemaBuilder_ != null) {
        return schemaBuilder_.getMessageOrBuilder();
      } else {
        return schema_ == null ?
            datapower.noesis.v1.StructuredSchemaDescriptor.getDefaultInstance() : schema_;
      }
    }
    /**
     * <pre>
     * Schema for the data
     * </pre>
     *
     * <code>.datapower.noesis.v1.StructuredSchemaDescriptor schema = 3 [json_name = "schema"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.StructuredSchemaDescriptor, datapower.noesis.v1.StructuredSchemaDescriptor.Builder, datapower.noesis.v1.StructuredSchemaDescriptorOrBuilder> 
        getSchemaFieldBuilder() {
      if (schemaBuilder_ == null) {
        schemaBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            datapower.noesis.v1.StructuredSchemaDescriptor, datapower.noesis.v1.StructuredSchemaDescriptor.Builder, datapower.noesis.v1.StructuredSchemaDescriptorOrBuilder>(
                getSchema(),
                getParentForChildren(),
                isClean());
        schema_ = null;
      }
      return schemaBuilder_;
    }

    private datapower.noesis.v1.StorageConfig storage_;
    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.StorageConfig, datapower.noesis.v1.StorageConfig.Builder, datapower.noesis.v1.StorageConfigOrBuilder> storageBuilder_;
    /**
     * <pre>
     * Where to upload Parquet files
     * </pre>
     *
     * <code>.datapower.noesis.v1.StorageConfig storage = 4 [json_name = "storage"];</code>
     * @return Whether the storage field is set.
     */
    public boolean hasStorage() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Where to upload Parquet files
     * </pre>
     *
     * <code>.datapower.noesis.v1.StorageConfig storage = 4 [json_name = "storage"];</code>
     * @return The storage.
     */
    public datapower.noesis.v1.StorageConfig getStorage() {
      if (storageBuilder_ == null) {
        return storage_ == null ? datapower.noesis.v1.StorageConfig.getDefaultInstance() : storage_;
      } else {
        return storageBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Where to upload Parquet files
     * </pre>
     *
     * <code>.datapower.noesis.v1.StorageConfig storage = 4 [json_name = "storage"];</code>
     */
    public Builder setStorage(datapower.noesis.v1.StorageConfig value) {
      if (storageBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        storage_ = value;
      } else {
        storageBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Where to upload Parquet files
     * </pre>
     *
     * <code>.datapower.noesis.v1.StorageConfig storage = 4 [json_name = "storage"];</code>
     */
    public Builder setStorage(
        datapower.noesis.v1.StorageConfig.Builder builderForValue) {
      if (storageBuilder_ == null) {
        storage_ = builderForValue.build();
      } else {
        storageBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Where to upload Parquet files
     * </pre>
     *
     * <code>.datapower.noesis.v1.StorageConfig storage = 4 [json_name = "storage"];</code>
     */
    public Builder mergeStorage(datapower.noesis.v1.StorageConfig value) {
      if (storageBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0) &&
          storage_ != null &&
          storage_ != datapower.noesis.v1.StorageConfig.getDefaultInstance()) {
          getStorageBuilder().mergeFrom(value);
        } else {
          storage_ = value;
        }
      } else {
        storageBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Where to upload Parquet files
     * </pre>
     *
     * <code>.datapower.noesis.v1.StorageConfig storage = 4 [json_name = "storage"];</code>
     */
    public Builder clearStorage() {
      bitField0_ = (bitField0_ & ~0x00000008);
      storage_ = null;
      if (storageBuilder_ != null) {
        storageBuilder_.dispose();
        storageBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Where to upload Parquet files
     * </pre>
     *
     * <code>.datapower.noesis.v1.StorageConfig storage = 4 [json_name = "storage"];</code>
     */
    public datapower.noesis.v1.StorageConfig.Builder getStorageBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getStorageFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Where to upload Parquet files
     * </pre>
     *
     * <code>.datapower.noesis.v1.StorageConfig storage = 4 [json_name = "storage"];</code>
     */
    public datapower.noesis.v1.StorageConfigOrBuilder getStorageOrBuilder() {
      if (storageBuilder_ != null) {
        return storageBuilder_.getMessageOrBuilder();
      } else {
        return storage_ == null ?
            datapower.noesis.v1.StorageConfig.getDefaultInstance() : storage_;
      }
    }
    /**
     * <pre>
     * Where to upload Parquet files
     * </pre>
     *
     * <code>.datapower.noesis.v1.StorageConfig storage = 4 [json_name = "storage"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.StorageConfig, datapower.noesis.v1.StorageConfig.Builder, datapower.noesis.v1.StorageConfigOrBuilder> 
        getStorageFieldBuilder() {
      if (storageBuilder_ == null) {
        storageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            datapower.noesis.v1.StorageConfig, datapower.noesis.v1.StorageConfig.Builder, datapower.noesis.v1.StorageConfigOrBuilder>(
                getStorage(),
                getParentForChildren(),
                isClean());
        storage_ = null;
      }
      return storageBuilder_;
    }

    private datapower.noesis.v1.ParquetConfig parquetConfig_;
    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.ParquetConfig, datapower.noesis.v1.ParquetConfig.Builder, datapower.noesis.v1.ParquetConfigOrBuilder> parquetConfigBuilder_;
    /**
     * <pre>
     * Parquet file settings
     * </pre>
     *
     * <code>.datapower.noesis.v1.ParquetConfig parquet_config = 5 [json_name = "parquetConfig"];</code>
     * @return Whether the parquetConfig field is set.
     */
    public boolean hasParquetConfig() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Parquet file settings
     * </pre>
     *
     * <code>.datapower.noesis.v1.ParquetConfig parquet_config = 5 [json_name = "parquetConfig"];</code>
     * @return The parquetConfig.
     */
    public datapower.noesis.v1.ParquetConfig getParquetConfig() {
      if (parquetConfigBuilder_ == null) {
        return parquetConfig_ == null ? datapower.noesis.v1.ParquetConfig.getDefaultInstance() : parquetConfig_;
      } else {
        return parquetConfigBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Parquet file settings
     * </pre>
     *
     * <code>.datapower.noesis.v1.ParquetConfig parquet_config = 5 [json_name = "parquetConfig"];</code>
     */
    public Builder setParquetConfig(datapower.noesis.v1.ParquetConfig value) {
      if (parquetConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        parquetConfig_ = value;
      } else {
        parquetConfigBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Parquet file settings
     * </pre>
     *
     * <code>.datapower.noesis.v1.ParquetConfig parquet_config = 5 [json_name = "parquetConfig"];</code>
     */
    public Builder setParquetConfig(
        datapower.noesis.v1.ParquetConfig.Builder builderForValue) {
      if (parquetConfigBuilder_ == null) {
        parquetConfig_ = builderForValue.build();
      } else {
        parquetConfigBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Parquet file settings
     * </pre>
     *
     * <code>.datapower.noesis.v1.ParquetConfig parquet_config = 5 [json_name = "parquetConfig"];</code>
     */
    public Builder mergeParquetConfig(datapower.noesis.v1.ParquetConfig value) {
      if (parquetConfigBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0) &&
          parquetConfig_ != null &&
          parquetConfig_ != datapower.noesis.v1.ParquetConfig.getDefaultInstance()) {
          getParquetConfigBuilder().mergeFrom(value);
        } else {
          parquetConfig_ = value;
        }
      } else {
        parquetConfigBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Parquet file settings
     * </pre>
     *
     * <code>.datapower.noesis.v1.ParquetConfig parquet_config = 5 [json_name = "parquetConfig"];</code>
     */
    public Builder clearParquetConfig() {
      bitField0_ = (bitField0_ & ~0x00000010);
      parquetConfig_ = null;
      if (parquetConfigBuilder_ != null) {
        parquetConfigBuilder_.dispose();
        parquetConfigBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Parquet file settings
     * </pre>
     *
     * <code>.datapower.noesis.v1.ParquetConfig parquet_config = 5 [json_name = "parquetConfig"];</code>
     */
    public datapower.noesis.v1.ParquetConfig.Builder getParquetConfigBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getParquetConfigFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Parquet file settings
     * </pre>
     *
     * <code>.datapower.noesis.v1.ParquetConfig parquet_config = 5 [json_name = "parquetConfig"];</code>
     */
    public datapower.noesis.v1.ParquetConfigOrBuilder getParquetConfigOrBuilder() {
      if (parquetConfigBuilder_ != null) {
        return parquetConfigBuilder_.getMessageOrBuilder();
      } else {
        return parquetConfig_ == null ?
            datapower.noesis.v1.ParquetConfig.getDefaultInstance() : parquetConfig_;
      }
    }
    /**
     * <pre>
     * Parquet file settings
     * </pre>
     *
     * <code>.datapower.noesis.v1.ParquetConfig parquet_config = 5 [json_name = "parquetConfig"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.ParquetConfig, datapower.noesis.v1.ParquetConfig.Builder, datapower.noesis.v1.ParquetConfigOrBuilder> 
        getParquetConfigFieldBuilder() {
      if (parquetConfigBuilder_ == null) {
        parquetConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            datapower.noesis.v1.ParquetConfig, datapower.noesis.v1.ParquetConfig.Builder, datapower.noesis.v1.ParquetConfigOrBuilder>(
                getParquetConfig(),
                getParentForChildren(),
                isClean());
        parquetConfig_ = null;
      }
      return parquetConfigBuilder_;
    }

    private java.lang.Object splitId_ = "";
    /**
     * <pre>
     * Optional: split identifier for this extraction
     * </pre>
     *
     * <code>string split_id = 6 [json_name = "splitId"];</code>
     * @return The splitId.
     */
    public java.lang.String getSplitId() {
      java.lang.Object ref = splitId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        splitId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Optional: split identifier for this extraction
     * </pre>
     *
     * <code>string split_id = 6 [json_name = "splitId"];</code>
     * @return The bytes for splitId.
     */
    public com.google.protobuf.ByteString
        getSplitIdBytes() {
      java.lang.Object ref = splitId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        splitId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Optional: split identifier for this extraction
     * </pre>
     *
     * <code>string split_id = 6 [json_name = "splitId"];</code>
     * @param value The splitId to set.
     * @return This builder for chaining.
     */
    public Builder setSplitId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      splitId_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: split identifier for this extraction
     * </pre>
     *
     * <code>string split_id = 6 [json_name = "splitId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearSplitId() {
      splitId_ = getDefaultInstance().getSplitId();
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: split identifier for this extraction
     * </pre>
     *
     * <code>string split_id = 6 [json_name = "splitId"];</code>
     * @param value The bytes for splitId to set.
     * @return This builder for chaining.
     */
    public Builder setSplitIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      splitId_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:datapower.noesis.v1.InitSessionRequest)
  }

  // @@protoc_insertion_point(class_scope:datapower.noesis.v1.InitSessionRequest)
  private static final datapower.noesis.v1.InitSessionRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new datapower.noesis.v1.InitSessionRequest();
  }

  public static datapower.noesis.v1.InitSessionRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<InitSessionRequest>
      PARSER = new com.google.protobuf.AbstractParser<InitSessionRequest>() {
    @java.lang.Override
    public InitSessionRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<InitSessionRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<InitSessionRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public datapower.noesis.v1.InitSessionRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

