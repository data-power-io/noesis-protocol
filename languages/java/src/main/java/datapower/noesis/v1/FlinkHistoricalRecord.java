// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datapower/noesis/v1/enrichment_service.proto

package datapower.noesis.v1;

/**
 * <pre>
 * Historical record with Flink-specific metadata
 * </pre>
 *
 * Protobuf type {@code datapower.noesis.v1.FlinkHistoricalRecord}
 */
public final class FlinkHistoricalRecord extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:datapower.noesis.v1.FlinkHistoricalRecord)
    FlinkHistoricalRecordOrBuilder {
private static final long serialVersionUID = 0L;
  // Use FlinkHistoricalRecord.newBuilder() to construct.
  private FlinkHistoricalRecord(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private FlinkHistoricalRecord() {
    validFrom_ = "";
    validTo_ = "";
    changeType_ = "";
    watermark_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new FlinkHistoricalRecord();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return datapower.noesis.v1.FlinkEnrichmentServiceProto.internal_static_datapower_noesis_v1_FlinkHistoricalRecord_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return datapower.noesis.v1.FlinkEnrichmentServiceProto.internal_static_datapower_noesis_v1_FlinkHistoricalRecord_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            datapower.noesis.v1.FlinkHistoricalRecord.class, datapower.noesis.v1.FlinkHistoricalRecord.Builder.class);
  }

  public static final int DATA_FIELD_NUMBER = 1;
  private com.google.protobuf.Struct data_;
  /**
   * <code>.google.protobuf.Struct data = 1 [json_name = "data"];</code>
   * @return Whether the data field is set.
   */
  @java.lang.Override
  public boolean hasData() {
    return data_ != null;
  }
  /**
   * <code>.google.protobuf.Struct data = 1 [json_name = "data"];</code>
   * @return The data.
   */
  @java.lang.Override
  public com.google.protobuf.Struct getData() {
    return data_ == null ? com.google.protobuf.Struct.getDefaultInstance() : data_;
  }
  /**
   * <code>.google.protobuf.Struct data = 1 [json_name = "data"];</code>
   */
  @java.lang.Override
  public com.google.protobuf.StructOrBuilder getDataOrBuilder() {
    return data_ == null ? com.google.protobuf.Struct.getDefaultInstance() : data_;
  }

  public static final int VALID_FROM_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object validFrom_ = "";
  /**
   * <code>string valid_from = 2 [json_name = "validFrom"];</code>
   * @return The validFrom.
   */
  @java.lang.Override
  public java.lang.String getValidFrom() {
    java.lang.Object ref = validFrom_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      validFrom_ = s;
      return s;
    }
  }
  /**
   * <code>string valid_from = 2 [json_name = "validFrom"];</code>
   * @return The bytes for validFrom.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getValidFromBytes() {
    java.lang.Object ref = validFrom_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      validFrom_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int VALID_TO_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private volatile java.lang.Object validTo_ = "";
  /**
   * <code>string valid_to = 3 [json_name = "validTo"];</code>
   * @return The validTo.
   */
  @java.lang.Override
  public java.lang.String getValidTo() {
    java.lang.Object ref = validTo_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      validTo_ = s;
      return s;
    }
  }
  /**
   * <code>string valid_to = 3 [json_name = "validTo"];</code>
   * @return The bytes for validTo.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getValidToBytes() {
    java.lang.Object ref = validTo_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      validTo_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CHANGE_TYPE_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private volatile java.lang.Object changeType_ = "";
  /**
   * <code>string change_type = 4 [json_name = "changeType"];</code>
   * @return The changeType.
   */
  @java.lang.Override
  public java.lang.String getChangeType() {
    java.lang.Object ref = changeType_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      changeType_ = s;
      return s;
    }
  }
  /**
   * <code>string change_type = 4 [json_name = "changeType"];</code>
   * @return The bytes for changeType.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getChangeTypeBytes() {
    java.lang.Object ref = changeType_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      changeType_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int EVENT_TIME_FIELD_NUMBER = 5;
  private long eventTime_ = 0L;
  /**
   * <pre>
   * Flink event time
   * </pre>
   *
   * <code>int64 event_time = 5 [json_name = "eventTime"];</code>
   * @return The eventTime.
   */
  @java.lang.Override
  public long getEventTime() {
    return eventTime_;
  }

  public static final int PROCESSING_TIME_FIELD_NUMBER = 6;
  private long processingTime_ = 0L;
  /**
   * <pre>
   * Flink processing time
   * </pre>
   *
   * <code>int64 processing_time = 6 [json_name = "processingTime"];</code>
   * @return The processingTime.
   */
  @java.lang.Override
  public long getProcessingTime() {
    return processingTime_;
  }

  public static final int WATERMARK_FIELD_NUMBER = 7;
  @SuppressWarnings("serial")
  private volatile java.lang.Object watermark_ = "";
  /**
   * <pre>
   * Flink watermark information
   * </pre>
   *
   * <code>string watermark = 7 [json_name = "watermark"];</code>
   * @return The watermark.
   */
  @java.lang.Override
  public java.lang.String getWatermark() {
    java.lang.Object ref = watermark_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      watermark_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Flink watermark information
   * </pre>
   *
   * <code>string watermark = 7 [json_name = "watermark"];</code>
   * @return The bytes for watermark.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getWatermarkBytes() {
    java.lang.Object ref = watermark_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      watermark_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (data_ != null) {
      output.writeMessage(1, getData());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(validFrom_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, validFrom_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(validTo_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, validTo_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(changeType_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, changeType_);
    }
    if (eventTime_ != 0L) {
      output.writeInt64(5, eventTime_);
    }
    if (processingTime_ != 0L) {
      output.writeInt64(6, processingTime_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(watermark_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, watermark_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (data_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getData());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(validFrom_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, validFrom_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(validTo_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, validTo_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(changeType_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, changeType_);
    }
    if (eventTime_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(5, eventTime_);
    }
    if (processingTime_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(6, processingTime_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(watermark_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, watermark_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof datapower.noesis.v1.FlinkHistoricalRecord)) {
      return super.equals(obj);
    }
    datapower.noesis.v1.FlinkHistoricalRecord other = (datapower.noesis.v1.FlinkHistoricalRecord) obj;

    if (hasData() != other.hasData()) return false;
    if (hasData()) {
      if (!getData()
          .equals(other.getData())) return false;
    }
    if (!getValidFrom()
        .equals(other.getValidFrom())) return false;
    if (!getValidTo()
        .equals(other.getValidTo())) return false;
    if (!getChangeType()
        .equals(other.getChangeType())) return false;
    if (getEventTime()
        != other.getEventTime()) return false;
    if (getProcessingTime()
        != other.getProcessingTime()) return false;
    if (!getWatermark()
        .equals(other.getWatermark())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasData()) {
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getData().hashCode();
    }
    hash = (37 * hash) + VALID_FROM_FIELD_NUMBER;
    hash = (53 * hash) + getValidFrom().hashCode();
    hash = (37 * hash) + VALID_TO_FIELD_NUMBER;
    hash = (53 * hash) + getValidTo().hashCode();
    hash = (37 * hash) + CHANGE_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + getChangeType().hashCode();
    hash = (37 * hash) + EVENT_TIME_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getEventTime());
    hash = (37 * hash) + PROCESSING_TIME_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getProcessingTime());
    hash = (37 * hash) + WATERMARK_FIELD_NUMBER;
    hash = (53 * hash) + getWatermark().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static datapower.noesis.v1.FlinkHistoricalRecord parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.FlinkHistoricalRecord parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.FlinkHistoricalRecord parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.FlinkHistoricalRecord parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.FlinkHistoricalRecord parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.FlinkHistoricalRecord parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.FlinkHistoricalRecord parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.FlinkHistoricalRecord parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static datapower.noesis.v1.FlinkHistoricalRecord parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static datapower.noesis.v1.FlinkHistoricalRecord parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static datapower.noesis.v1.FlinkHistoricalRecord parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.FlinkHistoricalRecord parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(datapower.noesis.v1.FlinkHistoricalRecord prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Historical record with Flink-specific metadata
   * </pre>
   *
   * Protobuf type {@code datapower.noesis.v1.FlinkHistoricalRecord}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:datapower.noesis.v1.FlinkHistoricalRecord)
      datapower.noesis.v1.FlinkHistoricalRecordOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return datapower.noesis.v1.FlinkEnrichmentServiceProto.internal_static_datapower_noesis_v1_FlinkHistoricalRecord_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return datapower.noesis.v1.FlinkEnrichmentServiceProto.internal_static_datapower_noesis_v1_FlinkHistoricalRecord_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              datapower.noesis.v1.FlinkHistoricalRecord.class, datapower.noesis.v1.FlinkHistoricalRecord.Builder.class);
    }

    // Construct using datapower.noesis.v1.FlinkHistoricalRecord.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      data_ = null;
      if (dataBuilder_ != null) {
        dataBuilder_.dispose();
        dataBuilder_ = null;
      }
      validFrom_ = "";
      validTo_ = "";
      changeType_ = "";
      eventTime_ = 0L;
      processingTime_ = 0L;
      watermark_ = "";
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return datapower.noesis.v1.FlinkEnrichmentServiceProto.internal_static_datapower_noesis_v1_FlinkHistoricalRecord_descriptor;
    }

    @java.lang.Override
    public datapower.noesis.v1.FlinkHistoricalRecord getDefaultInstanceForType() {
      return datapower.noesis.v1.FlinkHistoricalRecord.getDefaultInstance();
    }

    @java.lang.Override
    public datapower.noesis.v1.FlinkHistoricalRecord build() {
      datapower.noesis.v1.FlinkHistoricalRecord result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public datapower.noesis.v1.FlinkHistoricalRecord buildPartial() {
      datapower.noesis.v1.FlinkHistoricalRecord result = new datapower.noesis.v1.FlinkHistoricalRecord(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(datapower.noesis.v1.FlinkHistoricalRecord result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.data_ = dataBuilder_ == null
            ? data_
            : dataBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.validFrom_ = validFrom_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.validTo_ = validTo_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.changeType_ = changeType_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.eventTime_ = eventTime_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.processingTime_ = processingTime_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.watermark_ = watermark_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof datapower.noesis.v1.FlinkHistoricalRecord) {
        return mergeFrom((datapower.noesis.v1.FlinkHistoricalRecord)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(datapower.noesis.v1.FlinkHistoricalRecord other) {
      if (other == datapower.noesis.v1.FlinkHistoricalRecord.getDefaultInstance()) return this;
      if (other.hasData()) {
        mergeData(other.getData());
      }
      if (!other.getValidFrom().isEmpty()) {
        validFrom_ = other.validFrom_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (!other.getValidTo().isEmpty()) {
        validTo_ = other.validTo_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (!other.getChangeType().isEmpty()) {
        changeType_ = other.changeType_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      if (other.getEventTime() != 0L) {
        setEventTime(other.getEventTime());
      }
      if (other.getProcessingTime() != 0L) {
        setProcessingTime(other.getProcessingTime());
      }
      if (!other.getWatermark().isEmpty()) {
        watermark_ = other.watermark_;
        bitField0_ |= 0x00000040;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getDataFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              validFrom_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              validTo_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              changeType_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 40: {
              eventTime_ = input.readInt64();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            case 48: {
              processingTime_ = input.readInt64();
              bitField0_ |= 0x00000020;
              break;
            } // case 48
            case 58: {
              watermark_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000040;
              break;
            } // case 58
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.Struct data_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder> dataBuilder_;
    /**
     * <code>.google.protobuf.Struct data = 1 [json_name = "data"];</code>
     * @return Whether the data field is set.
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.google.protobuf.Struct data = 1 [json_name = "data"];</code>
     * @return The data.
     */
    public com.google.protobuf.Struct getData() {
      if (dataBuilder_ == null) {
        return data_ == null ? com.google.protobuf.Struct.getDefaultInstance() : data_;
      } else {
        return dataBuilder_.getMessage();
      }
    }
    /**
     * <code>.google.protobuf.Struct data = 1 [json_name = "data"];</code>
     */
    public Builder setData(com.google.protobuf.Struct value) {
      if (dataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        data_ = value;
      } else {
        dataBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>.google.protobuf.Struct data = 1 [json_name = "data"];</code>
     */
    public Builder setData(
        com.google.protobuf.Struct.Builder builderForValue) {
      if (dataBuilder_ == null) {
        data_ = builderForValue.build();
      } else {
        dataBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>.google.protobuf.Struct data = 1 [json_name = "data"];</code>
     */
    public Builder mergeData(com.google.protobuf.Struct value) {
      if (dataBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          data_ != null &&
          data_ != com.google.protobuf.Struct.getDefaultInstance()) {
          getDataBuilder().mergeFrom(value);
        } else {
          data_ = value;
        }
      } else {
        dataBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>.google.protobuf.Struct data = 1 [json_name = "data"];</code>
     */
    public Builder clearData() {
      bitField0_ = (bitField0_ & ~0x00000001);
      data_ = null;
      if (dataBuilder_ != null) {
        dataBuilder_.dispose();
        dataBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.google.protobuf.Struct data = 1 [json_name = "data"];</code>
     */
    public com.google.protobuf.Struct.Builder getDataBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getDataFieldBuilder().getBuilder();
    }
    /**
     * <code>.google.protobuf.Struct data = 1 [json_name = "data"];</code>
     */
    public com.google.protobuf.StructOrBuilder getDataOrBuilder() {
      if (dataBuilder_ != null) {
        return dataBuilder_.getMessageOrBuilder();
      } else {
        return data_ == null ?
            com.google.protobuf.Struct.getDefaultInstance() : data_;
      }
    }
    /**
     * <code>.google.protobuf.Struct data = 1 [json_name = "data"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder> 
        getDataFieldBuilder() {
      if (dataBuilder_ == null) {
        dataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder>(
                getData(),
                getParentForChildren(),
                isClean());
        data_ = null;
      }
      return dataBuilder_;
    }

    private java.lang.Object validFrom_ = "";
    /**
     * <code>string valid_from = 2 [json_name = "validFrom"];</code>
     * @return The validFrom.
     */
    public java.lang.String getValidFrom() {
      java.lang.Object ref = validFrom_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        validFrom_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string valid_from = 2 [json_name = "validFrom"];</code>
     * @return The bytes for validFrom.
     */
    public com.google.protobuf.ByteString
        getValidFromBytes() {
      java.lang.Object ref = validFrom_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        validFrom_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string valid_from = 2 [json_name = "validFrom"];</code>
     * @param value The validFrom to set.
     * @return This builder for chaining.
     */
    public Builder setValidFrom(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      validFrom_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>string valid_from = 2 [json_name = "validFrom"];</code>
     * @return This builder for chaining.
     */
    public Builder clearValidFrom() {
      validFrom_ = getDefaultInstance().getValidFrom();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <code>string valid_from = 2 [json_name = "validFrom"];</code>
     * @param value The bytes for validFrom to set.
     * @return This builder for chaining.
     */
    public Builder setValidFromBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      validFrom_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private java.lang.Object validTo_ = "";
    /**
     * <code>string valid_to = 3 [json_name = "validTo"];</code>
     * @return The validTo.
     */
    public java.lang.String getValidTo() {
      java.lang.Object ref = validTo_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        validTo_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string valid_to = 3 [json_name = "validTo"];</code>
     * @return The bytes for validTo.
     */
    public com.google.protobuf.ByteString
        getValidToBytes() {
      java.lang.Object ref = validTo_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        validTo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string valid_to = 3 [json_name = "validTo"];</code>
     * @param value The validTo to set.
     * @return This builder for chaining.
     */
    public Builder setValidTo(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      validTo_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>string valid_to = 3 [json_name = "validTo"];</code>
     * @return This builder for chaining.
     */
    public Builder clearValidTo() {
      validTo_ = getDefaultInstance().getValidTo();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <code>string valid_to = 3 [json_name = "validTo"];</code>
     * @param value The bytes for validTo to set.
     * @return This builder for chaining.
     */
    public Builder setValidToBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      validTo_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private java.lang.Object changeType_ = "";
    /**
     * <code>string change_type = 4 [json_name = "changeType"];</code>
     * @return The changeType.
     */
    public java.lang.String getChangeType() {
      java.lang.Object ref = changeType_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        changeType_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string change_type = 4 [json_name = "changeType"];</code>
     * @return The bytes for changeType.
     */
    public com.google.protobuf.ByteString
        getChangeTypeBytes() {
      java.lang.Object ref = changeType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        changeType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string change_type = 4 [json_name = "changeType"];</code>
     * @param value The changeType to set.
     * @return This builder for chaining.
     */
    public Builder setChangeType(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      changeType_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>string change_type = 4 [json_name = "changeType"];</code>
     * @return This builder for chaining.
     */
    public Builder clearChangeType() {
      changeType_ = getDefaultInstance().getChangeType();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <code>string change_type = 4 [json_name = "changeType"];</code>
     * @param value The bytes for changeType to set.
     * @return This builder for chaining.
     */
    public Builder setChangeTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      changeType_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private long eventTime_ ;
    /**
     * <pre>
     * Flink event time
     * </pre>
     *
     * <code>int64 event_time = 5 [json_name = "eventTime"];</code>
     * @return The eventTime.
     */
    @java.lang.Override
    public long getEventTime() {
      return eventTime_;
    }
    /**
     * <pre>
     * Flink event time
     * </pre>
     *
     * <code>int64 event_time = 5 [json_name = "eventTime"];</code>
     * @param value The eventTime to set.
     * @return This builder for chaining.
     */
    public Builder setEventTime(long value) {

      eventTime_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Flink event time
     * </pre>
     *
     * <code>int64 event_time = 5 [json_name = "eventTime"];</code>
     * @return This builder for chaining.
     */
    public Builder clearEventTime() {
      bitField0_ = (bitField0_ & ~0x00000010);
      eventTime_ = 0L;
      onChanged();
      return this;
    }

    private long processingTime_ ;
    /**
     * <pre>
     * Flink processing time
     * </pre>
     *
     * <code>int64 processing_time = 6 [json_name = "processingTime"];</code>
     * @return The processingTime.
     */
    @java.lang.Override
    public long getProcessingTime() {
      return processingTime_;
    }
    /**
     * <pre>
     * Flink processing time
     * </pre>
     *
     * <code>int64 processing_time = 6 [json_name = "processingTime"];</code>
     * @param value The processingTime to set.
     * @return This builder for chaining.
     */
    public Builder setProcessingTime(long value) {

      processingTime_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Flink processing time
     * </pre>
     *
     * <code>int64 processing_time = 6 [json_name = "processingTime"];</code>
     * @return This builder for chaining.
     */
    public Builder clearProcessingTime() {
      bitField0_ = (bitField0_ & ~0x00000020);
      processingTime_ = 0L;
      onChanged();
      return this;
    }

    private java.lang.Object watermark_ = "";
    /**
     * <pre>
     * Flink watermark information
     * </pre>
     *
     * <code>string watermark = 7 [json_name = "watermark"];</code>
     * @return The watermark.
     */
    public java.lang.String getWatermark() {
      java.lang.Object ref = watermark_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        watermark_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Flink watermark information
     * </pre>
     *
     * <code>string watermark = 7 [json_name = "watermark"];</code>
     * @return The bytes for watermark.
     */
    public com.google.protobuf.ByteString
        getWatermarkBytes() {
      java.lang.Object ref = watermark_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        watermark_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Flink watermark information
     * </pre>
     *
     * <code>string watermark = 7 [json_name = "watermark"];</code>
     * @param value The watermark to set.
     * @return This builder for chaining.
     */
    public Builder setWatermark(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      watermark_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Flink watermark information
     * </pre>
     *
     * <code>string watermark = 7 [json_name = "watermark"];</code>
     * @return This builder for chaining.
     */
    public Builder clearWatermark() {
      watermark_ = getDefaultInstance().getWatermark();
      bitField0_ = (bitField0_ & ~0x00000040);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Flink watermark information
     * </pre>
     *
     * <code>string watermark = 7 [json_name = "watermark"];</code>
     * @param value The bytes for watermark to set.
     * @return This builder for chaining.
     */
    public Builder setWatermarkBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      watermark_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:datapower.noesis.v1.FlinkHistoricalRecord)
  }

  // @@protoc_insertion_point(class_scope:datapower.noesis.v1.FlinkHistoricalRecord)
  private static final datapower.noesis.v1.FlinkHistoricalRecord DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new datapower.noesis.v1.FlinkHistoricalRecord();
  }

  public static datapower.noesis.v1.FlinkHistoricalRecord getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<FlinkHistoricalRecord>
      PARSER = new com.google.protobuf.AbstractParser<FlinkHistoricalRecord>() {
    @java.lang.Override
    public FlinkHistoricalRecord parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<FlinkHistoricalRecord> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<FlinkHistoricalRecord> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public datapower.noesis.v1.FlinkHistoricalRecord getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

