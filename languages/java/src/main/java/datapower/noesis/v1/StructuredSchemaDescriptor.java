// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datapower/noesis/v1/connector.proto

package datapower.noesis.v1;

/**
 * <pre>
 * Enhanced schema descriptor with structured fields
 * </pre>
 *
 * Protobuf type {@code datapower.noesis.v1.StructuredSchemaDescriptor}
 */
public final class StructuredSchemaDescriptor extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:datapower.noesis.v1.StructuredSchemaDescriptor)
    StructuredSchemaDescriptorOrBuilder {
private static final long serialVersionUID = 0L;
  // Use StructuredSchemaDescriptor.newBuilder() to construct.
  private StructuredSchemaDescriptor(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private StructuredSchemaDescriptor() {
    schemaId_ = "";
    fields_ = java.util.Collections.emptyList();
    constraints_ = java.util.Collections.emptyList();
    indexes_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new StructuredSchemaDescriptor();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_StructuredSchemaDescriptor_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 5:
        return internalGetAttributes();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_StructuredSchemaDescriptor_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            datapower.noesis.v1.StructuredSchemaDescriptor.class, datapower.noesis.v1.StructuredSchemaDescriptor.Builder.class);
  }

  public static final int SCHEMA_ID_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object schemaId_ = "";
  /**
   * <pre>
   * Schema version identifier
   * </pre>
   *
   * <code>string schema_id = 1 [json_name = "schemaId"];</code>
   * @return The schemaId.
   */
  @java.lang.Override
  public java.lang.String getSchemaId() {
    java.lang.Object ref = schemaId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      schemaId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Schema version identifier
   * </pre>
   *
   * <code>string schema_id = 1 [json_name = "schemaId"];</code>
   * @return The bytes for schemaId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSchemaIdBytes() {
    java.lang.Object ref = schemaId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      schemaId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FIELDS_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<datapower.noesis.v1.FieldDescriptor> fields_;
  /**
   * <pre>
   * Field definitions
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.FieldDescriptor fields = 2 [json_name = "fields"];</code>
   */
  @java.lang.Override
  public java.util.List<datapower.noesis.v1.FieldDescriptor> getFieldsList() {
    return fields_;
  }
  /**
   * <pre>
   * Field definitions
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.FieldDescriptor fields = 2 [json_name = "fields"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends datapower.noesis.v1.FieldDescriptorOrBuilder> 
      getFieldsOrBuilderList() {
    return fields_;
  }
  /**
   * <pre>
   * Field definitions
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.FieldDescriptor fields = 2 [json_name = "fields"];</code>
   */
  @java.lang.Override
  public int getFieldsCount() {
    return fields_.size();
  }
  /**
   * <pre>
   * Field definitions
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.FieldDescriptor fields = 2 [json_name = "fields"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.FieldDescriptor getFields(int index) {
    return fields_.get(index);
  }
  /**
   * <pre>
   * Field definitions
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.FieldDescriptor fields = 2 [json_name = "fields"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.FieldDescriptorOrBuilder getFieldsOrBuilder(
      int index) {
    return fields_.get(index);
  }

  public static final int CONSTRAINTS_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private java.util.List<datapower.noesis.v1.ConstraintDescriptor> constraints_;
  /**
   * <pre>
   * Constraints
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.ConstraintDescriptor constraints = 3 [json_name = "constraints"];</code>
   */
  @java.lang.Override
  public java.util.List<datapower.noesis.v1.ConstraintDescriptor> getConstraintsList() {
    return constraints_;
  }
  /**
   * <pre>
   * Constraints
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.ConstraintDescriptor constraints = 3 [json_name = "constraints"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends datapower.noesis.v1.ConstraintDescriptorOrBuilder> 
      getConstraintsOrBuilderList() {
    return constraints_;
  }
  /**
   * <pre>
   * Constraints
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.ConstraintDescriptor constraints = 3 [json_name = "constraints"];</code>
   */
  @java.lang.Override
  public int getConstraintsCount() {
    return constraints_.size();
  }
  /**
   * <pre>
   * Constraints
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.ConstraintDescriptor constraints = 3 [json_name = "constraints"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.ConstraintDescriptor getConstraints(int index) {
    return constraints_.get(index);
  }
  /**
   * <pre>
   * Constraints
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.ConstraintDescriptor constraints = 3 [json_name = "constraints"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.ConstraintDescriptorOrBuilder getConstraintsOrBuilder(
      int index) {
    return constraints_.get(index);
  }

  public static final int INDEXES_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private java.util.List<datapower.noesis.v1.IndexDescriptor> indexes_;
  /**
   * <pre>
   * Indexes
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.IndexDescriptor indexes = 4 [json_name = "indexes"];</code>
   */
  @java.lang.Override
  public java.util.List<datapower.noesis.v1.IndexDescriptor> getIndexesList() {
    return indexes_;
  }
  /**
   * <pre>
   * Indexes
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.IndexDescriptor indexes = 4 [json_name = "indexes"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends datapower.noesis.v1.IndexDescriptorOrBuilder> 
      getIndexesOrBuilderList() {
    return indexes_;
  }
  /**
   * <pre>
   * Indexes
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.IndexDescriptor indexes = 4 [json_name = "indexes"];</code>
   */
  @java.lang.Override
  public int getIndexesCount() {
    return indexes_.size();
  }
  /**
   * <pre>
   * Indexes
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.IndexDescriptor indexes = 4 [json_name = "indexes"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.IndexDescriptor getIndexes(int index) {
    return indexes_.get(index);
  }
  /**
   * <pre>
   * Indexes
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.IndexDescriptor indexes = 4 [json_name = "indexes"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.IndexDescriptorOrBuilder getIndexesOrBuilder(
      int index) {
    return indexes_.get(index);
  }

  public static final int ATTRIBUTES_FIELD_NUMBER = 5;
  private static final class AttributesDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.String>newDefaultInstance(
                datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_StructuredSchemaDescriptor_AttributesEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.String> attributes_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.String>
  internalGetAttributes() {
    if (attributes_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          AttributesDefaultEntryHolder.defaultEntry);
    }
    return attributes_;
  }
  public int getAttributesCount() {
    return internalGetAttributes().getMap().size();
  }
  /**
   * <pre>
   * Table-level attributes
   * </pre>
   *
   * <code>map&lt;string, string&gt; attributes = 5 [json_name = "attributes"];</code>
   */
  @java.lang.Override
  public boolean containsAttributes(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetAttributes().getMap().containsKey(key);
  }
  /**
   * Use {@link #getAttributesMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getAttributes() {
    return getAttributesMap();
  }
  /**
   * <pre>
   * Table-level attributes
   * </pre>
   *
   * <code>map&lt;string, string&gt; attributes = 5 [json_name = "attributes"];</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.String, java.lang.String> getAttributesMap() {
    return internalGetAttributes().getMap();
  }
  /**
   * <pre>
   * Table-level attributes
   * </pre>
   *
   * <code>map&lt;string, string&gt; attributes = 5 [json_name = "attributes"];</code>
   */
  @java.lang.Override
  public /* nullable */
java.lang.String getAttributesOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetAttributes().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Table-level attributes
   * </pre>
   *
   * <code>map&lt;string, string&gt; attributes = 5 [json_name = "attributes"];</code>
   */
  @java.lang.Override
  public java.lang.String getAttributesOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetAttributes().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(schemaId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, schemaId_);
    }
    for (int i = 0; i < fields_.size(); i++) {
      output.writeMessage(2, fields_.get(i));
    }
    for (int i = 0; i < constraints_.size(); i++) {
      output.writeMessage(3, constraints_.get(i));
    }
    for (int i = 0; i < indexes_.size(); i++) {
      output.writeMessage(4, indexes_.get(i));
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetAttributes(),
        AttributesDefaultEntryHolder.defaultEntry,
        5);
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(schemaId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, schemaId_);
    }
    for (int i = 0; i < fields_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, fields_.get(i));
    }
    for (int i = 0; i < constraints_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, constraints_.get(i));
    }
    for (int i = 0; i < indexes_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, indexes_.get(i));
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
         : internalGetAttributes().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
      attributes__ = AttributesDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, attributes__);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof datapower.noesis.v1.StructuredSchemaDescriptor)) {
      return super.equals(obj);
    }
    datapower.noesis.v1.StructuredSchemaDescriptor other = (datapower.noesis.v1.StructuredSchemaDescriptor) obj;

    if (!getSchemaId()
        .equals(other.getSchemaId())) return false;
    if (!getFieldsList()
        .equals(other.getFieldsList())) return false;
    if (!getConstraintsList()
        .equals(other.getConstraintsList())) return false;
    if (!getIndexesList()
        .equals(other.getIndexesList())) return false;
    if (!internalGetAttributes().equals(
        other.internalGetAttributes())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + SCHEMA_ID_FIELD_NUMBER;
    hash = (53 * hash) + getSchemaId().hashCode();
    if (getFieldsCount() > 0) {
      hash = (37 * hash) + FIELDS_FIELD_NUMBER;
      hash = (53 * hash) + getFieldsList().hashCode();
    }
    if (getConstraintsCount() > 0) {
      hash = (37 * hash) + CONSTRAINTS_FIELD_NUMBER;
      hash = (53 * hash) + getConstraintsList().hashCode();
    }
    if (getIndexesCount() > 0) {
      hash = (37 * hash) + INDEXES_FIELD_NUMBER;
      hash = (53 * hash) + getIndexesList().hashCode();
    }
    if (!internalGetAttributes().getMap().isEmpty()) {
      hash = (37 * hash) + ATTRIBUTES_FIELD_NUMBER;
      hash = (53 * hash) + internalGetAttributes().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static datapower.noesis.v1.StructuredSchemaDescriptor parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.StructuredSchemaDescriptor parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.StructuredSchemaDescriptor parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.StructuredSchemaDescriptor parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.StructuredSchemaDescriptor parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.StructuredSchemaDescriptor parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.StructuredSchemaDescriptor parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.StructuredSchemaDescriptor parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static datapower.noesis.v1.StructuredSchemaDescriptor parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static datapower.noesis.v1.StructuredSchemaDescriptor parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static datapower.noesis.v1.StructuredSchemaDescriptor parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.StructuredSchemaDescriptor parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(datapower.noesis.v1.StructuredSchemaDescriptor prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Enhanced schema descriptor with structured fields
   * </pre>
   *
   * Protobuf type {@code datapower.noesis.v1.StructuredSchemaDescriptor}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:datapower.noesis.v1.StructuredSchemaDescriptor)
      datapower.noesis.v1.StructuredSchemaDescriptorOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_StructuredSchemaDescriptor_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 5:
          return internalGetAttributes();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 5:
          return internalGetMutableAttributes();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_StructuredSchemaDescriptor_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              datapower.noesis.v1.StructuredSchemaDescriptor.class, datapower.noesis.v1.StructuredSchemaDescriptor.Builder.class);
    }

    // Construct using datapower.noesis.v1.StructuredSchemaDescriptor.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      schemaId_ = "";
      if (fieldsBuilder_ == null) {
        fields_ = java.util.Collections.emptyList();
      } else {
        fields_ = null;
        fieldsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      if (constraintsBuilder_ == null) {
        constraints_ = java.util.Collections.emptyList();
      } else {
        constraints_ = null;
        constraintsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      if (indexesBuilder_ == null) {
        indexes_ = java.util.Collections.emptyList();
      } else {
        indexes_ = null;
        indexesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      internalGetMutableAttributes().clear();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_StructuredSchemaDescriptor_descriptor;
    }

    @java.lang.Override
    public datapower.noesis.v1.StructuredSchemaDescriptor getDefaultInstanceForType() {
      return datapower.noesis.v1.StructuredSchemaDescriptor.getDefaultInstance();
    }

    @java.lang.Override
    public datapower.noesis.v1.StructuredSchemaDescriptor build() {
      datapower.noesis.v1.StructuredSchemaDescriptor result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public datapower.noesis.v1.StructuredSchemaDescriptor buildPartial() {
      datapower.noesis.v1.StructuredSchemaDescriptor result = new datapower.noesis.v1.StructuredSchemaDescriptor(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(datapower.noesis.v1.StructuredSchemaDescriptor result) {
      if (fieldsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          fields_ = java.util.Collections.unmodifiableList(fields_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.fields_ = fields_;
      } else {
        result.fields_ = fieldsBuilder_.build();
      }
      if (constraintsBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          constraints_ = java.util.Collections.unmodifiableList(constraints_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.constraints_ = constraints_;
      } else {
        result.constraints_ = constraintsBuilder_.build();
      }
      if (indexesBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          indexes_ = java.util.Collections.unmodifiableList(indexes_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.indexes_ = indexes_;
      } else {
        result.indexes_ = indexesBuilder_.build();
      }
    }

    private void buildPartial0(datapower.noesis.v1.StructuredSchemaDescriptor result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.schemaId_ = schemaId_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.attributes_ = internalGetAttributes();
        result.attributes_.makeImmutable();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof datapower.noesis.v1.StructuredSchemaDescriptor) {
        return mergeFrom((datapower.noesis.v1.StructuredSchemaDescriptor)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(datapower.noesis.v1.StructuredSchemaDescriptor other) {
      if (other == datapower.noesis.v1.StructuredSchemaDescriptor.getDefaultInstance()) return this;
      if (!other.getSchemaId().isEmpty()) {
        schemaId_ = other.schemaId_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (fieldsBuilder_ == null) {
        if (!other.fields_.isEmpty()) {
          if (fields_.isEmpty()) {
            fields_ = other.fields_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureFieldsIsMutable();
            fields_.addAll(other.fields_);
          }
          onChanged();
        }
      } else {
        if (!other.fields_.isEmpty()) {
          if (fieldsBuilder_.isEmpty()) {
            fieldsBuilder_.dispose();
            fieldsBuilder_ = null;
            fields_ = other.fields_;
            bitField0_ = (bitField0_ & ~0x00000002);
            fieldsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getFieldsFieldBuilder() : null;
          } else {
            fieldsBuilder_.addAllMessages(other.fields_);
          }
        }
      }
      if (constraintsBuilder_ == null) {
        if (!other.constraints_.isEmpty()) {
          if (constraints_.isEmpty()) {
            constraints_ = other.constraints_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureConstraintsIsMutable();
            constraints_.addAll(other.constraints_);
          }
          onChanged();
        }
      } else {
        if (!other.constraints_.isEmpty()) {
          if (constraintsBuilder_.isEmpty()) {
            constraintsBuilder_.dispose();
            constraintsBuilder_ = null;
            constraints_ = other.constraints_;
            bitField0_ = (bitField0_ & ~0x00000004);
            constraintsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getConstraintsFieldBuilder() : null;
          } else {
            constraintsBuilder_.addAllMessages(other.constraints_);
          }
        }
      }
      if (indexesBuilder_ == null) {
        if (!other.indexes_.isEmpty()) {
          if (indexes_.isEmpty()) {
            indexes_ = other.indexes_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureIndexesIsMutable();
            indexes_.addAll(other.indexes_);
          }
          onChanged();
        }
      } else {
        if (!other.indexes_.isEmpty()) {
          if (indexesBuilder_.isEmpty()) {
            indexesBuilder_.dispose();
            indexesBuilder_ = null;
            indexes_ = other.indexes_;
            bitField0_ = (bitField0_ & ~0x00000008);
            indexesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getIndexesFieldBuilder() : null;
          } else {
            indexesBuilder_.addAllMessages(other.indexes_);
          }
        }
      }
      internalGetMutableAttributes().mergeFrom(
          other.internalGetAttributes());
      bitField0_ |= 0x00000010;
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              schemaId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              datapower.noesis.v1.FieldDescriptor m =
                  input.readMessage(
                      datapower.noesis.v1.FieldDescriptor.parser(),
                      extensionRegistry);
              if (fieldsBuilder_ == null) {
                ensureFieldsIsMutable();
                fields_.add(m);
              } else {
                fieldsBuilder_.addMessage(m);
              }
              break;
            } // case 18
            case 26: {
              datapower.noesis.v1.ConstraintDescriptor m =
                  input.readMessage(
                      datapower.noesis.v1.ConstraintDescriptor.parser(),
                      extensionRegistry);
              if (constraintsBuilder_ == null) {
                ensureConstraintsIsMutable();
                constraints_.add(m);
              } else {
                constraintsBuilder_.addMessage(m);
              }
              break;
            } // case 26
            case 34: {
              datapower.noesis.v1.IndexDescriptor m =
                  input.readMessage(
                      datapower.noesis.v1.IndexDescriptor.parser(),
                      extensionRegistry);
              if (indexesBuilder_ == null) {
                ensureIndexesIsMutable();
                indexes_.add(m);
              } else {
                indexesBuilder_.addMessage(m);
              }
              break;
            } // case 34
            case 42: {
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              attributes__ = input.readMessage(
                  AttributesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableAttributes().getMutableMap().put(
                  attributes__.getKey(), attributes__.getValue());
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object schemaId_ = "";
    /**
     * <pre>
     * Schema version identifier
     * </pre>
     *
     * <code>string schema_id = 1 [json_name = "schemaId"];</code>
     * @return The schemaId.
     */
    public java.lang.String getSchemaId() {
      java.lang.Object ref = schemaId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        schemaId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Schema version identifier
     * </pre>
     *
     * <code>string schema_id = 1 [json_name = "schemaId"];</code>
     * @return The bytes for schemaId.
     */
    public com.google.protobuf.ByteString
        getSchemaIdBytes() {
      java.lang.Object ref = schemaId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        schemaId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Schema version identifier
     * </pre>
     *
     * <code>string schema_id = 1 [json_name = "schemaId"];</code>
     * @param value The schemaId to set.
     * @return This builder for chaining.
     */
    public Builder setSchemaId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      schemaId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Schema version identifier
     * </pre>
     *
     * <code>string schema_id = 1 [json_name = "schemaId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearSchemaId() {
      schemaId_ = getDefaultInstance().getSchemaId();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Schema version identifier
     * </pre>
     *
     * <code>string schema_id = 1 [json_name = "schemaId"];</code>
     * @param value The bytes for schemaId to set.
     * @return This builder for chaining.
     */
    public Builder setSchemaIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      schemaId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.util.List<datapower.noesis.v1.FieldDescriptor> fields_ =
      java.util.Collections.emptyList();
    private void ensureFieldsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        fields_ = new java.util.ArrayList<datapower.noesis.v1.FieldDescriptor>(fields_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        datapower.noesis.v1.FieldDescriptor, datapower.noesis.v1.FieldDescriptor.Builder, datapower.noesis.v1.FieldDescriptorOrBuilder> fieldsBuilder_;

    /**
     * <pre>
     * Field definitions
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.FieldDescriptor fields = 2 [json_name = "fields"];</code>
     */
    public java.util.List<datapower.noesis.v1.FieldDescriptor> getFieldsList() {
      if (fieldsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(fields_);
      } else {
        return fieldsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Field definitions
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.FieldDescriptor fields = 2 [json_name = "fields"];</code>
     */
    public int getFieldsCount() {
      if (fieldsBuilder_ == null) {
        return fields_.size();
      } else {
        return fieldsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Field definitions
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.FieldDescriptor fields = 2 [json_name = "fields"];</code>
     */
    public datapower.noesis.v1.FieldDescriptor getFields(int index) {
      if (fieldsBuilder_ == null) {
        return fields_.get(index);
      } else {
        return fieldsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Field definitions
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.FieldDescriptor fields = 2 [json_name = "fields"];</code>
     */
    public Builder setFields(
        int index, datapower.noesis.v1.FieldDescriptor value) {
      if (fieldsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFieldsIsMutable();
        fields_.set(index, value);
        onChanged();
      } else {
        fieldsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Field definitions
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.FieldDescriptor fields = 2 [json_name = "fields"];</code>
     */
    public Builder setFields(
        int index, datapower.noesis.v1.FieldDescriptor.Builder builderForValue) {
      if (fieldsBuilder_ == null) {
        ensureFieldsIsMutable();
        fields_.set(index, builderForValue.build());
        onChanged();
      } else {
        fieldsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Field definitions
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.FieldDescriptor fields = 2 [json_name = "fields"];</code>
     */
    public Builder addFields(datapower.noesis.v1.FieldDescriptor value) {
      if (fieldsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFieldsIsMutable();
        fields_.add(value);
        onChanged();
      } else {
        fieldsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Field definitions
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.FieldDescriptor fields = 2 [json_name = "fields"];</code>
     */
    public Builder addFields(
        int index, datapower.noesis.v1.FieldDescriptor value) {
      if (fieldsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFieldsIsMutable();
        fields_.add(index, value);
        onChanged();
      } else {
        fieldsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Field definitions
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.FieldDescriptor fields = 2 [json_name = "fields"];</code>
     */
    public Builder addFields(
        datapower.noesis.v1.FieldDescriptor.Builder builderForValue) {
      if (fieldsBuilder_ == null) {
        ensureFieldsIsMutable();
        fields_.add(builderForValue.build());
        onChanged();
      } else {
        fieldsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Field definitions
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.FieldDescriptor fields = 2 [json_name = "fields"];</code>
     */
    public Builder addFields(
        int index, datapower.noesis.v1.FieldDescriptor.Builder builderForValue) {
      if (fieldsBuilder_ == null) {
        ensureFieldsIsMutable();
        fields_.add(index, builderForValue.build());
        onChanged();
      } else {
        fieldsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Field definitions
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.FieldDescriptor fields = 2 [json_name = "fields"];</code>
     */
    public Builder addAllFields(
        java.lang.Iterable<? extends datapower.noesis.v1.FieldDescriptor> values) {
      if (fieldsBuilder_ == null) {
        ensureFieldsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, fields_);
        onChanged();
      } else {
        fieldsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Field definitions
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.FieldDescriptor fields = 2 [json_name = "fields"];</code>
     */
    public Builder clearFields() {
      if (fieldsBuilder_ == null) {
        fields_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        fieldsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Field definitions
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.FieldDescriptor fields = 2 [json_name = "fields"];</code>
     */
    public Builder removeFields(int index) {
      if (fieldsBuilder_ == null) {
        ensureFieldsIsMutable();
        fields_.remove(index);
        onChanged();
      } else {
        fieldsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Field definitions
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.FieldDescriptor fields = 2 [json_name = "fields"];</code>
     */
    public datapower.noesis.v1.FieldDescriptor.Builder getFieldsBuilder(
        int index) {
      return getFieldsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Field definitions
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.FieldDescriptor fields = 2 [json_name = "fields"];</code>
     */
    public datapower.noesis.v1.FieldDescriptorOrBuilder getFieldsOrBuilder(
        int index) {
      if (fieldsBuilder_ == null) {
        return fields_.get(index);  } else {
        return fieldsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Field definitions
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.FieldDescriptor fields = 2 [json_name = "fields"];</code>
     */
    public java.util.List<? extends datapower.noesis.v1.FieldDescriptorOrBuilder> 
         getFieldsOrBuilderList() {
      if (fieldsBuilder_ != null) {
        return fieldsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(fields_);
      }
    }
    /**
     * <pre>
     * Field definitions
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.FieldDescriptor fields = 2 [json_name = "fields"];</code>
     */
    public datapower.noesis.v1.FieldDescriptor.Builder addFieldsBuilder() {
      return getFieldsFieldBuilder().addBuilder(
          datapower.noesis.v1.FieldDescriptor.getDefaultInstance());
    }
    /**
     * <pre>
     * Field definitions
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.FieldDescriptor fields = 2 [json_name = "fields"];</code>
     */
    public datapower.noesis.v1.FieldDescriptor.Builder addFieldsBuilder(
        int index) {
      return getFieldsFieldBuilder().addBuilder(
          index, datapower.noesis.v1.FieldDescriptor.getDefaultInstance());
    }
    /**
     * <pre>
     * Field definitions
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.FieldDescriptor fields = 2 [json_name = "fields"];</code>
     */
    public java.util.List<datapower.noesis.v1.FieldDescriptor.Builder> 
         getFieldsBuilderList() {
      return getFieldsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        datapower.noesis.v1.FieldDescriptor, datapower.noesis.v1.FieldDescriptor.Builder, datapower.noesis.v1.FieldDescriptorOrBuilder> 
        getFieldsFieldBuilder() {
      if (fieldsBuilder_ == null) {
        fieldsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            datapower.noesis.v1.FieldDescriptor, datapower.noesis.v1.FieldDescriptor.Builder, datapower.noesis.v1.FieldDescriptorOrBuilder>(
                fields_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        fields_ = null;
      }
      return fieldsBuilder_;
    }

    private java.util.List<datapower.noesis.v1.ConstraintDescriptor> constraints_ =
      java.util.Collections.emptyList();
    private void ensureConstraintsIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        constraints_ = new java.util.ArrayList<datapower.noesis.v1.ConstraintDescriptor>(constraints_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        datapower.noesis.v1.ConstraintDescriptor, datapower.noesis.v1.ConstraintDescriptor.Builder, datapower.noesis.v1.ConstraintDescriptorOrBuilder> constraintsBuilder_;

    /**
     * <pre>
     * Constraints
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.ConstraintDescriptor constraints = 3 [json_name = "constraints"];</code>
     */
    public java.util.List<datapower.noesis.v1.ConstraintDescriptor> getConstraintsList() {
      if (constraintsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(constraints_);
      } else {
        return constraintsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Constraints
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.ConstraintDescriptor constraints = 3 [json_name = "constraints"];</code>
     */
    public int getConstraintsCount() {
      if (constraintsBuilder_ == null) {
        return constraints_.size();
      } else {
        return constraintsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Constraints
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.ConstraintDescriptor constraints = 3 [json_name = "constraints"];</code>
     */
    public datapower.noesis.v1.ConstraintDescriptor getConstraints(int index) {
      if (constraintsBuilder_ == null) {
        return constraints_.get(index);
      } else {
        return constraintsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Constraints
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.ConstraintDescriptor constraints = 3 [json_name = "constraints"];</code>
     */
    public Builder setConstraints(
        int index, datapower.noesis.v1.ConstraintDescriptor value) {
      if (constraintsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureConstraintsIsMutable();
        constraints_.set(index, value);
        onChanged();
      } else {
        constraintsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Constraints
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.ConstraintDescriptor constraints = 3 [json_name = "constraints"];</code>
     */
    public Builder setConstraints(
        int index, datapower.noesis.v1.ConstraintDescriptor.Builder builderForValue) {
      if (constraintsBuilder_ == null) {
        ensureConstraintsIsMutable();
        constraints_.set(index, builderForValue.build());
        onChanged();
      } else {
        constraintsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Constraints
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.ConstraintDescriptor constraints = 3 [json_name = "constraints"];</code>
     */
    public Builder addConstraints(datapower.noesis.v1.ConstraintDescriptor value) {
      if (constraintsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureConstraintsIsMutable();
        constraints_.add(value);
        onChanged();
      } else {
        constraintsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Constraints
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.ConstraintDescriptor constraints = 3 [json_name = "constraints"];</code>
     */
    public Builder addConstraints(
        int index, datapower.noesis.v1.ConstraintDescriptor value) {
      if (constraintsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureConstraintsIsMutable();
        constraints_.add(index, value);
        onChanged();
      } else {
        constraintsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Constraints
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.ConstraintDescriptor constraints = 3 [json_name = "constraints"];</code>
     */
    public Builder addConstraints(
        datapower.noesis.v1.ConstraintDescriptor.Builder builderForValue) {
      if (constraintsBuilder_ == null) {
        ensureConstraintsIsMutable();
        constraints_.add(builderForValue.build());
        onChanged();
      } else {
        constraintsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Constraints
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.ConstraintDescriptor constraints = 3 [json_name = "constraints"];</code>
     */
    public Builder addConstraints(
        int index, datapower.noesis.v1.ConstraintDescriptor.Builder builderForValue) {
      if (constraintsBuilder_ == null) {
        ensureConstraintsIsMutable();
        constraints_.add(index, builderForValue.build());
        onChanged();
      } else {
        constraintsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Constraints
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.ConstraintDescriptor constraints = 3 [json_name = "constraints"];</code>
     */
    public Builder addAllConstraints(
        java.lang.Iterable<? extends datapower.noesis.v1.ConstraintDescriptor> values) {
      if (constraintsBuilder_ == null) {
        ensureConstraintsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, constraints_);
        onChanged();
      } else {
        constraintsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Constraints
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.ConstraintDescriptor constraints = 3 [json_name = "constraints"];</code>
     */
    public Builder clearConstraints() {
      if (constraintsBuilder_ == null) {
        constraints_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        constraintsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Constraints
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.ConstraintDescriptor constraints = 3 [json_name = "constraints"];</code>
     */
    public Builder removeConstraints(int index) {
      if (constraintsBuilder_ == null) {
        ensureConstraintsIsMutable();
        constraints_.remove(index);
        onChanged();
      } else {
        constraintsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Constraints
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.ConstraintDescriptor constraints = 3 [json_name = "constraints"];</code>
     */
    public datapower.noesis.v1.ConstraintDescriptor.Builder getConstraintsBuilder(
        int index) {
      return getConstraintsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Constraints
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.ConstraintDescriptor constraints = 3 [json_name = "constraints"];</code>
     */
    public datapower.noesis.v1.ConstraintDescriptorOrBuilder getConstraintsOrBuilder(
        int index) {
      if (constraintsBuilder_ == null) {
        return constraints_.get(index);  } else {
        return constraintsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Constraints
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.ConstraintDescriptor constraints = 3 [json_name = "constraints"];</code>
     */
    public java.util.List<? extends datapower.noesis.v1.ConstraintDescriptorOrBuilder> 
         getConstraintsOrBuilderList() {
      if (constraintsBuilder_ != null) {
        return constraintsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(constraints_);
      }
    }
    /**
     * <pre>
     * Constraints
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.ConstraintDescriptor constraints = 3 [json_name = "constraints"];</code>
     */
    public datapower.noesis.v1.ConstraintDescriptor.Builder addConstraintsBuilder() {
      return getConstraintsFieldBuilder().addBuilder(
          datapower.noesis.v1.ConstraintDescriptor.getDefaultInstance());
    }
    /**
     * <pre>
     * Constraints
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.ConstraintDescriptor constraints = 3 [json_name = "constraints"];</code>
     */
    public datapower.noesis.v1.ConstraintDescriptor.Builder addConstraintsBuilder(
        int index) {
      return getConstraintsFieldBuilder().addBuilder(
          index, datapower.noesis.v1.ConstraintDescriptor.getDefaultInstance());
    }
    /**
     * <pre>
     * Constraints
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.ConstraintDescriptor constraints = 3 [json_name = "constraints"];</code>
     */
    public java.util.List<datapower.noesis.v1.ConstraintDescriptor.Builder> 
         getConstraintsBuilderList() {
      return getConstraintsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        datapower.noesis.v1.ConstraintDescriptor, datapower.noesis.v1.ConstraintDescriptor.Builder, datapower.noesis.v1.ConstraintDescriptorOrBuilder> 
        getConstraintsFieldBuilder() {
      if (constraintsBuilder_ == null) {
        constraintsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            datapower.noesis.v1.ConstraintDescriptor, datapower.noesis.v1.ConstraintDescriptor.Builder, datapower.noesis.v1.ConstraintDescriptorOrBuilder>(
                constraints_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        constraints_ = null;
      }
      return constraintsBuilder_;
    }

    private java.util.List<datapower.noesis.v1.IndexDescriptor> indexes_ =
      java.util.Collections.emptyList();
    private void ensureIndexesIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        indexes_ = new java.util.ArrayList<datapower.noesis.v1.IndexDescriptor>(indexes_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        datapower.noesis.v1.IndexDescriptor, datapower.noesis.v1.IndexDescriptor.Builder, datapower.noesis.v1.IndexDescriptorOrBuilder> indexesBuilder_;

    /**
     * <pre>
     * Indexes
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.IndexDescriptor indexes = 4 [json_name = "indexes"];</code>
     */
    public java.util.List<datapower.noesis.v1.IndexDescriptor> getIndexesList() {
      if (indexesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(indexes_);
      } else {
        return indexesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Indexes
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.IndexDescriptor indexes = 4 [json_name = "indexes"];</code>
     */
    public int getIndexesCount() {
      if (indexesBuilder_ == null) {
        return indexes_.size();
      } else {
        return indexesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Indexes
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.IndexDescriptor indexes = 4 [json_name = "indexes"];</code>
     */
    public datapower.noesis.v1.IndexDescriptor getIndexes(int index) {
      if (indexesBuilder_ == null) {
        return indexes_.get(index);
      } else {
        return indexesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Indexes
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.IndexDescriptor indexes = 4 [json_name = "indexes"];</code>
     */
    public Builder setIndexes(
        int index, datapower.noesis.v1.IndexDescriptor value) {
      if (indexesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIndexesIsMutable();
        indexes_.set(index, value);
        onChanged();
      } else {
        indexesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Indexes
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.IndexDescriptor indexes = 4 [json_name = "indexes"];</code>
     */
    public Builder setIndexes(
        int index, datapower.noesis.v1.IndexDescriptor.Builder builderForValue) {
      if (indexesBuilder_ == null) {
        ensureIndexesIsMutable();
        indexes_.set(index, builderForValue.build());
        onChanged();
      } else {
        indexesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Indexes
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.IndexDescriptor indexes = 4 [json_name = "indexes"];</code>
     */
    public Builder addIndexes(datapower.noesis.v1.IndexDescriptor value) {
      if (indexesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIndexesIsMutable();
        indexes_.add(value);
        onChanged();
      } else {
        indexesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Indexes
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.IndexDescriptor indexes = 4 [json_name = "indexes"];</code>
     */
    public Builder addIndexes(
        int index, datapower.noesis.v1.IndexDescriptor value) {
      if (indexesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIndexesIsMutable();
        indexes_.add(index, value);
        onChanged();
      } else {
        indexesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Indexes
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.IndexDescriptor indexes = 4 [json_name = "indexes"];</code>
     */
    public Builder addIndexes(
        datapower.noesis.v1.IndexDescriptor.Builder builderForValue) {
      if (indexesBuilder_ == null) {
        ensureIndexesIsMutable();
        indexes_.add(builderForValue.build());
        onChanged();
      } else {
        indexesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Indexes
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.IndexDescriptor indexes = 4 [json_name = "indexes"];</code>
     */
    public Builder addIndexes(
        int index, datapower.noesis.v1.IndexDescriptor.Builder builderForValue) {
      if (indexesBuilder_ == null) {
        ensureIndexesIsMutable();
        indexes_.add(index, builderForValue.build());
        onChanged();
      } else {
        indexesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Indexes
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.IndexDescriptor indexes = 4 [json_name = "indexes"];</code>
     */
    public Builder addAllIndexes(
        java.lang.Iterable<? extends datapower.noesis.v1.IndexDescriptor> values) {
      if (indexesBuilder_ == null) {
        ensureIndexesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, indexes_);
        onChanged();
      } else {
        indexesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Indexes
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.IndexDescriptor indexes = 4 [json_name = "indexes"];</code>
     */
    public Builder clearIndexes() {
      if (indexesBuilder_ == null) {
        indexes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        indexesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Indexes
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.IndexDescriptor indexes = 4 [json_name = "indexes"];</code>
     */
    public Builder removeIndexes(int index) {
      if (indexesBuilder_ == null) {
        ensureIndexesIsMutable();
        indexes_.remove(index);
        onChanged();
      } else {
        indexesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Indexes
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.IndexDescriptor indexes = 4 [json_name = "indexes"];</code>
     */
    public datapower.noesis.v1.IndexDescriptor.Builder getIndexesBuilder(
        int index) {
      return getIndexesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Indexes
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.IndexDescriptor indexes = 4 [json_name = "indexes"];</code>
     */
    public datapower.noesis.v1.IndexDescriptorOrBuilder getIndexesOrBuilder(
        int index) {
      if (indexesBuilder_ == null) {
        return indexes_.get(index);  } else {
        return indexesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Indexes
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.IndexDescriptor indexes = 4 [json_name = "indexes"];</code>
     */
    public java.util.List<? extends datapower.noesis.v1.IndexDescriptorOrBuilder> 
         getIndexesOrBuilderList() {
      if (indexesBuilder_ != null) {
        return indexesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(indexes_);
      }
    }
    /**
     * <pre>
     * Indexes
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.IndexDescriptor indexes = 4 [json_name = "indexes"];</code>
     */
    public datapower.noesis.v1.IndexDescriptor.Builder addIndexesBuilder() {
      return getIndexesFieldBuilder().addBuilder(
          datapower.noesis.v1.IndexDescriptor.getDefaultInstance());
    }
    /**
     * <pre>
     * Indexes
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.IndexDescriptor indexes = 4 [json_name = "indexes"];</code>
     */
    public datapower.noesis.v1.IndexDescriptor.Builder addIndexesBuilder(
        int index) {
      return getIndexesFieldBuilder().addBuilder(
          index, datapower.noesis.v1.IndexDescriptor.getDefaultInstance());
    }
    /**
     * <pre>
     * Indexes
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.IndexDescriptor indexes = 4 [json_name = "indexes"];</code>
     */
    public java.util.List<datapower.noesis.v1.IndexDescriptor.Builder> 
         getIndexesBuilderList() {
      return getIndexesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        datapower.noesis.v1.IndexDescriptor, datapower.noesis.v1.IndexDescriptor.Builder, datapower.noesis.v1.IndexDescriptorOrBuilder> 
        getIndexesFieldBuilder() {
      if (indexesBuilder_ == null) {
        indexesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            datapower.noesis.v1.IndexDescriptor, datapower.noesis.v1.IndexDescriptor.Builder, datapower.noesis.v1.IndexDescriptorOrBuilder>(
                indexes_,
                ((bitField0_ & 0x00000008) != 0),
                getParentForChildren(),
                isClean());
        indexes_ = null;
      }
      return indexesBuilder_;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> attributes_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetAttributes() {
      if (attributes_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            AttributesDefaultEntryHolder.defaultEntry);
      }
      return attributes_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMutableAttributes() {
      if (attributes_ == null) {
        attributes_ = com.google.protobuf.MapField.newMapField(
            AttributesDefaultEntryHolder.defaultEntry);
      }
      if (!attributes_.isMutable()) {
        attributes_ = attributes_.copy();
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return attributes_;
    }
    public int getAttributesCount() {
      return internalGetAttributes().getMap().size();
    }
    /**
     * <pre>
     * Table-level attributes
     * </pre>
     *
     * <code>map&lt;string, string&gt; attributes = 5 [json_name = "attributes"];</code>
     */
    @java.lang.Override
    public boolean containsAttributes(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetAttributes().getMap().containsKey(key);
    }
    /**
     * Use {@link #getAttributesMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getAttributes() {
      return getAttributesMap();
    }
    /**
     * <pre>
     * Table-level attributes
     * </pre>
     *
     * <code>map&lt;string, string&gt; attributes = 5 [json_name = "attributes"];</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.String> getAttributesMap() {
      return internalGetAttributes().getMap();
    }
    /**
     * <pre>
     * Table-level attributes
     * </pre>
     *
     * <code>map&lt;string, string&gt; attributes = 5 [json_name = "attributes"];</code>
     */
    @java.lang.Override
    public /* nullable */
java.lang.String getAttributesOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetAttributes().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Table-level attributes
     * </pre>
     *
     * <code>map&lt;string, string&gt; attributes = 5 [json_name = "attributes"];</code>
     */
    @java.lang.Override
    public java.lang.String getAttributesOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetAttributes().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    public Builder clearAttributes() {
      bitField0_ = (bitField0_ & ~0x00000010);
      internalGetMutableAttributes().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * Table-level attributes
     * </pre>
     *
     * <code>map&lt;string, string&gt; attributes = 5 [json_name = "attributes"];</code>
     */
    public Builder removeAttributes(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableAttributes().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String>
        getMutableAttributes() {
      bitField0_ |= 0x00000010;
      return internalGetMutableAttributes().getMutableMap();
    }
    /**
     * <pre>
     * Table-level attributes
     * </pre>
     *
     * <code>map&lt;string, string&gt; attributes = 5 [json_name = "attributes"];</code>
     */
    public Builder putAttributes(
        java.lang.String key,
        java.lang.String value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) { throw new NullPointerException("map value"); }
      internalGetMutableAttributes().getMutableMap()
          .put(key, value);
      bitField0_ |= 0x00000010;
      return this;
    }
    /**
     * <pre>
     * Table-level attributes
     * </pre>
     *
     * <code>map&lt;string, string&gt; attributes = 5 [json_name = "attributes"];</code>
     */
    public Builder putAllAttributes(
        java.util.Map<java.lang.String, java.lang.String> values) {
      internalGetMutableAttributes().getMutableMap()
          .putAll(values);
      bitField0_ |= 0x00000010;
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:datapower.noesis.v1.StructuredSchemaDescriptor)
  }

  // @@protoc_insertion_point(class_scope:datapower.noesis.v1.StructuredSchemaDescriptor)
  private static final datapower.noesis.v1.StructuredSchemaDescriptor DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new datapower.noesis.v1.StructuredSchemaDescriptor();
  }

  public static datapower.noesis.v1.StructuredSchemaDescriptor getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<StructuredSchemaDescriptor>
      PARSER = new com.google.protobuf.AbstractParser<StructuredSchemaDescriptor>() {
    @java.lang.Override
    public StructuredSchemaDescriptor parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<StructuredSchemaDescriptor> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<StructuredSchemaDescriptor> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public datapower.noesis.v1.StructuredSchemaDescriptor getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

