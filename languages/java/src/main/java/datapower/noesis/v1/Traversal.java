// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datapower/noesis/v1/connector.proto

package datapower.noesis.v1;

/**
 * <pre>
 * Subgraph traversal policy (PLM/graph scenarios).
 * </pre>
 *
 * Protobuf type {@code datapower.noesis.v1.Traversal}
 */
public final class Traversal extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:datapower.noesis.v1.Traversal)
    TraversalOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Traversal.newBuilder() to construct.
  private Traversal(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Traversal() {
    allowedLinkEntities_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    direction_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Traversal();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_Traversal_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_Traversal_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            datapower.noesis.v1.Traversal.class, datapower.noesis.v1.Traversal.Builder.class);
  }

  public static final int ALLOWED_LINK_ENTITIES_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringArrayList allowedLinkEntities_ =
      com.google.protobuf.LazyStringArrayList.emptyList();
  /**
   * <pre>
   * LINK entity names allowed during traversal (e.g., ["BOMLink","PartDocLink"])
   * </pre>
   *
   * <code>repeated string allowed_link_entities = 1 [json_name = "allowedLinkEntities"];</code>
   * @return A list containing the allowedLinkEntities.
   */
  public com.google.protobuf.ProtocolStringList
      getAllowedLinkEntitiesList() {
    return allowedLinkEntities_;
  }
  /**
   * <pre>
   * LINK entity names allowed during traversal (e.g., ["BOMLink","PartDocLink"])
   * </pre>
   *
   * <code>repeated string allowed_link_entities = 1 [json_name = "allowedLinkEntities"];</code>
   * @return The count of allowedLinkEntities.
   */
  public int getAllowedLinkEntitiesCount() {
    return allowedLinkEntities_.size();
  }
  /**
   * <pre>
   * LINK entity names allowed during traversal (e.g., ["BOMLink","PartDocLink"])
   * </pre>
   *
   * <code>repeated string allowed_link_entities = 1 [json_name = "allowedLinkEntities"];</code>
   * @param index The index of the element to return.
   * @return The allowedLinkEntities at the given index.
   */
  public java.lang.String getAllowedLinkEntities(int index) {
    return allowedLinkEntities_.get(index);
  }
  /**
   * <pre>
   * LINK entity names allowed during traversal (e.g., ["BOMLink","PartDocLink"])
   * </pre>
   *
   * <code>repeated string allowed_link_entities = 1 [json_name = "allowedLinkEntities"];</code>
   * @param index The index of the value to return.
   * @return The bytes of the allowedLinkEntities at the given index.
   */
  public com.google.protobuf.ByteString
      getAllowedLinkEntitiesBytes(int index) {
    return allowedLinkEntities_.getByteString(index);
  }

  public static final int MAX_DEPTH_FIELD_NUMBER = 2;
  private int maxDepth_ = 0;
  /**
   * <pre>
   * -1 = unlimited; 0 = only the head; N = max depth
   * </pre>
   *
   * <code>int32 max_depth = 2 [json_name = "maxDepth"];</code>
   * @return The maxDepth.
   */
  @java.lang.Override
  public int getMaxDepth() {
    return maxDepth_;
  }

  public static final int DIRECTION_FIELD_NUMBER = 3;
  private int direction_ = 0;
  /**
   * <pre>
   * OUTBOUND/INBOUND/BOTH
   * </pre>
   *
   * <code>.datapower.noesis.v1.TraversalDirection direction = 3 [json_name = "direction"];</code>
   * @return The enum numeric value on the wire for direction.
   */
  @java.lang.Override public int getDirectionValue() {
    return direction_;
  }
  /**
   * <pre>
   * OUTBOUND/INBOUND/BOTH
   * </pre>
   *
   * <code>.datapower.noesis.v1.TraversalDirection direction = 3 [json_name = "direction"];</code>
   * @return The direction.
   */
  @java.lang.Override public datapower.noesis.v1.TraversalDirection getDirection() {
    datapower.noesis.v1.TraversalDirection result = datapower.noesis.v1.TraversalDirection.forNumber(direction_);
    return result == null ? datapower.noesis.v1.TraversalDirection.UNRECOGNIZED : result;
  }

  public static final int ALLOW_REVISIT_FIELD_NUMBER = 4;
  private boolean allowRevisit_ = false;
  /**
   * <pre>
   * If false, connector must maintain a visited set
   * </pre>
   *
   * <code>bool allow_revisit = 4 [json_name = "allowRevisit"];</code>
   * @return The allowRevisit.
   */
  @java.lang.Override
  public boolean getAllowRevisit() {
    return allowRevisit_;
  }

  public static final int STRICT_REFERENTIAL_INTEGRITY_FIELD_NUMBER = 5;
  private boolean strictReferentialIntegrity_ = false;
  /**
   * <pre>
   * If true, missing references should be surfaced via LOG and/or error policy
   * </pre>
   *
   * <code>bool strict_referential_integrity = 5 [json_name = "strictReferentialIntegrity"];</code>
   * @return The strictReferentialIntegrity.
   */
  @java.lang.Override
  public boolean getStrictReferentialIntegrity() {
    return strictReferentialIntegrity_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < allowedLinkEntities_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, allowedLinkEntities_.getRaw(i));
    }
    if (maxDepth_ != 0) {
      output.writeInt32(2, maxDepth_);
    }
    if (direction_ != datapower.noesis.v1.TraversalDirection.TRAV_DIR_UNSPECIFIED.getNumber()) {
      output.writeEnum(3, direction_);
    }
    if (allowRevisit_ != false) {
      output.writeBool(4, allowRevisit_);
    }
    if (strictReferentialIntegrity_ != false) {
      output.writeBool(5, strictReferentialIntegrity_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    {
      int dataSize = 0;
      for (int i = 0; i < allowedLinkEntities_.size(); i++) {
        dataSize += computeStringSizeNoTag(allowedLinkEntities_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getAllowedLinkEntitiesList().size();
    }
    if (maxDepth_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, maxDepth_);
    }
    if (direction_ != datapower.noesis.v1.TraversalDirection.TRAV_DIR_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(3, direction_);
    }
    if (allowRevisit_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, allowRevisit_);
    }
    if (strictReferentialIntegrity_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(5, strictReferentialIntegrity_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof datapower.noesis.v1.Traversal)) {
      return super.equals(obj);
    }
    datapower.noesis.v1.Traversal other = (datapower.noesis.v1.Traversal) obj;

    if (!getAllowedLinkEntitiesList()
        .equals(other.getAllowedLinkEntitiesList())) return false;
    if (getMaxDepth()
        != other.getMaxDepth()) return false;
    if (direction_ != other.direction_) return false;
    if (getAllowRevisit()
        != other.getAllowRevisit()) return false;
    if (getStrictReferentialIntegrity()
        != other.getStrictReferentialIntegrity()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getAllowedLinkEntitiesCount() > 0) {
      hash = (37 * hash) + ALLOWED_LINK_ENTITIES_FIELD_NUMBER;
      hash = (53 * hash) + getAllowedLinkEntitiesList().hashCode();
    }
    hash = (37 * hash) + MAX_DEPTH_FIELD_NUMBER;
    hash = (53 * hash) + getMaxDepth();
    hash = (37 * hash) + DIRECTION_FIELD_NUMBER;
    hash = (53 * hash) + direction_;
    hash = (37 * hash) + ALLOW_REVISIT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getAllowRevisit());
    hash = (37 * hash) + STRICT_REFERENTIAL_INTEGRITY_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getStrictReferentialIntegrity());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static datapower.noesis.v1.Traversal parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.Traversal parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.Traversal parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.Traversal parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.Traversal parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.Traversal parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.Traversal parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.Traversal parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static datapower.noesis.v1.Traversal parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static datapower.noesis.v1.Traversal parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static datapower.noesis.v1.Traversal parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.Traversal parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(datapower.noesis.v1.Traversal prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Subgraph traversal policy (PLM/graph scenarios).
   * </pre>
   *
   * Protobuf type {@code datapower.noesis.v1.Traversal}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:datapower.noesis.v1.Traversal)
      datapower.noesis.v1.TraversalOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_Traversal_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_Traversal_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              datapower.noesis.v1.Traversal.class, datapower.noesis.v1.Traversal.Builder.class);
    }

    // Construct using datapower.noesis.v1.Traversal.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      allowedLinkEntities_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      maxDepth_ = 0;
      direction_ = 0;
      allowRevisit_ = false;
      strictReferentialIntegrity_ = false;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_Traversal_descriptor;
    }

    @java.lang.Override
    public datapower.noesis.v1.Traversal getDefaultInstanceForType() {
      return datapower.noesis.v1.Traversal.getDefaultInstance();
    }

    @java.lang.Override
    public datapower.noesis.v1.Traversal build() {
      datapower.noesis.v1.Traversal result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public datapower.noesis.v1.Traversal buildPartial() {
      datapower.noesis.v1.Traversal result = new datapower.noesis.v1.Traversal(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(datapower.noesis.v1.Traversal result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        allowedLinkEntities_.makeImmutable();
        result.allowedLinkEntities_ = allowedLinkEntities_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.maxDepth_ = maxDepth_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.direction_ = direction_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.allowRevisit_ = allowRevisit_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.strictReferentialIntegrity_ = strictReferentialIntegrity_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof datapower.noesis.v1.Traversal) {
        return mergeFrom((datapower.noesis.v1.Traversal)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(datapower.noesis.v1.Traversal other) {
      if (other == datapower.noesis.v1.Traversal.getDefaultInstance()) return this;
      if (!other.allowedLinkEntities_.isEmpty()) {
        if (allowedLinkEntities_.isEmpty()) {
          allowedLinkEntities_ = other.allowedLinkEntities_;
          bitField0_ |= 0x00000001;
        } else {
          ensureAllowedLinkEntitiesIsMutable();
          allowedLinkEntities_.addAll(other.allowedLinkEntities_);
        }
        onChanged();
      }
      if (other.getMaxDepth() != 0) {
        setMaxDepth(other.getMaxDepth());
      }
      if (other.direction_ != 0) {
        setDirectionValue(other.getDirectionValue());
      }
      if (other.getAllowRevisit() != false) {
        setAllowRevisit(other.getAllowRevisit());
      }
      if (other.getStrictReferentialIntegrity() != false) {
        setStrictReferentialIntegrity(other.getStrictReferentialIntegrity());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureAllowedLinkEntitiesIsMutable();
              allowedLinkEntities_.add(s);
              break;
            } // case 10
            case 16: {
              maxDepth_ = input.readInt32();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 24: {
              direction_ = input.readEnum();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 32: {
              allowRevisit_ = input.readBool();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 40: {
              strictReferentialIntegrity_ = input.readBool();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.LazyStringArrayList allowedLinkEntities_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    private void ensureAllowedLinkEntitiesIsMutable() {
      if (!allowedLinkEntities_.isModifiable()) {
        allowedLinkEntities_ = new com.google.protobuf.LazyStringArrayList(allowedLinkEntities_);
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <pre>
     * LINK entity names allowed during traversal (e.g., ["BOMLink","PartDocLink"])
     * </pre>
     *
     * <code>repeated string allowed_link_entities = 1 [json_name = "allowedLinkEntities"];</code>
     * @return A list containing the allowedLinkEntities.
     */
    public com.google.protobuf.ProtocolStringList
        getAllowedLinkEntitiesList() {
      allowedLinkEntities_.makeImmutable();
      return allowedLinkEntities_;
    }
    /**
     * <pre>
     * LINK entity names allowed during traversal (e.g., ["BOMLink","PartDocLink"])
     * </pre>
     *
     * <code>repeated string allowed_link_entities = 1 [json_name = "allowedLinkEntities"];</code>
     * @return The count of allowedLinkEntities.
     */
    public int getAllowedLinkEntitiesCount() {
      return allowedLinkEntities_.size();
    }
    /**
     * <pre>
     * LINK entity names allowed during traversal (e.g., ["BOMLink","PartDocLink"])
     * </pre>
     *
     * <code>repeated string allowed_link_entities = 1 [json_name = "allowedLinkEntities"];</code>
     * @param index The index of the element to return.
     * @return The allowedLinkEntities at the given index.
     */
    public java.lang.String getAllowedLinkEntities(int index) {
      return allowedLinkEntities_.get(index);
    }
    /**
     * <pre>
     * LINK entity names allowed during traversal (e.g., ["BOMLink","PartDocLink"])
     * </pre>
     *
     * <code>repeated string allowed_link_entities = 1 [json_name = "allowedLinkEntities"];</code>
     * @param index The index of the value to return.
     * @return The bytes of the allowedLinkEntities at the given index.
     */
    public com.google.protobuf.ByteString
        getAllowedLinkEntitiesBytes(int index) {
      return allowedLinkEntities_.getByteString(index);
    }
    /**
     * <pre>
     * LINK entity names allowed during traversal (e.g., ["BOMLink","PartDocLink"])
     * </pre>
     *
     * <code>repeated string allowed_link_entities = 1 [json_name = "allowedLinkEntities"];</code>
     * @param index The index to set the value at.
     * @param value The allowedLinkEntities to set.
     * @return This builder for chaining.
     */
    public Builder setAllowedLinkEntities(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureAllowedLinkEntitiesIsMutable();
      allowedLinkEntities_.set(index, value);
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * LINK entity names allowed during traversal (e.g., ["BOMLink","PartDocLink"])
     * </pre>
     *
     * <code>repeated string allowed_link_entities = 1 [json_name = "allowedLinkEntities"];</code>
     * @param value The allowedLinkEntities to add.
     * @return This builder for chaining.
     */
    public Builder addAllowedLinkEntities(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureAllowedLinkEntitiesIsMutable();
      allowedLinkEntities_.add(value);
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * LINK entity names allowed during traversal (e.g., ["BOMLink","PartDocLink"])
     * </pre>
     *
     * <code>repeated string allowed_link_entities = 1 [json_name = "allowedLinkEntities"];</code>
     * @param values The allowedLinkEntities to add.
     * @return This builder for chaining.
     */
    public Builder addAllAllowedLinkEntities(
        java.lang.Iterable<java.lang.String> values) {
      ensureAllowedLinkEntitiesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, allowedLinkEntities_);
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * LINK entity names allowed during traversal (e.g., ["BOMLink","PartDocLink"])
     * </pre>
     *
     * <code>repeated string allowed_link_entities = 1 [json_name = "allowedLinkEntities"];</code>
     * @return This builder for chaining.
     */
    public Builder clearAllowedLinkEntities() {
      allowedLinkEntities_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
      bitField0_ = (bitField0_ & ~0x00000001);;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * LINK entity names allowed during traversal (e.g., ["BOMLink","PartDocLink"])
     * </pre>
     *
     * <code>repeated string allowed_link_entities = 1 [json_name = "allowedLinkEntities"];</code>
     * @param value The bytes of the allowedLinkEntities to add.
     * @return This builder for chaining.
     */
    public Builder addAllowedLinkEntitiesBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureAllowedLinkEntitiesIsMutable();
      allowedLinkEntities_.add(value);
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private int maxDepth_ ;
    /**
     * <pre>
     * -1 = unlimited; 0 = only the head; N = max depth
     * </pre>
     *
     * <code>int32 max_depth = 2 [json_name = "maxDepth"];</code>
     * @return The maxDepth.
     */
    @java.lang.Override
    public int getMaxDepth() {
      return maxDepth_;
    }
    /**
     * <pre>
     * -1 = unlimited; 0 = only the head; N = max depth
     * </pre>
     *
     * <code>int32 max_depth = 2 [json_name = "maxDepth"];</code>
     * @param value The maxDepth to set.
     * @return This builder for chaining.
     */
    public Builder setMaxDepth(int value) {

      maxDepth_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * -1 = unlimited; 0 = only the head; N = max depth
     * </pre>
     *
     * <code>int32 max_depth = 2 [json_name = "maxDepth"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxDepth() {
      bitField0_ = (bitField0_ & ~0x00000002);
      maxDepth_ = 0;
      onChanged();
      return this;
    }

    private int direction_ = 0;
    /**
     * <pre>
     * OUTBOUND/INBOUND/BOTH
     * </pre>
     *
     * <code>.datapower.noesis.v1.TraversalDirection direction = 3 [json_name = "direction"];</code>
     * @return The enum numeric value on the wire for direction.
     */
    @java.lang.Override public int getDirectionValue() {
      return direction_;
    }
    /**
     * <pre>
     * OUTBOUND/INBOUND/BOTH
     * </pre>
     *
     * <code>.datapower.noesis.v1.TraversalDirection direction = 3 [json_name = "direction"];</code>
     * @param value The enum numeric value on the wire for direction to set.
     * @return This builder for chaining.
     */
    public Builder setDirectionValue(int value) {
      direction_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * OUTBOUND/INBOUND/BOTH
     * </pre>
     *
     * <code>.datapower.noesis.v1.TraversalDirection direction = 3 [json_name = "direction"];</code>
     * @return The direction.
     */
    @java.lang.Override
    public datapower.noesis.v1.TraversalDirection getDirection() {
      datapower.noesis.v1.TraversalDirection result = datapower.noesis.v1.TraversalDirection.forNumber(direction_);
      return result == null ? datapower.noesis.v1.TraversalDirection.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * OUTBOUND/INBOUND/BOTH
     * </pre>
     *
     * <code>.datapower.noesis.v1.TraversalDirection direction = 3 [json_name = "direction"];</code>
     * @param value The direction to set.
     * @return This builder for chaining.
     */
    public Builder setDirection(datapower.noesis.v1.TraversalDirection value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      direction_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * OUTBOUND/INBOUND/BOTH
     * </pre>
     *
     * <code>.datapower.noesis.v1.TraversalDirection direction = 3 [json_name = "direction"];</code>
     * @return This builder for chaining.
     */
    public Builder clearDirection() {
      bitField0_ = (bitField0_ & ~0x00000004);
      direction_ = 0;
      onChanged();
      return this;
    }

    private boolean allowRevisit_ ;
    /**
     * <pre>
     * If false, connector must maintain a visited set
     * </pre>
     *
     * <code>bool allow_revisit = 4 [json_name = "allowRevisit"];</code>
     * @return The allowRevisit.
     */
    @java.lang.Override
    public boolean getAllowRevisit() {
      return allowRevisit_;
    }
    /**
     * <pre>
     * If false, connector must maintain a visited set
     * </pre>
     *
     * <code>bool allow_revisit = 4 [json_name = "allowRevisit"];</code>
     * @param value The allowRevisit to set.
     * @return This builder for chaining.
     */
    public Builder setAllowRevisit(boolean value) {

      allowRevisit_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If false, connector must maintain a visited set
     * </pre>
     *
     * <code>bool allow_revisit = 4 [json_name = "allowRevisit"];</code>
     * @return This builder for chaining.
     */
    public Builder clearAllowRevisit() {
      bitField0_ = (bitField0_ & ~0x00000008);
      allowRevisit_ = false;
      onChanged();
      return this;
    }

    private boolean strictReferentialIntegrity_ ;
    /**
     * <pre>
     * If true, missing references should be surfaced via LOG and/or error policy
     * </pre>
     *
     * <code>bool strict_referential_integrity = 5 [json_name = "strictReferentialIntegrity"];</code>
     * @return The strictReferentialIntegrity.
     */
    @java.lang.Override
    public boolean getStrictReferentialIntegrity() {
      return strictReferentialIntegrity_;
    }
    /**
     * <pre>
     * If true, missing references should be surfaced via LOG and/or error policy
     * </pre>
     *
     * <code>bool strict_referential_integrity = 5 [json_name = "strictReferentialIntegrity"];</code>
     * @param value The strictReferentialIntegrity to set.
     * @return This builder for chaining.
     */
    public Builder setStrictReferentialIntegrity(boolean value) {

      strictReferentialIntegrity_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If true, missing references should be surfaced via LOG and/or error policy
     * </pre>
     *
     * <code>bool strict_referential_integrity = 5 [json_name = "strictReferentialIntegrity"];</code>
     * @return This builder for chaining.
     */
    public Builder clearStrictReferentialIntegrity() {
      bitField0_ = (bitField0_ & ~0x00000010);
      strictReferentialIntegrity_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:datapower.noesis.v1.Traversal)
  }

  // @@protoc_insertion_point(class_scope:datapower.noesis.v1.Traversal)
  private static final datapower.noesis.v1.Traversal DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new datapower.noesis.v1.Traversal();
  }

  public static datapower.noesis.v1.Traversal getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Traversal>
      PARSER = new com.google.protobuf.AbstractParser<Traversal>() {
    @java.lang.Override
    public Traversal parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Traversal> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Traversal> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public datapower.noesis.v1.Traversal getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

