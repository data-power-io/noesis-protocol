// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datapower/noesis/v1/pipeline.proto

package datapower.noesis.v1;

/**
 * <pre>
 * Query defines the SQL transformation logic
 * </pre>
 *
 * Protobuf type {@code datapower.noesis.v1.Query}
 */
public final class Query extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:datapower.noesis.v1.Query)
    QueryOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Query.newBuilder() to construct.
  private Query(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Query() {
    target_ = "";
    sql_ = "";
    queryType_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Query();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return datapower.noesis.v1.Pipeline.internal_static_datapower_noesis_v1_Query_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 4:
        return internalGetHints();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return datapower.noesis.v1.Pipeline.internal_static_datapower_noesis_v1_Query_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            datapower.noesis.v1.Query.class, datapower.noesis.v1.Query.Builder.class);
  }

  public static final int TARGET_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object target_ = "";
  /**
   * <pre>
   * Reference to the sink alias where results are written
   * </pre>
   *
   * <code>string target = 1 [json_name = "target"];</code>
   * @return The target.
   */
  @java.lang.Override
  public java.lang.String getTarget() {
    java.lang.Object ref = target_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      target_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Reference to the sink alias where results are written
   * </pre>
   *
   * <code>string target = 1 [json_name = "target"];</code>
   * @return The bytes for target.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTargetBytes() {
    java.lang.Object ref = target_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      target_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SQL_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object sql_ = "";
  /**
   * <pre>
   * SQL query that transforms source data into target schema
   * This SQL is analyzed to determine execution strategy
   * </pre>
   *
   * <code>string sql = 2 [json_name = "sql"];</code>
   * @return The sql.
   */
  @java.lang.Override
  public java.lang.String getSql() {
    java.lang.Object ref = sql_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      sql_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * SQL query that transforms source data into target schema
   * This SQL is analyzed to determine execution strategy
   * </pre>
   *
   * <code>string sql = 2 [json_name = "sql"];</code>
   * @return The bytes for sql.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSqlBytes() {
    java.lang.Object ref = sql_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      sql_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int QUERY_TYPE_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private volatile java.lang.Object queryType_ = "";
  /**
   * <pre>
   * Optional: Query type hint (join, aggregation, window, etc.)
   * </pre>
   *
   * <code>string query_type = 3 [json_name = "queryType"];</code>
   * @return The queryType.
   */
  @java.lang.Override
  public java.lang.String getQueryType() {
    java.lang.Object ref = queryType_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      queryType_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Optional: Query type hint (join, aggregation, window, etc.)
   * </pre>
   *
   * <code>string query_type = 3 [json_name = "queryType"];</code>
   * @return The bytes for queryType.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getQueryTypeBytes() {
    java.lang.Object ref = queryType_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      queryType_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int HINTS_FIELD_NUMBER = 4;
  private static final class HintsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.String>newDefaultInstance(
                datapower.noesis.v1.Pipeline.internal_static_datapower_noesis_v1_Query_HintsEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.String> hints_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.String>
  internalGetHints() {
    if (hints_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          HintsDefaultEntryHolder.defaultEntry);
    }
    return hints_;
  }
  public int getHintsCount() {
    return internalGetHints().getMap().size();
  }
  /**
   * <pre>
   * Optional: Optimization hints
   * </pre>
   *
   * <code>map&lt;string, string&gt; hints = 4 [json_name = "hints"];</code>
   */
  @java.lang.Override
  public boolean containsHints(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetHints().getMap().containsKey(key);
  }
  /**
   * Use {@link #getHintsMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getHints() {
    return getHintsMap();
  }
  /**
   * <pre>
   * Optional: Optimization hints
   * </pre>
   *
   * <code>map&lt;string, string&gt; hints = 4 [json_name = "hints"];</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.String, java.lang.String> getHintsMap() {
    return internalGetHints().getMap();
  }
  /**
   * <pre>
   * Optional: Optimization hints
   * </pre>
   *
   * <code>map&lt;string, string&gt; hints = 4 [json_name = "hints"];</code>
   */
  @java.lang.Override
  public /* nullable */
java.lang.String getHintsOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetHints().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Optional: Optimization hints
   * </pre>
   *
   * <code>map&lt;string, string&gt; hints = 4 [json_name = "hints"];</code>
   */
  @java.lang.Override
  public java.lang.String getHintsOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetHints().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(target_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, target_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sql_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, sql_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(queryType_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, queryType_);
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetHints(),
        HintsDefaultEntryHolder.defaultEntry,
        4);
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(target_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, target_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sql_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, sql_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(queryType_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, queryType_);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
         : internalGetHints().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
      hints__ = HintsDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, hints__);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof datapower.noesis.v1.Query)) {
      return super.equals(obj);
    }
    datapower.noesis.v1.Query other = (datapower.noesis.v1.Query) obj;

    if (!getTarget()
        .equals(other.getTarget())) return false;
    if (!getSql()
        .equals(other.getSql())) return false;
    if (!getQueryType()
        .equals(other.getQueryType())) return false;
    if (!internalGetHints().equals(
        other.internalGetHints())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TARGET_FIELD_NUMBER;
    hash = (53 * hash) + getTarget().hashCode();
    hash = (37 * hash) + SQL_FIELD_NUMBER;
    hash = (53 * hash) + getSql().hashCode();
    hash = (37 * hash) + QUERY_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + getQueryType().hashCode();
    if (!internalGetHints().getMap().isEmpty()) {
      hash = (37 * hash) + HINTS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetHints().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static datapower.noesis.v1.Query parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.Query parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.Query parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.Query parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.Query parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.Query parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.Query parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.Query parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static datapower.noesis.v1.Query parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static datapower.noesis.v1.Query parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static datapower.noesis.v1.Query parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.Query parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(datapower.noesis.v1.Query prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Query defines the SQL transformation logic
   * </pre>
   *
   * Protobuf type {@code datapower.noesis.v1.Query}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:datapower.noesis.v1.Query)
      datapower.noesis.v1.QueryOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return datapower.noesis.v1.Pipeline.internal_static_datapower_noesis_v1_Query_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 4:
          return internalGetHints();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 4:
          return internalGetMutableHints();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return datapower.noesis.v1.Pipeline.internal_static_datapower_noesis_v1_Query_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              datapower.noesis.v1.Query.class, datapower.noesis.v1.Query.Builder.class);
    }

    // Construct using datapower.noesis.v1.Query.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      target_ = "";
      sql_ = "";
      queryType_ = "";
      internalGetMutableHints().clear();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return datapower.noesis.v1.Pipeline.internal_static_datapower_noesis_v1_Query_descriptor;
    }

    @java.lang.Override
    public datapower.noesis.v1.Query getDefaultInstanceForType() {
      return datapower.noesis.v1.Query.getDefaultInstance();
    }

    @java.lang.Override
    public datapower.noesis.v1.Query build() {
      datapower.noesis.v1.Query result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public datapower.noesis.v1.Query buildPartial() {
      datapower.noesis.v1.Query result = new datapower.noesis.v1.Query(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(datapower.noesis.v1.Query result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.target_ = target_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.sql_ = sql_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.queryType_ = queryType_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.hints_ = internalGetHints();
        result.hints_.makeImmutable();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof datapower.noesis.v1.Query) {
        return mergeFrom((datapower.noesis.v1.Query)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(datapower.noesis.v1.Query other) {
      if (other == datapower.noesis.v1.Query.getDefaultInstance()) return this;
      if (!other.getTarget().isEmpty()) {
        target_ = other.target_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getSql().isEmpty()) {
        sql_ = other.sql_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (!other.getQueryType().isEmpty()) {
        queryType_ = other.queryType_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      internalGetMutableHints().mergeFrom(
          other.internalGetHints());
      bitField0_ |= 0x00000008;
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              target_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              sql_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              queryType_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              hints__ = input.readMessage(
                  HintsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableHints().getMutableMap().put(
                  hints__.getKey(), hints__.getValue());
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object target_ = "";
    /**
     * <pre>
     * Reference to the sink alias where results are written
     * </pre>
     *
     * <code>string target = 1 [json_name = "target"];</code>
     * @return The target.
     */
    public java.lang.String getTarget() {
      java.lang.Object ref = target_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        target_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Reference to the sink alias where results are written
     * </pre>
     *
     * <code>string target = 1 [json_name = "target"];</code>
     * @return The bytes for target.
     */
    public com.google.protobuf.ByteString
        getTargetBytes() {
      java.lang.Object ref = target_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        target_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Reference to the sink alias where results are written
     * </pre>
     *
     * <code>string target = 1 [json_name = "target"];</code>
     * @param value The target to set.
     * @return This builder for chaining.
     */
    public Builder setTarget(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      target_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Reference to the sink alias where results are written
     * </pre>
     *
     * <code>string target = 1 [json_name = "target"];</code>
     * @return This builder for chaining.
     */
    public Builder clearTarget() {
      target_ = getDefaultInstance().getTarget();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Reference to the sink alias where results are written
     * </pre>
     *
     * <code>string target = 1 [json_name = "target"];</code>
     * @param value The bytes for target to set.
     * @return This builder for chaining.
     */
    public Builder setTargetBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      target_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object sql_ = "";
    /**
     * <pre>
     * SQL query that transforms source data into target schema
     * This SQL is analyzed to determine execution strategy
     * </pre>
     *
     * <code>string sql = 2 [json_name = "sql"];</code>
     * @return The sql.
     */
    public java.lang.String getSql() {
      java.lang.Object ref = sql_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sql_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * SQL query that transforms source data into target schema
     * This SQL is analyzed to determine execution strategy
     * </pre>
     *
     * <code>string sql = 2 [json_name = "sql"];</code>
     * @return The bytes for sql.
     */
    public com.google.protobuf.ByteString
        getSqlBytes() {
      java.lang.Object ref = sql_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sql_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * SQL query that transforms source data into target schema
     * This SQL is analyzed to determine execution strategy
     * </pre>
     *
     * <code>string sql = 2 [json_name = "sql"];</code>
     * @param value The sql to set.
     * @return This builder for chaining.
     */
    public Builder setSql(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      sql_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * SQL query that transforms source data into target schema
     * This SQL is analyzed to determine execution strategy
     * </pre>
     *
     * <code>string sql = 2 [json_name = "sql"];</code>
     * @return This builder for chaining.
     */
    public Builder clearSql() {
      sql_ = getDefaultInstance().getSql();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * SQL query that transforms source data into target schema
     * This SQL is analyzed to determine execution strategy
     * </pre>
     *
     * <code>string sql = 2 [json_name = "sql"];</code>
     * @param value The bytes for sql to set.
     * @return This builder for chaining.
     */
    public Builder setSqlBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      sql_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private java.lang.Object queryType_ = "";
    /**
     * <pre>
     * Optional: Query type hint (join, aggregation, window, etc.)
     * </pre>
     *
     * <code>string query_type = 3 [json_name = "queryType"];</code>
     * @return The queryType.
     */
    public java.lang.String getQueryType() {
      java.lang.Object ref = queryType_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        queryType_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Optional: Query type hint (join, aggregation, window, etc.)
     * </pre>
     *
     * <code>string query_type = 3 [json_name = "queryType"];</code>
     * @return The bytes for queryType.
     */
    public com.google.protobuf.ByteString
        getQueryTypeBytes() {
      java.lang.Object ref = queryType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        queryType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Optional: Query type hint (join, aggregation, window, etc.)
     * </pre>
     *
     * <code>string query_type = 3 [json_name = "queryType"];</code>
     * @param value The queryType to set.
     * @return This builder for chaining.
     */
    public Builder setQueryType(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      queryType_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: Query type hint (join, aggregation, window, etc.)
     * </pre>
     *
     * <code>string query_type = 3 [json_name = "queryType"];</code>
     * @return This builder for chaining.
     */
    public Builder clearQueryType() {
      queryType_ = getDefaultInstance().getQueryType();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: Query type hint (join, aggregation, window, etc.)
     * </pre>
     *
     * <code>string query_type = 3 [json_name = "queryType"];</code>
     * @param value The bytes for queryType to set.
     * @return This builder for chaining.
     */
    public Builder setQueryTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      queryType_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> hints_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetHints() {
      if (hints_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            HintsDefaultEntryHolder.defaultEntry);
      }
      return hints_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMutableHints() {
      if (hints_ == null) {
        hints_ = com.google.protobuf.MapField.newMapField(
            HintsDefaultEntryHolder.defaultEntry);
      }
      if (!hints_.isMutable()) {
        hints_ = hints_.copy();
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return hints_;
    }
    public int getHintsCount() {
      return internalGetHints().getMap().size();
    }
    /**
     * <pre>
     * Optional: Optimization hints
     * </pre>
     *
     * <code>map&lt;string, string&gt; hints = 4 [json_name = "hints"];</code>
     */
    @java.lang.Override
    public boolean containsHints(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetHints().getMap().containsKey(key);
    }
    /**
     * Use {@link #getHintsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getHints() {
      return getHintsMap();
    }
    /**
     * <pre>
     * Optional: Optimization hints
     * </pre>
     *
     * <code>map&lt;string, string&gt; hints = 4 [json_name = "hints"];</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.String> getHintsMap() {
      return internalGetHints().getMap();
    }
    /**
     * <pre>
     * Optional: Optimization hints
     * </pre>
     *
     * <code>map&lt;string, string&gt; hints = 4 [json_name = "hints"];</code>
     */
    @java.lang.Override
    public /* nullable */
java.lang.String getHintsOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetHints().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Optional: Optimization hints
     * </pre>
     *
     * <code>map&lt;string, string&gt; hints = 4 [json_name = "hints"];</code>
     */
    @java.lang.Override
    public java.lang.String getHintsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetHints().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    public Builder clearHints() {
      bitField0_ = (bitField0_ & ~0x00000008);
      internalGetMutableHints().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * Optional: Optimization hints
     * </pre>
     *
     * <code>map&lt;string, string&gt; hints = 4 [json_name = "hints"];</code>
     */
    public Builder removeHints(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableHints().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String>
        getMutableHints() {
      bitField0_ |= 0x00000008;
      return internalGetMutableHints().getMutableMap();
    }
    /**
     * <pre>
     * Optional: Optimization hints
     * </pre>
     *
     * <code>map&lt;string, string&gt; hints = 4 [json_name = "hints"];</code>
     */
    public Builder putHints(
        java.lang.String key,
        java.lang.String value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) { throw new NullPointerException("map value"); }
      internalGetMutableHints().getMutableMap()
          .put(key, value);
      bitField0_ |= 0x00000008;
      return this;
    }
    /**
     * <pre>
     * Optional: Optimization hints
     * </pre>
     *
     * <code>map&lt;string, string&gt; hints = 4 [json_name = "hints"];</code>
     */
    public Builder putAllHints(
        java.util.Map<java.lang.String, java.lang.String> values) {
      internalGetMutableHints().getMutableMap()
          .putAll(values);
      bitField0_ |= 0x00000008;
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:datapower.noesis.v1.Query)
  }

  // @@protoc_insertion_point(class_scope:datapower.noesis.v1.Query)
  private static final datapower.noesis.v1.Query DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new datapower.noesis.v1.Query();
  }

  public static datapower.noesis.v1.Query getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Query>
      PARSER = new com.google.protobuf.AbstractParser<Query>() {
    @java.lang.Override
    public Query parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Query> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Query> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public datapower.noesis.v1.Query getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

