// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datapower/noesis/v1/connector.proto

package datapower.noesis.v1;

public interface CheckRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:datapower.noesis.v1.CheckRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string tenant_id = 1 [json_name = "tenantId"];</code>
   * @return The tenantId.
   */
  java.lang.String getTenantId();
  /**
   * <code>string tenant_id = 1 [json_name = "tenantId"];</code>
   * @return The bytes for tenantId.
   */
  com.google.protobuf.ByteString
      getTenantIdBytes();

  /**
   * <pre>
   * Source credentials, endpoints, options
   * </pre>
   *
   * <code>map&lt;string, string&gt; config = 2 [json_name = "config"];</code>
   */
  int getConfigCount();
  /**
   * <pre>
   * Source credentials, endpoints, options
   * </pre>
   *
   * <code>map&lt;string, string&gt; config = 2 [json_name = "config"];</code>
   */
  boolean containsConfig(
      java.lang.String key);
  /**
   * Use {@link #getConfigMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getConfig();
  /**
   * <pre>
   * Source credentials, endpoints, options
   * </pre>
   *
   * <code>map&lt;string, string&gt; config = 2 [json_name = "config"];</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getConfigMap();
  /**
   * <pre>
   * Source credentials, endpoints, options
   * </pre>
   *
   * <code>map&lt;string, string&gt; config = 2 [json_name = "config"];</code>
   */
  /* nullable */
java.lang.String getConfigOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * Source credentials, endpoints, options
   * </pre>
   *
   * <code>map&lt;string, string&gt; config = 2 [json_name = "config"];</code>
   */
  java.lang.String getConfigOrThrow(
      java.lang.String key);
}
