// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datapower/noesis/v1/connector.proto

package datapower.noesis.v1;

public interface StructuredSchemaDescriptorOrBuilder extends
    // @@protoc_insertion_point(interface_extends:datapower.noesis.v1.StructuredSchemaDescriptor)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Schema version identifier
   * </pre>
   *
   * <code>string schema_id = 1 [json_name = "schemaId"];</code>
   * @return The schemaId.
   */
  java.lang.String getSchemaId();
  /**
   * <pre>
   * Schema version identifier
   * </pre>
   *
   * <code>string schema_id = 1 [json_name = "schemaId"];</code>
   * @return The bytes for schemaId.
   */
  com.google.protobuf.ByteString
      getSchemaIdBytes();

  /**
   * <pre>
   * Field definitions
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.FieldDescriptor fields = 2 [json_name = "fields"];</code>
   */
  java.util.List<datapower.noesis.v1.FieldDescriptor> 
      getFieldsList();
  /**
   * <pre>
   * Field definitions
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.FieldDescriptor fields = 2 [json_name = "fields"];</code>
   */
  datapower.noesis.v1.FieldDescriptor getFields(int index);
  /**
   * <pre>
   * Field definitions
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.FieldDescriptor fields = 2 [json_name = "fields"];</code>
   */
  int getFieldsCount();
  /**
   * <pre>
   * Field definitions
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.FieldDescriptor fields = 2 [json_name = "fields"];</code>
   */
  java.util.List<? extends datapower.noesis.v1.FieldDescriptorOrBuilder> 
      getFieldsOrBuilderList();
  /**
   * <pre>
   * Field definitions
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.FieldDescriptor fields = 2 [json_name = "fields"];</code>
   */
  datapower.noesis.v1.FieldDescriptorOrBuilder getFieldsOrBuilder(
      int index);

  /**
   * <pre>
   * Constraints
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.ConstraintDescriptor constraints = 3 [json_name = "constraints"];</code>
   */
  java.util.List<datapower.noesis.v1.ConstraintDescriptor> 
      getConstraintsList();
  /**
   * <pre>
   * Constraints
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.ConstraintDescriptor constraints = 3 [json_name = "constraints"];</code>
   */
  datapower.noesis.v1.ConstraintDescriptor getConstraints(int index);
  /**
   * <pre>
   * Constraints
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.ConstraintDescriptor constraints = 3 [json_name = "constraints"];</code>
   */
  int getConstraintsCount();
  /**
   * <pre>
   * Constraints
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.ConstraintDescriptor constraints = 3 [json_name = "constraints"];</code>
   */
  java.util.List<? extends datapower.noesis.v1.ConstraintDescriptorOrBuilder> 
      getConstraintsOrBuilderList();
  /**
   * <pre>
   * Constraints
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.ConstraintDescriptor constraints = 3 [json_name = "constraints"];</code>
   */
  datapower.noesis.v1.ConstraintDescriptorOrBuilder getConstraintsOrBuilder(
      int index);

  /**
   * <pre>
   * Indexes
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.IndexDescriptor indexes = 4 [json_name = "indexes"];</code>
   */
  java.util.List<datapower.noesis.v1.IndexDescriptor> 
      getIndexesList();
  /**
   * <pre>
   * Indexes
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.IndexDescriptor indexes = 4 [json_name = "indexes"];</code>
   */
  datapower.noesis.v1.IndexDescriptor getIndexes(int index);
  /**
   * <pre>
   * Indexes
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.IndexDescriptor indexes = 4 [json_name = "indexes"];</code>
   */
  int getIndexesCount();
  /**
   * <pre>
   * Indexes
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.IndexDescriptor indexes = 4 [json_name = "indexes"];</code>
   */
  java.util.List<? extends datapower.noesis.v1.IndexDescriptorOrBuilder> 
      getIndexesOrBuilderList();
  /**
   * <pre>
   * Indexes
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.IndexDescriptor indexes = 4 [json_name = "indexes"];</code>
   */
  datapower.noesis.v1.IndexDescriptorOrBuilder getIndexesOrBuilder(
      int index);

  /**
   * <pre>
   * Table-level attributes
   * </pre>
   *
   * <code>map&lt;string, string&gt; attributes = 5 [json_name = "attributes"];</code>
   */
  int getAttributesCount();
  /**
   * <pre>
   * Table-level attributes
   * </pre>
   *
   * <code>map&lt;string, string&gt; attributes = 5 [json_name = "attributes"];</code>
   */
  boolean containsAttributes(
      java.lang.String key);
  /**
   * Use {@link #getAttributesMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getAttributes();
  /**
   * <pre>
   * Table-level attributes
   * </pre>
   *
   * <code>map&lt;string, string&gt; attributes = 5 [json_name = "attributes"];</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getAttributesMap();
  /**
   * <pre>
   * Table-level attributes
   * </pre>
   *
   * <code>map&lt;string, string&gt; attributes = 5 [json_name = "attributes"];</code>
   */
  /* nullable */
java.lang.String getAttributesOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * Table-level attributes
   * </pre>
   *
   * <code>map&lt;string, string&gt; attributes = 5 [json_name = "attributes"];</code>
   */
  java.lang.String getAttributesOrThrow(
      java.lang.String key);
}
