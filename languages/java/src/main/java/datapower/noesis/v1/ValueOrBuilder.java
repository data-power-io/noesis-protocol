// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datapower/noesis/v1/connector.proto

package datapower.noesis.v1;

public interface ValueOrBuilder extends
    // @@protoc_insertion_point(interface_extends:datapower.noesis.v1.Value)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Primitive types
   * </pre>
   *
   * <code>string string_val = 1 [json_name = "stringVal"];</code>
   * @return Whether the stringVal field is set.
   */
  boolean hasStringVal();
  /**
   * <pre>
   * Primitive types
   * </pre>
   *
   * <code>string string_val = 1 [json_name = "stringVal"];</code>
   * @return The stringVal.
   */
  java.lang.String getStringVal();
  /**
   * <pre>
   * Primitive types
   * </pre>
   *
   * <code>string string_val = 1 [json_name = "stringVal"];</code>
   * @return The bytes for stringVal.
   */
  com.google.protobuf.ByteString
      getStringValBytes();

  /**
   * <code>int64 int64_val = 2 [json_name = "int64Val"];</code>
   * @return Whether the int64Val field is set.
   */
  boolean hasInt64Val();
  /**
   * <code>int64 int64_val = 2 [json_name = "int64Val"];</code>
   * @return The int64Val.
   */
  long getInt64Val();

  /**
   * <code>int32 int32_val = 3 [json_name = "int32Val"];</code>
   * @return Whether the int32Val field is set.
   */
  boolean hasInt32Val();
  /**
   * <code>int32 int32_val = 3 [json_name = "int32Val"];</code>
   * @return The int32Val.
   */
  int getInt32Val();

  /**
   * <code>double double_val = 4 [json_name = "doubleVal"];</code>
   * @return Whether the doubleVal field is set.
   */
  boolean hasDoubleVal();
  /**
   * <code>double double_val = 4 [json_name = "doubleVal"];</code>
   * @return The doubleVal.
   */
  double getDoubleVal();

  /**
   * <code>float float_val = 5 [json_name = "floatVal"];</code>
   * @return Whether the floatVal field is set.
   */
  boolean hasFloatVal();
  /**
   * <code>float float_val = 5 [json_name = "floatVal"];</code>
   * @return The floatVal.
   */
  float getFloatVal();

  /**
   * <code>bool bool_val = 6 [json_name = "boolVal"];</code>
   * @return Whether the boolVal field is set.
   */
  boolean hasBoolVal();
  /**
   * <code>bool bool_val = 6 [json_name = "boolVal"];</code>
   * @return The boolVal.
   */
  boolean getBoolVal();

  /**
   * <code>bytes bytes_val = 7 [json_name = "bytesVal"];</code>
   * @return Whether the bytesVal field is set.
   */
  boolean hasBytesVal();
  /**
   * <code>bytes bytes_val = 7 [json_name = "bytesVal"];</code>
   * @return The bytesVal.
   */
  com.google.protobuf.ByteString getBytesVal();

  /**
   * <pre>
   * Temporal types (microseconds precision)
   * </pre>
   *
   * <code>int64 timestamp_micros = 10 [json_name = "timestampMicros"];</code>
   * @return Whether the timestampMicros field is set.
   */
  boolean hasTimestampMicros();
  /**
   * <pre>
   * Temporal types (microseconds precision)
   * </pre>
   *
   * <code>int64 timestamp_micros = 10 [json_name = "timestampMicros"];</code>
   * @return The timestampMicros.
   */
  long getTimestampMicros();

  /**
   * <pre>
   * Date: days since Unix epoch (1970-01-01)
   * </pre>
   *
   * <code>int32 date_days = 11 [json_name = "dateDays"];</code>
   * @return Whether the dateDays field is set.
   */
  boolean hasDateDays();
  /**
   * <pre>
   * Date: days since Unix epoch (1970-01-01)
   * </pre>
   *
   * <code>int32 date_days = 11 [json_name = "dateDays"];</code>
   * @return The dateDays.
   */
  int getDateDays();

  /**
   * <pre>
   * Time: microseconds since midnight
   * </pre>
   *
   * <code>int64 time_micros = 12 [json_name = "timeMicros"];</code>
   * @return Whether the timeMicros field is set.
   */
  boolean hasTimeMicros();
  /**
   * <pre>
   * Time: microseconds since midnight
   * </pre>
   *
   * <code>int64 time_micros = 12 [json_name = "timeMicros"];</code>
   * @return The timeMicros.
   */
  long getTimeMicros();

  /**
   * <pre>
   * Special values
   * </pre>
   *
   * <code>.datapower.noesis.v1.NullValue null_val = 20 [json_name = "nullVal"];</code>
   * @return Whether the nullVal field is set.
   */
  boolean hasNullVal();
  /**
   * <pre>
   * Special values
   * </pre>
   *
   * <code>.datapower.noesis.v1.NullValue null_val = 20 [json_name = "nullVal"];</code>
   * @return The enum numeric value on the wire for nullVal.
   */
  int getNullValValue();
  /**
   * <pre>
   * Special values
   * </pre>
   *
   * <code>.datapower.noesis.v1.NullValue null_val = 20 [json_name = "nullVal"];</code>
   * @return The nullVal.
   */
  datapower.noesis.v1.NullValue getNullVal();

  /**
   * <pre>
   * Nested types (for complex schemas)
   * </pre>
   *
   * <code>.datapower.noesis.v1.StructValue struct_val = 21 [json_name = "structVal"];</code>
   * @return Whether the structVal field is set.
   */
  boolean hasStructVal();
  /**
   * <pre>
   * Nested types (for complex schemas)
   * </pre>
   *
   * <code>.datapower.noesis.v1.StructValue struct_val = 21 [json_name = "structVal"];</code>
   * @return The structVal.
   */
  datapower.noesis.v1.StructValue getStructVal();
  /**
   * <pre>
   * Nested types (for complex schemas)
   * </pre>
   *
   * <code>.datapower.noesis.v1.StructValue struct_val = 21 [json_name = "structVal"];</code>
   */
  datapower.noesis.v1.StructValueOrBuilder getStructValOrBuilder();

  /**
   * <pre>
   * Array/list
   * </pre>
   *
   * <code>.datapower.noesis.v1.ListValue list_val = 22 [json_name = "listVal"];</code>
   * @return Whether the listVal field is set.
   */
  boolean hasListVal();
  /**
   * <pre>
   * Array/list
   * </pre>
   *
   * <code>.datapower.noesis.v1.ListValue list_val = 22 [json_name = "listVal"];</code>
   * @return The listVal.
   */
  datapower.noesis.v1.ListValue getListVal();
  /**
   * <pre>
   * Array/list
   * </pre>
   *
   * <code>.datapower.noesis.v1.ListValue list_val = 22 [json_name = "listVal"];</code>
   */
  datapower.noesis.v1.ListValueOrBuilder getListValOrBuilder();

  /**
   * <pre>
   * Map/dictionary
   * </pre>
   *
   * <code>.datapower.noesis.v1.MapValue map_val = 23 [json_name = "mapVal"];</code>
   * @return Whether the mapVal field is set.
   */
  boolean hasMapVal();
  /**
   * <pre>
   * Map/dictionary
   * </pre>
   *
   * <code>.datapower.noesis.v1.MapValue map_val = 23 [json_name = "mapVal"];</code>
   * @return The mapVal.
   */
  datapower.noesis.v1.MapValue getMapVal();
  /**
   * <pre>
   * Map/dictionary
   * </pre>
   *
   * <code>.datapower.noesis.v1.MapValue map_val = 23 [json_name = "mapVal"];</code>
   */
  datapower.noesis.v1.MapValueOrBuilder getMapValOrBuilder();

  datapower.noesis.v1.Value.KindCase getKindCase();
}
