// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datapower/noesis/v1/connector.proto

package datapower.noesis.v1;

/**
 * <pre>
 * Stream payload: schema messages (optional), data records (NODE or LINK), periodic state checkpoints,
 * plus logs/metrics for observability.
 * </pre>
 *
 * Protobuf type {@code datapower.noesis.v1.ReadMessage}
 */
public final class ReadMessage extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:datapower.noesis.v1.ReadMessage)
    ReadMessageOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ReadMessage.newBuilder() to construct.
  private ReadMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ReadMessage() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ReadMessage();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_ReadMessage_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_ReadMessage_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            datapower.noesis.v1.ReadMessage.class, datapower.noesis.v1.ReadMessage.Builder.class);
  }

  private int msgCase_ = 0;
  @SuppressWarnings("serial")
  private java.lang.Object msg_;
  public enum MsgCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    SCHEMA(1),
    RECORD(2),
    STATE(3),
    LOG(4),
    METRIC(5),
    MSG_NOT_SET(0);
    private final int value;
    private MsgCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MsgCase valueOf(int value) {
      return forNumber(value);
    }

    public static MsgCase forNumber(int value) {
      switch (value) {
        case 1: return SCHEMA;
        case 2: return RECORD;
        case 3: return STATE;
        case 4: return LOG;
        case 5: return METRIC;
        case 0: return MSG_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public MsgCase
  getMsgCase() {
    return MsgCase.forNumber(
        msgCase_);
  }

  public static final int SCHEMA_FIELD_NUMBER = 1;
  /**
   * <pre>
   * (Optional) schema broadcast/update
   * </pre>
   *
   * <code>.datapower.noesis.v1.SchemaMsg schema = 1 [json_name = "schema"];</code>
   * @return Whether the schema field is set.
   */
  @java.lang.Override
  public boolean hasSchema() {
    return msgCase_ == 1;
  }
  /**
   * <pre>
   * (Optional) schema broadcast/update
   * </pre>
   *
   * <code>.datapower.noesis.v1.SchemaMsg schema = 1 [json_name = "schema"];</code>
   * @return The schema.
   */
  @java.lang.Override
  public datapower.noesis.v1.SchemaMsg getSchema() {
    if (msgCase_ == 1) {
       return (datapower.noesis.v1.SchemaMsg) msg_;
    }
    return datapower.noesis.v1.SchemaMsg.getDefaultInstance();
  }
  /**
   * <pre>
   * (Optional) schema broadcast/update
   * </pre>
   *
   * <code>.datapower.noesis.v1.SchemaMsg schema = 1 [json_name = "schema"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.SchemaMsgOrBuilder getSchemaOrBuilder() {
    if (msgCase_ == 1) {
       return (datapower.noesis.v1.SchemaMsg) msg_;
    }
    return datapower.noesis.v1.SchemaMsg.getDefaultInstance();
  }

  public static final int RECORD_FIELD_NUMBER = 2;
  /**
   * <pre>
   * Data (NODE or LINK), including deletes
   * </pre>
   *
   * <code>.datapower.noesis.v1.RecordMsg record = 2 [json_name = "record"];</code>
   * @return Whether the record field is set.
   */
  @java.lang.Override
  public boolean hasRecord() {
    return msgCase_ == 2;
  }
  /**
   * <pre>
   * Data (NODE or LINK), including deletes
   * </pre>
   *
   * <code>.datapower.noesis.v1.RecordMsg record = 2 [json_name = "record"];</code>
   * @return The record.
   */
  @java.lang.Override
  public datapower.noesis.v1.RecordMsg getRecord() {
    if (msgCase_ == 2) {
       return (datapower.noesis.v1.RecordMsg) msg_;
    }
    return datapower.noesis.v1.RecordMsg.getDefaultInstance();
  }
  /**
   * <pre>
   * Data (NODE or LINK), including deletes
   * </pre>
   *
   * <code>.datapower.noesis.v1.RecordMsg record = 2 [json_name = "record"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.RecordMsgOrBuilder getRecordOrBuilder() {
    if (msgCase_ == 2) {
       return (datapower.noesis.v1.RecordMsg) msg_;
    }
    return datapower.noesis.v1.RecordMsg.getDefaultInstance();
  }

  public static final int STATE_FIELD_NUMBER = 3;
  /**
   * <pre>
   * Checkpoint (cursor/watermark/group frontier)
   * </pre>
   *
   * <code>.datapower.noesis.v1.StateMsg state = 3 [json_name = "state"];</code>
   * @return Whether the state field is set.
   */
  @java.lang.Override
  public boolean hasState() {
    return msgCase_ == 3;
  }
  /**
   * <pre>
   * Checkpoint (cursor/watermark/group frontier)
   * </pre>
   *
   * <code>.datapower.noesis.v1.StateMsg state = 3 [json_name = "state"];</code>
   * @return The state.
   */
  @java.lang.Override
  public datapower.noesis.v1.StateMsg getState() {
    if (msgCase_ == 3) {
       return (datapower.noesis.v1.StateMsg) msg_;
    }
    return datapower.noesis.v1.StateMsg.getDefaultInstance();
  }
  /**
   * <pre>
   * Checkpoint (cursor/watermark/group frontier)
   * </pre>
   *
   * <code>.datapower.noesis.v1.StateMsg state = 3 [json_name = "state"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.StateMsgOrBuilder getStateOrBuilder() {
    if (msgCase_ == 3) {
       return (datapower.noesis.v1.StateMsg) msg_;
    }
    return datapower.noesis.v1.StateMsg.getDefaultInstance();
  }

  public static final int LOG_FIELD_NUMBER = 4;
  /**
   * <pre>
   * Structured logs
   * </pre>
   *
   * <code>.datapower.noesis.v1.LogMsg log = 4 [json_name = "log"];</code>
   * @return Whether the log field is set.
   */
  @java.lang.Override
  public boolean hasLog() {
    return msgCase_ == 4;
  }
  /**
   * <pre>
   * Structured logs
   * </pre>
   *
   * <code>.datapower.noesis.v1.LogMsg log = 4 [json_name = "log"];</code>
   * @return The log.
   */
  @java.lang.Override
  public datapower.noesis.v1.LogMsg getLog() {
    if (msgCase_ == 4) {
       return (datapower.noesis.v1.LogMsg) msg_;
    }
    return datapower.noesis.v1.LogMsg.getDefaultInstance();
  }
  /**
   * <pre>
   * Structured logs
   * </pre>
   *
   * <code>.datapower.noesis.v1.LogMsg log = 4 [json_name = "log"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.LogMsgOrBuilder getLogOrBuilder() {
    if (msgCase_ == 4) {
       return (datapower.noesis.v1.LogMsg) msg_;
    }
    return datapower.noesis.v1.LogMsg.getDefaultInstance();
  }

  public static final int METRIC_FIELD_NUMBER = 5;
  /**
   * <pre>
   * Simple metrics
   * </pre>
   *
   * <code>.datapower.noesis.v1.MetricMsg metric = 5 [json_name = "metric"];</code>
   * @return Whether the metric field is set.
   */
  @java.lang.Override
  public boolean hasMetric() {
    return msgCase_ == 5;
  }
  /**
   * <pre>
   * Simple metrics
   * </pre>
   *
   * <code>.datapower.noesis.v1.MetricMsg metric = 5 [json_name = "metric"];</code>
   * @return The metric.
   */
  @java.lang.Override
  public datapower.noesis.v1.MetricMsg getMetric() {
    if (msgCase_ == 5) {
       return (datapower.noesis.v1.MetricMsg) msg_;
    }
    return datapower.noesis.v1.MetricMsg.getDefaultInstance();
  }
  /**
   * <pre>
   * Simple metrics
   * </pre>
   *
   * <code>.datapower.noesis.v1.MetricMsg metric = 5 [json_name = "metric"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.MetricMsgOrBuilder getMetricOrBuilder() {
    if (msgCase_ == 5) {
       return (datapower.noesis.v1.MetricMsg) msg_;
    }
    return datapower.noesis.v1.MetricMsg.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (msgCase_ == 1) {
      output.writeMessage(1, (datapower.noesis.v1.SchemaMsg) msg_);
    }
    if (msgCase_ == 2) {
      output.writeMessage(2, (datapower.noesis.v1.RecordMsg) msg_);
    }
    if (msgCase_ == 3) {
      output.writeMessage(3, (datapower.noesis.v1.StateMsg) msg_);
    }
    if (msgCase_ == 4) {
      output.writeMessage(4, (datapower.noesis.v1.LogMsg) msg_);
    }
    if (msgCase_ == 5) {
      output.writeMessage(5, (datapower.noesis.v1.MetricMsg) msg_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (msgCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (datapower.noesis.v1.SchemaMsg) msg_);
    }
    if (msgCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (datapower.noesis.v1.RecordMsg) msg_);
    }
    if (msgCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (datapower.noesis.v1.StateMsg) msg_);
    }
    if (msgCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (datapower.noesis.v1.LogMsg) msg_);
    }
    if (msgCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, (datapower.noesis.v1.MetricMsg) msg_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof datapower.noesis.v1.ReadMessage)) {
      return super.equals(obj);
    }
    datapower.noesis.v1.ReadMessage other = (datapower.noesis.v1.ReadMessage) obj;

    if (!getMsgCase().equals(other.getMsgCase())) return false;
    switch (msgCase_) {
      case 1:
        if (!getSchema()
            .equals(other.getSchema())) return false;
        break;
      case 2:
        if (!getRecord()
            .equals(other.getRecord())) return false;
        break;
      case 3:
        if (!getState()
            .equals(other.getState())) return false;
        break;
      case 4:
        if (!getLog()
            .equals(other.getLog())) return false;
        break;
      case 5:
        if (!getMetric()
            .equals(other.getMetric())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (msgCase_) {
      case 1:
        hash = (37 * hash) + SCHEMA_FIELD_NUMBER;
        hash = (53 * hash) + getSchema().hashCode();
        break;
      case 2:
        hash = (37 * hash) + RECORD_FIELD_NUMBER;
        hash = (53 * hash) + getRecord().hashCode();
        break;
      case 3:
        hash = (37 * hash) + STATE_FIELD_NUMBER;
        hash = (53 * hash) + getState().hashCode();
        break;
      case 4:
        hash = (37 * hash) + LOG_FIELD_NUMBER;
        hash = (53 * hash) + getLog().hashCode();
        break;
      case 5:
        hash = (37 * hash) + METRIC_FIELD_NUMBER;
        hash = (53 * hash) + getMetric().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static datapower.noesis.v1.ReadMessage parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.ReadMessage parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.ReadMessage parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.ReadMessage parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.ReadMessage parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.ReadMessage parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.ReadMessage parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.ReadMessage parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static datapower.noesis.v1.ReadMessage parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static datapower.noesis.v1.ReadMessage parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static datapower.noesis.v1.ReadMessage parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.ReadMessage parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(datapower.noesis.v1.ReadMessage prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Stream payload: schema messages (optional), data records (NODE or LINK), periodic state checkpoints,
   * plus logs/metrics for observability.
   * </pre>
   *
   * Protobuf type {@code datapower.noesis.v1.ReadMessage}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:datapower.noesis.v1.ReadMessage)
      datapower.noesis.v1.ReadMessageOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_ReadMessage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_ReadMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              datapower.noesis.v1.ReadMessage.class, datapower.noesis.v1.ReadMessage.Builder.class);
    }

    // Construct using datapower.noesis.v1.ReadMessage.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (schemaBuilder_ != null) {
        schemaBuilder_.clear();
      }
      if (recordBuilder_ != null) {
        recordBuilder_.clear();
      }
      if (stateBuilder_ != null) {
        stateBuilder_.clear();
      }
      if (logBuilder_ != null) {
        logBuilder_.clear();
      }
      if (metricBuilder_ != null) {
        metricBuilder_.clear();
      }
      msgCase_ = 0;
      msg_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_ReadMessage_descriptor;
    }

    @java.lang.Override
    public datapower.noesis.v1.ReadMessage getDefaultInstanceForType() {
      return datapower.noesis.v1.ReadMessage.getDefaultInstance();
    }

    @java.lang.Override
    public datapower.noesis.v1.ReadMessage build() {
      datapower.noesis.v1.ReadMessage result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public datapower.noesis.v1.ReadMessage buildPartial() {
      datapower.noesis.v1.ReadMessage result = new datapower.noesis.v1.ReadMessage(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(datapower.noesis.v1.ReadMessage result) {
      int from_bitField0_ = bitField0_;
    }

    private void buildPartialOneofs(datapower.noesis.v1.ReadMessage result) {
      result.msgCase_ = msgCase_;
      result.msg_ = this.msg_;
      if (msgCase_ == 1 &&
          schemaBuilder_ != null) {
        result.msg_ = schemaBuilder_.build();
      }
      if (msgCase_ == 2 &&
          recordBuilder_ != null) {
        result.msg_ = recordBuilder_.build();
      }
      if (msgCase_ == 3 &&
          stateBuilder_ != null) {
        result.msg_ = stateBuilder_.build();
      }
      if (msgCase_ == 4 &&
          logBuilder_ != null) {
        result.msg_ = logBuilder_.build();
      }
      if (msgCase_ == 5 &&
          metricBuilder_ != null) {
        result.msg_ = metricBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof datapower.noesis.v1.ReadMessage) {
        return mergeFrom((datapower.noesis.v1.ReadMessage)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(datapower.noesis.v1.ReadMessage other) {
      if (other == datapower.noesis.v1.ReadMessage.getDefaultInstance()) return this;
      switch (other.getMsgCase()) {
        case SCHEMA: {
          mergeSchema(other.getSchema());
          break;
        }
        case RECORD: {
          mergeRecord(other.getRecord());
          break;
        }
        case STATE: {
          mergeState(other.getState());
          break;
        }
        case LOG: {
          mergeLog(other.getLog());
          break;
        }
        case METRIC: {
          mergeMetric(other.getMetric());
          break;
        }
        case MSG_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getSchemaFieldBuilder().getBuilder(),
                  extensionRegistry);
              msgCase_ = 1;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getRecordFieldBuilder().getBuilder(),
                  extensionRegistry);
              msgCase_ = 2;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getStateFieldBuilder().getBuilder(),
                  extensionRegistry);
              msgCase_ = 3;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getLogFieldBuilder().getBuilder(),
                  extensionRegistry);
              msgCase_ = 4;
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getMetricFieldBuilder().getBuilder(),
                  extensionRegistry);
              msgCase_ = 5;
              break;
            } // case 42
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int msgCase_ = 0;
    private java.lang.Object msg_;
    public MsgCase
        getMsgCase() {
      return MsgCase.forNumber(
          msgCase_);
    }

    public Builder clearMsg() {
      msgCase_ = 0;
      msg_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.SchemaMsg, datapower.noesis.v1.SchemaMsg.Builder, datapower.noesis.v1.SchemaMsgOrBuilder> schemaBuilder_;
    /**
     * <pre>
     * (Optional) schema broadcast/update
     * </pre>
     *
     * <code>.datapower.noesis.v1.SchemaMsg schema = 1 [json_name = "schema"];</code>
     * @return Whether the schema field is set.
     */
    @java.lang.Override
    public boolean hasSchema() {
      return msgCase_ == 1;
    }
    /**
     * <pre>
     * (Optional) schema broadcast/update
     * </pre>
     *
     * <code>.datapower.noesis.v1.SchemaMsg schema = 1 [json_name = "schema"];</code>
     * @return The schema.
     */
    @java.lang.Override
    public datapower.noesis.v1.SchemaMsg getSchema() {
      if (schemaBuilder_ == null) {
        if (msgCase_ == 1) {
          return (datapower.noesis.v1.SchemaMsg) msg_;
        }
        return datapower.noesis.v1.SchemaMsg.getDefaultInstance();
      } else {
        if (msgCase_ == 1) {
          return schemaBuilder_.getMessage();
        }
        return datapower.noesis.v1.SchemaMsg.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * (Optional) schema broadcast/update
     * </pre>
     *
     * <code>.datapower.noesis.v1.SchemaMsg schema = 1 [json_name = "schema"];</code>
     */
    public Builder setSchema(datapower.noesis.v1.SchemaMsg value) {
      if (schemaBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        msg_ = value;
        onChanged();
      } else {
        schemaBuilder_.setMessage(value);
      }
      msgCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * (Optional) schema broadcast/update
     * </pre>
     *
     * <code>.datapower.noesis.v1.SchemaMsg schema = 1 [json_name = "schema"];</code>
     */
    public Builder setSchema(
        datapower.noesis.v1.SchemaMsg.Builder builderForValue) {
      if (schemaBuilder_ == null) {
        msg_ = builderForValue.build();
        onChanged();
      } else {
        schemaBuilder_.setMessage(builderForValue.build());
      }
      msgCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * (Optional) schema broadcast/update
     * </pre>
     *
     * <code>.datapower.noesis.v1.SchemaMsg schema = 1 [json_name = "schema"];</code>
     */
    public Builder mergeSchema(datapower.noesis.v1.SchemaMsg value) {
      if (schemaBuilder_ == null) {
        if (msgCase_ == 1 &&
            msg_ != datapower.noesis.v1.SchemaMsg.getDefaultInstance()) {
          msg_ = datapower.noesis.v1.SchemaMsg.newBuilder((datapower.noesis.v1.SchemaMsg) msg_)
              .mergeFrom(value).buildPartial();
        } else {
          msg_ = value;
        }
        onChanged();
      } else {
        if (msgCase_ == 1) {
          schemaBuilder_.mergeFrom(value);
        } else {
          schemaBuilder_.setMessage(value);
        }
      }
      msgCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * (Optional) schema broadcast/update
     * </pre>
     *
     * <code>.datapower.noesis.v1.SchemaMsg schema = 1 [json_name = "schema"];</code>
     */
    public Builder clearSchema() {
      if (schemaBuilder_ == null) {
        if (msgCase_ == 1) {
          msgCase_ = 0;
          msg_ = null;
          onChanged();
        }
      } else {
        if (msgCase_ == 1) {
          msgCase_ = 0;
          msg_ = null;
        }
        schemaBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * (Optional) schema broadcast/update
     * </pre>
     *
     * <code>.datapower.noesis.v1.SchemaMsg schema = 1 [json_name = "schema"];</code>
     */
    public datapower.noesis.v1.SchemaMsg.Builder getSchemaBuilder() {
      return getSchemaFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * (Optional) schema broadcast/update
     * </pre>
     *
     * <code>.datapower.noesis.v1.SchemaMsg schema = 1 [json_name = "schema"];</code>
     */
    @java.lang.Override
    public datapower.noesis.v1.SchemaMsgOrBuilder getSchemaOrBuilder() {
      if ((msgCase_ == 1) && (schemaBuilder_ != null)) {
        return schemaBuilder_.getMessageOrBuilder();
      } else {
        if (msgCase_ == 1) {
          return (datapower.noesis.v1.SchemaMsg) msg_;
        }
        return datapower.noesis.v1.SchemaMsg.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * (Optional) schema broadcast/update
     * </pre>
     *
     * <code>.datapower.noesis.v1.SchemaMsg schema = 1 [json_name = "schema"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.SchemaMsg, datapower.noesis.v1.SchemaMsg.Builder, datapower.noesis.v1.SchemaMsgOrBuilder> 
        getSchemaFieldBuilder() {
      if (schemaBuilder_ == null) {
        if (!(msgCase_ == 1)) {
          msg_ = datapower.noesis.v1.SchemaMsg.getDefaultInstance();
        }
        schemaBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            datapower.noesis.v1.SchemaMsg, datapower.noesis.v1.SchemaMsg.Builder, datapower.noesis.v1.SchemaMsgOrBuilder>(
                (datapower.noesis.v1.SchemaMsg) msg_,
                getParentForChildren(),
                isClean());
        msg_ = null;
      }
      msgCase_ = 1;
      onChanged();
      return schemaBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.RecordMsg, datapower.noesis.v1.RecordMsg.Builder, datapower.noesis.v1.RecordMsgOrBuilder> recordBuilder_;
    /**
     * <pre>
     * Data (NODE or LINK), including deletes
     * </pre>
     *
     * <code>.datapower.noesis.v1.RecordMsg record = 2 [json_name = "record"];</code>
     * @return Whether the record field is set.
     */
    @java.lang.Override
    public boolean hasRecord() {
      return msgCase_ == 2;
    }
    /**
     * <pre>
     * Data (NODE or LINK), including deletes
     * </pre>
     *
     * <code>.datapower.noesis.v1.RecordMsg record = 2 [json_name = "record"];</code>
     * @return The record.
     */
    @java.lang.Override
    public datapower.noesis.v1.RecordMsg getRecord() {
      if (recordBuilder_ == null) {
        if (msgCase_ == 2) {
          return (datapower.noesis.v1.RecordMsg) msg_;
        }
        return datapower.noesis.v1.RecordMsg.getDefaultInstance();
      } else {
        if (msgCase_ == 2) {
          return recordBuilder_.getMessage();
        }
        return datapower.noesis.v1.RecordMsg.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Data (NODE or LINK), including deletes
     * </pre>
     *
     * <code>.datapower.noesis.v1.RecordMsg record = 2 [json_name = "record"];</code>
     */
    public Builder setRecord(datapower.noesis.v1.RecordMsg value) {
      if (recordBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        msg_ = value;
        onChanged();
      } else {
        recordBuilder_.setMessage(value);
      }
      msgCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Data (NODE or LINK), including deletes
     * </pre>
     *
     * <code>.datapower.noesis.v1.RecordMsg record = 2 [json_name = "record"];</code>
     */
    public Builder setRecord(
        datapower.noesis.v1.RecordMsg.Builder builderForValue) {
      if (recordBuilder_ == null) {
        msg_ = builderForValue.build();
        onChanged();
      } else {
        recordBuilder_.setMessage(builderForValue.build());
      }
      msgCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Data (NODE or LINK), including deletes
     * </pre>
     *
     * <code>.datapower.noesis.v1.RecordMsg record = 2 [json_name = "record"];</code>
     */
    public Builder mergeRecord(datapower.noesis.v1.RecordMsg value) {
      if (recordBuilder_ == null) {
        if (msgCase_ == 2 &&
            msg_ != datapower.noesis.v1.RecordMsg.getDefaultInstance()) {
          msg_ = datapower.noesis.v1.RecordMsg.newBuilder((datapower.noesis.v1.RecordMsg) msg_)
              .mergeFrom(value).buildPartial();
        } else {
          msg_ = value;
        }
        onChanged();
      } else {
        if (msgCase_ == 2) {
          recordBuilder_.mergeFrom(value);
        } else {
          recordBuilder_.setMessage(value);
        }
      }
      msgCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Data (NODE or LINK), including deletes
     * </pre>
     *
     * <code>.datapower.noesis.v1.RecordMsg record = 2 [json_name = "record"];</code>
     */
    public Builder clearRecord() {
      if (recordBuilder_ == null) {
        if (msgCase_ == 2) {
          msgCase_ = 0;
          msg_ = null;
          onChanged();
        }
      } else {
        if (msgCase_ == 2) {
          msgCase_ = 0;
          msg_ = null;
        }
        recordBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Data (NODE or LINK), including deletes
     * </pre>
     *
     * <code>.datapower.noesis.v1.RecordMsg record = 2 [json_name = "record"];</code>
     */
    public datapower.noesis.v1.RecordMsg.Builder getRecordBuilder() {
      return getRecordFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Data (NODE or LINK), including deletes
     * </pre>
     *
     * <code>.datapower.noesis.v1.RecordMsg record = 2 [json_name = "record"];</code>
     */
    @java.lang.Override
    public datapower.noesis.v1.RecordMsgOrBuilder getRecordOrBuilder() {
      if ((msgCase_ == 2) && (recordBuilder_ != null)) {
        return recordBuilder_.getMessageOrBuilder();
      } else {
        if (msgCase_ == 2) {
          return (datapower.noesis.v1.RecordMsg) msg_;
        }
        return datapower.noesis.v1.RecordMsg.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Data (NODE or LINK), including deletes
     * </pre>
     *
     * <code>.datapower.noesis.v1.RecordMsg record = 2 [json_name = "record"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.RecordMsg, datapower.noesis.v1.RecordMsg.Builder, datapower.noesis.v1.RecordMsgOrBuilder> 
        getRecordFieldBuilder() {
      if (recordBuilder_ == null) {
        if (!(msgCase_ == 2)) {
          msg_ = datapower.noesis.v1.RecordMsg.getDefaultInstance();
        }
        recordBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            datapower.noesis.v1.RecordMsg, datapower.noesis.v1.RecordMsg.Builder, datapower.noesis.v1.RecordMsgOrBuilder>(
                (datapower.noesis.v1.RecordMsg) msg_,
                getParentForChildren(),
                isClean());
        msg_ = null;
      }
      msgCase_ = 2;
      onChanged();
      return recordBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.StateMsg, datapower.noesis.v1.StateMsg.Builder, datapower.noesis.v1.StateMsgOrBuilder> stateBuilder_;
    /**
     * <pre>
     * Checkpoint (cursor/watermark/group frontier)
     * </pre>
     *
     * <code>.datapower.noesis.v1.StateMsg state = 3 [json_name = "state"];</code>
     * @return Whether the state field is set.
     */
    @java.lang.Override
    public boolean hasState() {
      return msgCase_ == 3;
    }
    /**
     * <pre>
     * Checkpoint (cursor/watermark/group frontier)
     * </pre>
     *
     * <code>.datapower.noesis.v1.StateMsg state = 3 [json_name = "state"];</code>
     * @return The state.
     */
    @java.lang.Override
    public datapower.noesis.v1.StateMsg getState() {
      if (stateBuilder_ == null) {
        if (msgCase_ == 3) {
          return (datapower.noesis.v1.StateMsg) msg_;
        }
        return datapower.noesis.v1.StateMsg.getDefaultInstance();
      } else {
        if (msgCase_ == 3) {
          return stateBuilder_.getMessage();
        }
        return datapower.noesis.v1.StateMsg.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Checkpoint (cursor/watermark/group frontier)
     * </pre>
     *
     * <code>.datapower.noesis.v1.StateMsg state = 3 [json_name = "state"];</code>
     */
    public Builder setState(datapower.noesis.v1.StateMsg value) {
      if (stateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        msg_ = value;
        onChanged();
      } else {
        stateBuilder_.setMessage(value);
      }
      msgCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * Checkpoint (cursor/watermark/group frontier)
     * </pre>
     *
     * <code>.datapower.noesis.v1.StateMsg state = 3 [json_name = "state"];</code>
     */
    public Builder setState(
        datapower.noesis.v1.StateMsg.Builder builderForValue) {
      if (stateBuilder_ == null) {
        msg_ = builderForValue.build();
        onChanged();
      } else {
        stateBuilder_.setMessage(builderForValue.build());
      }
      msgCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * Checkpoint (cursor/watermark/group frontier)
     * </pre>
     *
     * <code>.datapower.noesis.v1.StateMsg state = 3 [json_name = "state"];</code>
     */
    public Builder mergeState(datapower.noesis.v1.StateMsg value) {
      if (stateBuilder_ == null) {
        if (msgCase_ == 3 &&
            msg_ != datapower.noesis.v1.StateMsg.getDefaultInstance()) {
          msg_ = datapower.noesis.v1.StateMsg.newBuilder((datapower.noesis.v1.StateMsg) msg_)
              .mergeFrom(value).buildPartial();
        } else {
          msg_ = value;
        }
        onChanged();
      } else {
        if (msgCase_ == 3) {
          stateBuilder_.mergeFrom(value);
        } else {
          stateBuilder_.setMessage(value);
        }
      }
      msgCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * Checkpoint (cursor/watermark/group frontier)
     * </pre>
     *
     * <code>.datapower.noesis.v1.StateMsg state = 3 [json_name = "state"];</code>
     */
    public Builder clearState() {
      if (stateBuilder_ == null) {
        if (msgCase_ == 3) {
          msgCase_ = 0;
          msg_ = null;
          onChanged();
        }
      } else {
        if (msgCase_ == 3) {
          msgCase_ = 0;
          msg_ = null;
        }
        stateBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Checkpoint (cursor/watermark/group frontier)
     * </pre>
     *
     * <code>.datapower.noesis.v1.StateMsg state = 3 [json_name = "state"];</code>
     */
    public datapower.noesis.v1.StateMsg.Builder getStateBuilder() {
      return getStateFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Checkpoint (cursor/watermark/group frontier)
     * </pre>
     *
     * <code>.datapower.noesis.v1.StateMsg state = 3 [json_name = "state"];</code>
     */
    @java.lang.Override
    public datapower.noesis.v1.StateMsgOrBuilder getStateOrBuilder() {
      if ((msgCase_ == 3) && (stateBuilder_ != null)) {
        return stateBuilder_.getMessageOrBuilder();
      } else {
        if (msgCase_ == 3) {
          return (datapower.noesis.v1.StateMsg) msg_;
        }
        return datapower.noesis.v1.StateMsg.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Checkpoint (cursor/watermark/group frontier)
     * </pre>
     *
     * <code>.datapower.noesis.v1.StateMsg state = 3 [json_name = "state"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.StateMsg, datapower.noesis.v1.StateMsg.Builder, datapower.noesis.v1.StateMsgOrBuilder> 
        getStateFieldBuilder() {
      if (stateBuilder_ == null) {
        if (!(msgCase_ == 3)) {
          msg_ = datapower.noesis.v1.StateMsg.getDefaultInstance();
        }
        stateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            datapower.noesis.v1.StateMsg, datapower.noesis.v1.StateMsg.Builder, datapower.noesis.v1.StateMsgOrBuilder>(
                (datapower.noesis.v1.StateMsg) msg_,
                getParentForChildren(),
                isClean());
        msg_ = null;
      }
      msgCase_ = 3;
      onChanged();
      return stateBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.LogMsg, datapower.noesis.v1.LogMsg.Builder, datapower.noesis.v1.LogMsgOrBuilder> logBuilder_;
    /**
     * <pre>
     * Structured logs
     * </pre>
     *
     * <code>.datapower.noesis.v1.LogMsg log = 4 [json_name = "log"];</code>
     * @return Whether the log field is set.
     */
    @java.lang.Override
    public boolean hasLog() {
      return msgCase_ == 4;
    }
    /**
     * <pre>
     * Structured logs
     * </pre>
     *
     * <code>.datapower.noesis.v1.LogMsg log = 4 [json_name = "log"];</code>
     * @return The log.
     */
    @java.lang.Override
    public datapower.noesis.v1.LogMsg getLog() {
      if (logBuilder_ == null) {
        if (msgCase_ == 4) {
          return (datapower.noesis.v1.LogMsg) msg_;
        }
        return datapower.noesis.v1.LogMsg.getDefaultInstance();
      } else {
        if (msgCase_ == 4) {
          return logBuilder_.getMessage();
        }
        return datapower.noesis.v1.LogMsg.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Structured logs
     * </pre>
     *
     * <code>.datapower.noesis.v1.LogMsg log = 4 [json_name = "log"];</code>
     */
    public Builder setLog(datapower.noesis.v1.LogMsg value) {
      if (logBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        msg_ = value;
        onChanged();
      } else {
        logBuilder_.setMessage(value);
      }
      msgCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * Structured logs
     * </pre>
     *
     * <code>.datapower.noesis.v1.LogMsg log = 4 [json_name = "log"];</code>
     */
    public Builder setLog(
        datapower.noesis.v1.LogMsg.Builder builderForValue) {
      if (logBuilder_ == null) {
        msg_ = builderForValue.build();
        onChanged();
      } else {
        logBuilder_.setMessage(builderForValue.build());
      }
      msgCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * Structured logs
     * </pre>
     *
     * <code>.datapower.noesis.v1.LogMsg log = 4 [json_name = "log"];</code>
     */
    public Builder mergeLog(datapower.noesis.v1.LogMsg value) {
      if (logBuilder_ == null) {
        if (msgCase_ == 4 &&
            msg_ != datapower.noesis.v1.LogMsg.getDefaultInstance()) {
          msg_ = datapower.noesis.v1.LogMsg.newBuilder((datapower.noesis.v1.LogMsg) msg_)
              .mergeFrom(value).buildPartial();
        } else {
          msg_ = value;
        }
        onChanged();
      } else {
        if (msgCase_ == 4) {
          logBuilder_.mergeFrom(value);
        } else {
          logBuilder_.setMessage(value);
        }
      }
      msgCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * Structured logs
     * </pre>
     *
     * <code>.datapower.noesis.v1.LogMsg log = 4 [json_name = "log"];</code>
     */
    public Builder clearLog() {
      if (logBuilder_ == null) {
        if (msgCase_ == 4) {
          msgCase_ = 0;
          msg_ = null;
          onChanged();
        }
      } else {
        if (msgCase_ == 4) {
          msgCase_ = 0;
          msg_ = null;
        }
        logBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Structured logs
     * </pre>
     *
     * <code>.datapower.noesis.v1.LogMsg log = 4 [json_name = "log"];</code>
     */
    public datapower.noesis.v1.LogMsg.Builder getLogBuilder() {
      return getLogFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Structured logs
     * </pre>
     *
     * <code>.datapower.noesis.v1.LogMsg log = 4 [json_name = "log"];</code>
     */
    @java.lang.Override
    public datapower.noesis.v1.LogMsgOrBuilder getLogOrBuilder() {
      if ((msgCase_ == 4) && (logBuilder_ != null)) {
        return logBuilder_.getMessageOrBuilder();
      } else {
        if (msgCase_ == 4) {
          return (datapower.noesis.v1.LogMsg) msg_;
        }
        return datapower.noesis.v1.LogMsg.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Structured logs
     * </pre>
     *
     * <code>.datapower.noesis.v1.LogMsg log = 4 [json_name = "log"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.LogMsg, datapower.noesis.v1.LogMsg.Builder, datapower.noesis.v1.LogMsgOrBuilder> 
        getLogFieldBuilder() {
      if (logBuilder_ == null) {
        if (!(msgCase_ == 4)) {
          msg_ = datapower.noesis.v1.LogMsg.getDefaultInstance();
        }
        logBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            datapower.noesis.v1.LogMsg, datapower.noesis.v1.LogMsg.Builder, datapower.noesis.v1.LogMsgOrBuilder>(
                (datapower.noesis.v1.LogMsg) msg_,
                getParentForChildren(),
                isClean());
        msg_ = null;
      }
      msgCase_ = 4;
      onChanged();
      return logBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.MetricMsg, datapower.noesis.v1.MetricMsg.Builder, datapower.noesis.v1.MetricMsgOrBuilder> metricBuilder_;
    /**
     * <pre>
     * Simple metrics
     * </pre>
     *
     * <code>.datapower.noesis.v1.MetricMsg metric = 5 [json_name = "metric"];</code>
     * @return Whether the metric field is set.
     */
    @java.lang.Override
    public boolean hasMetric() {
      return msgCase_ == 5;
    }
    /**
     * <pre>
     * Simple metrics
     * </pre>
     *
     * <code>.datapower.noesis.v1.MetricMsg metric = 5 [json_name = "metric"];</code>
     * @return The metric.
     */
    @java.lang.Override
    public datapower.noesis.v1.MetricMsg getMetric() {
      if (metricBuilder_ == null) {
        if (msgCase_ == 5) {
          return (datapower.noesis.v1.MetricMsg) msg_;
        }
        return datapower.noesis.v1.MetricMsg.getDefaultInstance();
      } else {
        if (msgCase_ == 5) {
          return metricBuilder_.getMessage();
        }
        return datapower.noesis.v1.MetricMsg.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Simple metrics
     * </pre>
     *
     * <code>.datapower.noesis.v1.MetricMsg metric = 5 [json_name = "metric"];</code>
     */
    public Builder setMetric(datapower.noesis.v1.MetricMsg value) {
      if (metricBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        msg_ = value;
        onChanged();
      } else {
        metricBuilder_.setMessage(value);
      }
      msgCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * Simple metrics
     * </pre>
     *
     * <code>.datapower.noesis.v1.MetricMsg metric = 5 [json_name = "metric"];</code>
     */
    public Builder setMetric(
        datapower.noesis.v1.MetricMsg.Builder builderForValue) {
      if (metricBuilder_ == null) {
        msg_ = builderForValue.build();
        onChanged();
      } else {
        metricBuilder_.setMessage(builderForValue.build());
      }
      msgCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * Simple metrics
     * </pre>
     *
     * <code>.datapower.noesis.v1.MetricMsg metric = 5 [json_name = "metric"];</code>
     */
    public Builder mergeMetric(datapower.noesis.v1.MetricMsg value) {
      if (metricBuilder_ == null) {
        if (msgCase_ == 5 &&
            msg_ != datapower.noesis.v1.MetricMsg.getDefaultInstance()) {
          msg_ = datapower.noesis.v1.MetricMsg.newBuilder((datapower.noesis.v1.MetricMsg) msg_)
              .mergeFrom(value).buildPartial();
        } else {
          msg_ = value;
        }
        onChanged();
      } else {
        if (msgCase_ == 5) {
          metricBuilder_.mergeFrom(value);
        } else {
          metricBuilder_.setMessage(value);
        }
      }
      msgCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * Simple metrics
     * </pre>
     *
     * <code>.datapower.noesis.v1.MetricMsg metric = 5 [json_name = "metric"];</code>
     */
    public Builder clearMetric() {
      if (metricBuilder_ == null) {
        if (msgCase_ == 5) {
          msgCase_ = 0;
          msg_ = null;
          onChanged();
        }
      } else {
        if (msgCase_ == 5) {
          msgCase_ = 0;
          msg_ = null;
        }
        metricBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Simple metrics
     * </pre>
     *
     * <code>.datapower.noesis.v1.MetricMsg metric = 5 [json_name = "metric"];</code>
     */
    public datapower.noesis.v1.MetricMsg.Builder getMetricBuilder() {
      return getMetricFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Simple metrics
     * </pre>
     *
     * <code>.datapower.noesis.v1.MetricMsg metric = 5 [json_name = "metric"];</code>
     */
    @java.lang.Override
    public datapower.noesis.v1.MetricMsgOrBuilder getMetricOrBuilder() {
      if ((msgCase_ == 5) && (metricBuilder_ != null)) {
        return metricBuilder_.getMessageOrBuilder();
      } else {
        if (msgCase_ == 5) {
          return (datapower.noesis.v1.MetricMsg) msg_;
        }
        return datapower.noesis.v1.MetricMsg.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Simple metrics
     * </pre>
     *
     * <code>.datapower.noesis.v1.MetricMsg metric = 5 [json_name = "metric"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.MetricMsg, datapower.noesis.v1.MetricMsg.Builder, datapower.noesis.v1.MetricMsgOrBuilder> 
        getMetricFieldBuilder() {
      if (metricBuilder_ == null) {
        if (!(msgCase_ == 5)) {
          msg_ = datapower.noesis.v1.MetricMsg.getDefaultInstance();
        }
        metricBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            datapower.noesis.v1.MetricMsg, datapower.noesis.v1.MetricMsg.Builder, datapower.noesis.v1.MetricMsgOrBuilder>(
                (datapower.noesis.v1.MetricMsg) msg_,
                getParentForChildren(),
                isClean());
        msg_ = null;
      }
      msgCase_ = 5;
      onChanged();
      return metricBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:datapower.noesis.v1.ReadMessage)
  }

  // @@protoc_insertion_point(class_scope:datapower.noesis.v1.ReadMessage)
  private static final datapower.noesis.v1.ReadMessage DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new datapower.noesis.v1.ReadMessage();
  }

  public static datapower.noesis.v1.ReadMessage getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ReadMessage>
      PARSER = new com.google.protobuf.AbstractParser<ReadMessage>() {
    @java.lang.Override
    public ReadMessage parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ReadMessage> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ReadMessage> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public datapower.noesis.v1.ReadMessage getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

