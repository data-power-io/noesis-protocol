// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datapower/noesis/v1/patch_events.proto

package datapower.noesis.v1;

public interface TransformEventOrBuilder extends
    // @@protoc_insertion_point(interface_extends:datapower.noesis.v1.TransformEvent)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Event type discriminator
   * </pre>
   *
   * <code>.datapower.noesis.v1.EventType event_type = 1 [json_name = "eventType"];</code>
   * @return The enum numeric value on the wire for eventType.
   */
  int getEventTypeValue();
  /**
   * <pre>
   * Event type discriminator
   * </pre>
   *
   * <code>.datapower.noesis.v1.EventType event_type = 1 [json_name = "eventType"];</code>
   * @return The eventType.
   */
  datapower.noesis.v1.EventType getEventType();

  /**
   * <pre>
   * JSON-encoded payload (either AttributePatch or FullState)
   * </pre>
   *
   * <code>string payload = 2 [json_name = "payload"];</code>
   * @return The payload.
   */
  java.lang.String getPayload();
  /**
   * <pre>
   * JSON-encoded payload (either AttributePatch or FullState)
   * </pre>
   *
   * <code>string payload = 2 [json_name = "payload"];</code>
   * @return The bytes for payload.
   */
  com.google.protobuf.ByteString
      getPayloadBytes();

  /**
   * <pre>
   * Event metadata
   * </pre>
   *
   * <code>.datapower.noesis.v1.EventMetadata metadata = 3 [json_name = "metadata"];</code>
   * @return Whether the metadata field is set.
   */
  boolean hasMetadata();
  /**
   * <pre>
   * Event metadata
   * </pre>
   *
   * <code>.datapower.noesis.v1.EventMetadata metadata = 3 [json_name = "metadata"];</code>
   * @return The metadata.
   */
  datapower.noesis.v1.EventMetadata getMetadata();
  /**
   * <pre>
   * Event metadata
   * </pre>
   *
   * <code>.datapower.noesis.v1.EventMetadata metadata = 3 [json_name = "metadata"];</code>
   */
  datapower.noesis.v1.EventMetadataOrBuilder getMetadataOrBuilder();

  /**
   * <pre>
   * Optional: Schema version for payload
   * </pre>
   *
   * <code>string schema_version = 4 [json_name = "schemaVersion"];</code>
   * @return The schemaVersion.
   */
  java.lang.String getSchemaVersion();
  /**
   * <pre>
   * Optional: Schema version for payload
   * </pre>
   *
   * <code>string schema_version = 4 [json_name = "schemaVersion"];</code>
   * @return The bytes for schemaVersion.
   */
  com.google.protobuf.ByteString
      getSchemaVersionBytes();
}
