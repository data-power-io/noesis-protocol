// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datapower/noesis/v1/connector.proto

package datapower.noesis.v1;

/**
 * Protobuf type {@code datapower.noesis.v1.SubgraphRead}
 */
public final class SubgraphRead extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:datapower.noesis.v1.SubgraphRead)
    SubgraphReadOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SubgraphRead.newBuilder() to construct.
  private SubgraphRead(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SubgraphRead() {
    heads_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new SubgraphRead();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_SubgraphRead_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_SubgraphRead_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            datapower.noesis.v1.SubgraphRead.class, datapower.noesis.v1.SubgraphRead.Builder.class);
  }

  public static final int HEADS_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private java.util.List<datapower.noesis.v1.Head> heads_;
  /**
   * <pre>
   * Starting nodes (entity/key)
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.Head heads = 1 [json_name = "heads"];</code>
   */
  @java.lang.Override
  public java.util.List<datapower.noesis.v1.Head> getHeadsList() {
    return heads_;
  }
  /**
   * <pre>
   * Starting nodes (entity/key)
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.Head heads = 1 [json_name = "heads"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends datapower.noesis.v1.HeadOrBuilder> 
      getHeadsOrBuilderList() {
    return heads_;
  }
  /**
   * <pre>
   * Starting nodes (entity/key)
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.Head heads = 1 [json_name = "heads"];</code>
   */
  @java.lang.Override
  public int getHeadsCount() {
    return heads_.size();
  }
  /**
   * <pre>
   * Starting nodes (entity/key)
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.Head heads = 1 [json_name = "heads"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.Head getHeads(int index) {
    return heads_.get(index);
  }
  /**
   * <pre>
   * Starting nodes (entity/key)
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.Head heads = 1 [json_name = "heads"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.HeadOrBuilder getHeadsOrBuilder(
      int index) {
    return heads_.get(index);
  }

  public static final int TRAVERSAL_FIELD_NUMBER = 2;
  private datapower.noesis.v1.Traversal traversal_;
  /**
   * <pre>
   * Traversal policy
   * </pre>
   *
   * <code>.datapower.noesis.v1.Traversal traversal = 2 [json_name = "traversal"];</code>
   * @return Whether the traversal field is set.
   */
  @java.lang.Override
  public boolean hasTraversal() {
    return traversal_ != null;
  }
  /**
   * <pre>
   * Traversal policy
   * </pre>
   *
   * <code>.datapower.noesis.v1.Traversal traversal = 2 [json_name = "traversal"];</code>
   * @return The traversal.
   */
  @java.lang.Override
  public datapower.noesis.v1.Traversal getTraversal() {
    return traversal_ == null ? datapower.noesis.v1.Traversal.getDefaultInstance() : traversal_;
  }
  /**
   * <pre>
   * Traversal policy
   * </pre>
   *
   * <code>.datapower.noesis.v1.Traversal traversal = 2 [json_name = "traversal"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.TraversalOrBuilder getTraversalOrBuilder() {
    return traversal_ == null ? datapower.noesis.v1.Traversal.getDefaultInstance() : traversal_;
  }

  public static final int SNAPSHOT_FIELD_NUMBER = 3;
  private datapower.noesis.v1.SnapshotOptions snapshot_;
  /**
   * <pre>
   * Consistent view for nodes+links
   * </pre>
   *
   * <code>.datapower.noesis.v1.SnapshotOptions snapshot = 3 [json_name = "snapshot"];</code>
   * @return Whether the snapshot field is set.
   */
  @java.lang.Override
  public boolean hasSnapshot() {
    return snapshot_ != null;
  }
  /**
   * <pre>
   * Consistent view for nodes+links
   * </pre>
   *
   * <code>.datapower.noesis.v1.SnapshotOptions snapshot = 3 [json_name = "snapshot"];</code>
   * @return The snapshot.
   */
  @java.lang.Override
  public datapower.noesis.v1.SnapshotOptions getSnapshot() {
    return snapshot_ == null ? datapower.noesis.v1.SnapshotOptions.getDefaultInstance() : snapshot_;
  }
  /**
   * <pre>
   * Consistent view for nodes+links
   * </pre>
   *
   * <code>.datapower.noesis.v1.SnapshotOptions snapshot = 3 [json_name = "snapshot"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.SnapshotOptionsOrBuilder getSnapshotOrBuilder() {
    return snapshot_ == null ? datapower.noesis.v1.SnapshotOptions.getDefaultInstance() : snapshot_;
  }

  public static final int RESUME_FROM_FIELD_NUMBER = 4;
  private datapower.noesis.v1.Cursor resumeFrom_;
  /**
   * <pre>
   * Opaque traversal frontier for resume
   * </pre>
   *
   * <code>.datapower.noesis.v1.Cursor resume_from = 4 [json_name = "resumeFrom"];</code>
   * @return Whether the resumeFrom field is set.
   */
  @java.lang.Override
  public boolean hasResumeFrom() {
    return resumeFrom_ != null;
  }
  /**
   * <pre>
   * Opaque traversal frontier for resume
   * </pre>
   *
   * <code>.datapower.noesis.v1.Cursor resume_from = 4 [json_name = "resumeFrom"];</code>
   * @return The resumeFrom.
   */
  @java.lang.Override
  public datapower.noesis.v1.Cursor getResumeFrom() {
    return resumeFrom_ == null ? datapower.noesis.v1.Cursor.getDefaultInstance() : resumeFrom_;
  }
  /**
   * <pre>
   * Opaque traversal frontier for resume
   * </pre>
   *
   * <code>.datapower.noesis.v1.Cursor resume_from = 4 [json_name = "resumeFrom"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.CursorOrBuilder getResumeFromOrBuilder() {
    return resumeFrom_ == null ? datapower.noesis.v1.Cursor.getDefaultInstance() : resumeFrom_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < heads_.size(); i++) {
      output.writeMessage(1, heads_.get(i));
    }
    if (traversal_ != null) {
      output.writeMessage(2, getTraversal());
    }
    if (snapshot_ != null) {
      output.writeMessage(3, getSnapshot());
    }
    if (resumeFrom_ != null) {
      output.writeMessage(4, getResumeFrom());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < heads_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, heads_.get(i));
    }
    if (traversal_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getTraversal());
    }
    if (snapshot_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getSnapshot());
    }
    if (resumeFrom_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getResumeFrom());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof datapower.noesis.v1.SubgraphRead)) {
      return super.equals(obj);
    }
    datapower.noesis.v1.SubgraphRead other = (datapower.noesis.v1.SubgraphRead) obj;

    if (!getHeadsList()
        .equals(other.getHeadsList())) return false;
    if (hasTraversal() != other.hasTraversal()) return false;
    if (hasTraversal()) {
      if (!getTraversal()
          .equals(other.getTraversal())) return false;
    }
    if (hasSnapshot() != other.hasSnapshot()) return false;
    if (hasSnapshot()) {
      if (!getSnapshot()
          .equals(other.getSnapshot())) return false;
    }
    if (hasResumeFrom() != other.hasResumeFrom()) return false;
    if (hasResumeFrom()) {
      if (!getResumeFrom()
          .equals(other.getResumeFrom())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getHeadsCount() > 0) {
      hash = (37 * hash) + HEADS_FIELD_NUMBER;
      hash = (53 * hash) + getHeadsList().hashCode();
    }
    if (hasTraversal()) {
      hash = (37 * hash) + TRAVERSAL_FIELD_NUMBER;
      hash = (53 * hash) + getTraversal().hashCode();
    }
    if (hasSnapshot()) {
      hash = (37 * hash) + SNAPSHOT_FIELD_NUMBER;
      hash = (53 * hash) + getSnapshot().hashCode();
    }
    if (hasResumeFrom()) {
      hash = (37 * hash) + RESUME_FROM_FIELD_NUMBER;
      hash = (53 * hash) + getResumeFrom().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static datapower.noesis.v1.SubgraphRead parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.SubgraphRead parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.SubgraphRead parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.SubgraphRead parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.SubgraphRead parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.SubgraphRead parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.SubgraphRead parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.SubgraphRead parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static datapower.noesis.v1.SubgraphRead parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static datapower.noesis.v1.SubgraphRead parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static datapower.noesis.v1.SubgraphRead parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.SubgraphRead parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(datapower.noesis.v1.SubgraphRead prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code datapower.noesis.v1.SubgraphRead}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:datapower.noesis.v1.SubgraphRead)
      datapower.noesis.v1.SubgraphReadOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_SubgraphRead_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_SubgraphRead_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              datapower.noesis.v1.SubgraphRead.class, datapower.noesis.v1.SubgraphRead.Builder.class);
    }

    // Construct using datapower.noesis.v1.SubgraphRead.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (headsBuilder_ == null) {
        heads_ = java.util.Collections.emptyList();
      } else {
        heads_ = null;
        headsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      traversal_ = null;
      if (traversalBuilder_ != null) {
        traversalBuilder_.dispose();
        traversalBuilder_ = null;
      }
      snapshot_ = null;
      if (snapshotBuilder_ != null) {
        snapshotBuilder_.dispose();
        snapshotBuilder_ = null;
      }
      resumeFrom_ = null;
      if (resumeFromBuilder_ != null) {
        resumeFromBuilder_.dispose();
        resumeFromBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_SubgraphRead_descriptor;
    }

    @java.lang.Override
    public datapower.noesis.v1.SubgraphRead getDefaultInstanceForType() {
      return datapower.noesis.v1.SubgraphRead.getDefaultInstance();
    }

    @java.lang.Override
    public datapower.noesis.v1.SubgraphRead build() {
      datapower.noesis.v1.SubgraphRead result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public datapower.noesis.v1.SubgraphRead buildPartial() {
      datapower.noesis.v1.SubgraphRead result = new datapower.noesis.v1.SubgraphRead(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(datapower.noesis.v1.SubgraphRead result) {
      if (headsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          heads_ = java.util.Collections.unmodifiableList(heads_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.heads_ = heads_;
      } else {
        result.heads_ = headsBuilder_.build();
      }
    }

    private void buildPartial0(datapower.noesis.v1.SubgraphRead result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.traversal_ = traversalBuilder_ == null
            ? traversal_
            : traversalBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.snapshot_ = snapshotBuilder_ == null
            ? snapshot_
            : snapshotBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.resumeFrom_ = resumeFromBuilder_ == null
            ? resumeFrom_
            : resumeFromBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof datapower.noesis.v1.SubgraphRead) {
        return mergeFrom((datapower.noesis.v1.SubgraphRead)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(datapower.noesis.v1.SubgraphRead other) {
      if (other == datapower.noesis.v1.SubgraphRead.getDefaultInstance()) return this;
      if (headsBuilder_ == null) {
        if (!other.heads_.isEmpty()) {
          if (heads_.isEmpty()) {
            heads_ = other.heads_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureHeadsIsMutable();
            heads_.addAll(other.heads_);
          }
          onChanged();
        }
      } else {
        if (!other.heads_.isEmpty()) {
          if (headsBuilder_.isEmpty()) {
            headsBuilder_.dispose();
            headsBuilder_ = null;
            heads_ = other.heads_;
            bitField0_ = (bitField0_ & ~0x00000001);
            headsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getHeadsFieldBuilder() : null;
          } else {
            headsBuilder_.addAllMessages(other.heads_);
          }
        }
      }
      if (other.hasTraversal()) {
        mergeTraversal(other.getTraversal());
      }
      if (other.hasSnapshot()) {
        mergeSnapshot(other.getSnapshot());
      }
      if (other.hasResumeFrom()) {
        mergeResumeFrom(other.getResumeFrom());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              datapower.noesis.v1.Head m =
                  input.readMessage(
                      datapower.noesis.v1.Head.parser(),
                      extensionRegistry);
              if (headsBuilder_ == null) {
                ensureHeadsIsMutable();
                heads_.add(m);
              } else {
                headsBuilder_.addMessage(m);
              }
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getTraversalFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getSnapshotFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getResumeFromFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.util.List<datapower.noesis.v1.Head> heads_ =
      java.util.Collections.emptyList();
    private void ensureHeadsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        heads_ = new java.util.ArrayList<datapower.noesis.v1.Head>(heads_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        datapower.noesis.v1.Head, datapower.noesis.v1.Head.Builder, datapower.noesis.v1.HeadOrBuilder> headsBuilder_;

    /**
     * <pre>
     * Starting nodes (entity/key)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.Head heads = 1 [json_name = "heads"];</code>
     */
    public java.util.List<datapower.noesis.v1.Head> getHeadsList() {
      if (headsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(heads_);
      } else {
        return headsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Starting nodes (entity/key)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.Head heads = 1 [json_name = "heads"];</code>
     */
    public int getHeadsCount() {
      if (headsBuilder_ == null) {
        return heads_.size();
      } else {
        return headsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Starting nodes (entity/key)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.Head heads = 1 [json_name = "heads"];</code>
     */
    public datapower.noesis.v1.Head getHeads(int index) {
      if (headsBuilder_ == null) {
        return heads_.get(index);
      } else {
        return headsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Starting nodes (entity/key)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.Head heads = 1 [json_name = "heads"];</code>
     */
    public Builder setHeads(
        int index, datapower.noesis.v1.Head value) {
      if (headsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHeadsIsMutable();
        heads_.set(index, value);
        onChanged();
      } else {
        headsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Starting nodes (entity/key)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.Head heads = 1 [json_name = "heads"];</code>
     */
    public Builder setHeads(
        int index, datapower.noesis.v1.Head.Builder builderForValue) {
      if (headsBuilder_ == null) {
        ensureHeadsIsMutable();
        heads_.set(index, builderForValue.build());
        onChanged();
      } else {
        headsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Starting nodes (entity/key)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.Head heads = 1 [json_name = "heads"];</code>
     */
    public Builder addHeads(datapower.noesis.v1.Head value) {
      if (headsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHeadsIsMutable();
        heads_.add(value);
        onChanged();
      } else {
        headsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Starting nodes (entity/key)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.Head heads = 1 [json_name = "heads"];</code>
     */
    public Builder addHeads(
        int index, datapower.noesis.v1.Head value) {
      if (headsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHeadsIsMutable();
        heads_.add(index, value);
        onChanged();
      } else {
        headsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Starting nodes (entity/key)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.Head heads = 1 [json_name = "heads"];</code>
     */
    public Builder addHeads(
        datapower.noesis.v1.Head.Builder builderForValue) {
      if (headsBuilder_ == null) {
        ensureHeadsIsMutable();
        heads_.add(builderForValue.build());
        onChanged();
      } else {
        headsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Starting nodes (entity/key)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.Head heads = 1 [json_name = "heads"];</code>
     */
    public Builder addHeads(
        int index, datapower.noesis.v1.Head.Builder builderForValue) {
      if (headsBuilder_ == null) {
        ensureHeadsIsMutable();
        heads_.add(index, builderForValue.build());
        onChanged();
      } else {
        headsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Starting nodes (entity/key)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.Head heads = 1 [json_name = "heads"];</code>
     */
    public Builder addAllHeads(
        java.lang.Iterable<? extends datapower.noesis.v1.Head> values) {
      if (headsBuilder_ == null) {
        ensureHeadsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, heads_);
        onChanged();
      } else {
        headsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Starting nodes (entity/key)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.Head heads = 1 [json_name = "heads"];</code>
     */
    public Builder clearHeads() {
      if (headsBuilder_ == null) {
        heads_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        headsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Starting nodes (entity/key)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.Head heads = 1 [json_name = "heads"];</code>
     */
    public Builder removeHeads(int index) {
      if (headsBuilder_ == null) {
        ensureHeadsIsMutable();
        heads_.remove(index);
        onChanged();
      } else {
        headsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Starting nodes (entity/key)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.Head heads = 1 [json_name = "heads"];</code>
     */
    public datapower.noesis.v1.Head.Builder getHeadsBuilder(
        int index) {
      return getHeadsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Starting nodes (entity/key)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.Head heads = 1 [json_name = "heads"];</code>
     */
    public datapower.noesis.v1.HeadOrBuilder getHeadsOrBuilder(
        int index) {
      if (headsBuilder_ == null) {
        return heads_.get(index);  } else {
        return headsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Starting nodes (entity/key)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.Head heads = 1 [json_name = "heads"];</code>
     */
    public java.util.List<? extends datapower.noesis.v1.HeadOrBuilder> 
         getHeadsOrBuilderList() {
      if (headsBuilder_ != null) {
        return headsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(heads_);
      }
    }
    /**
     * <pre>
     * Starting nodes (entity/key)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.Head heads = 1 [json_name = "heads"];</code>
     */
    public datapower.noesis.v1.Head.Builder addHeadsBuilder() {
      return getHeadsFieldBuilder().addBuilder(
          datapower.noesis.v1.Head.getDefaultInstance());
    }
    /**
     * <pre>
     * Starting nodes (entity/key)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.Head heads = 1 [json_name = "heads"];</code>
     */
    public datapower.noesis.v1.Head.Builder addHeadsBuilder(
        int index) {
      return getHeadsFieldBuilder().addBuilder(
          index, datapower.noesis.v1.Head.getDefaultInstance());
    }
    /**
     * <pre>
     * Starting nodes (entity/key)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.Head heads = 1 [json_name = "heads"];</code>
     */
    public java.util.List<datapower.noesis.v1.Head.Builder> 
         getHeadsBuilderList() {
      return getHeadsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        datapower.noesis.v1.Head, datapower.noesis.v1.Head.Builder, datapower.noesis.v1.HeadOrBuilder> 
        getHeadsFieldBuilder() {
      if (headsBuilder_ == null) {
        headsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            datapower.noesis.v1.Head, datapower.noesis.v1.Head.Builder, datapower.noesis.v1.HeadOrBuilder>(
                heads_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        heads_ = null;
      }
      return headsBuilder_;
    }

    private datapower.noesis.v1.Traversal traversal_;
    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.Traversal, datapower.noesis.v1.Traversal.Builder, datapower.noesis.v1.TraversalOrBuilder> traversalBuilder_;
    /**
     * <pre>
     * Traversal policy
     * </pre>
     *
     * <code>.datapower.noesis.v1.Traversal traversal = 2 [json_name = "traversal"];</code>
     * @return Whether the traversal field is set.
     */
    public boolean hasTraversal() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Traversal policy
     * </pre>
     *
     * <code>.datapower.noesis.v1.Traversal traversal = 2 [json_name = "traversal"];</code>
     * @return The traversal.
     */
    public datapower.noesis.v1.Traversal getTraversal() {
      if (traversalBuilder_ == null) {
        return traversal_ == null ? datapower.noesis.v1.Traversal.getDefaultInstance() : traversal_;
      } else {
        return traversalBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Traversal policy
     * </pre>
     *
     * <code>.datapower.noesis.v1.Traversal traversal = 2 [json_name = "traversal"];</code>
     */
    public Builder setTraversal(datapower.noesis.v1.Traversal value) {
      if (traversalBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        traversal_ = value;
      } else {
        traversalBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Traversal policy
     * </pre>
     *
     * <code>.datapower.noesis.v1.Traversal traversal = 2 [json_name = "traversal"];</code>
     */
    public Builder setTraversal(
        datapower.noesis.v1.Traversal.Builder builderForValue) {
      if (traversalBuilder_ == null) {
        traversal_ = builderForValue.build();
      } else {
        traversalBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Traversal policy
     * </pre>
     *
     * <code>.datapower.noesis.v1.Traversal traversal = 2 [json_name = "traversal"];</code>
     */
    public Builder mergeTraversal(datapower.noesis.v1.Traversal value) {
      if (traversalBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
          traversal_ != null &&
          traversal_ != datapower.noesis.v1.Traversal.getDefaultInstance()) {
          getTraversalBuilder().mergeFrom(value);
        } else {
          traversal_ = value;
        }
      } else {
        traversalBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Traversal policy
     * </pre>
     *
     * <code>.datapower.noesis.v1.Traversal traversal = 2 [json_name = "traversal"];</code>
     */
    public Builder clearTraversal() {
      bitField0_ = (bitField0_ & ~0x00000002);
      traversal_ = null;
      if (traversalBuilder_ != null) {
        traversalBuilder_.dispose();
        traversalBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Traversal policy
     * </pre>
     *
     * <code>.datapower.noesis.v1.Traversal traversal = 2 [json_name = "traversal"];</code>
     */
    public datapower.noesis.v1.Traversal.Builder getTraversalBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getTraversalFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Traversal policy
     * </pre>
     *
     * <code>.datapower.noesis.v1.Traversal traversal = 2 [json_name = "traversal"];</code>
     */
    public datapower.noesis.v1.TraversalOrBuilder getTraversalOrBuilder() {
      if (traversalBuilder_ != null) {
        return traversalBuilder_.getMessageOrBuilder();
      } else {
        return traversal_ == null ?
            datapower.noesis.v1.Traversal.getDefaultInstance() : traversal_;
      }
    }
    /**
     * <pre>
     * Traversal policy
     * </pre>
     *
     * <code>.datapower.noesis.v1.Traversal traversal = 2 [json_name = "traversal"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.Traversal, datapower.noesis.v1.Traversal.Builder, datapower.noesis.v1.TraversalOrBuilder> 
        getTraversalFieldBuilder() {
      if (traversalBuilder_ == null) {
        traversalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            datapower.noesis.v1.Traversal, datapower.noesis.v1.Traversal.Builder, datapower.noesis.v1.TraversalOrBuilder>(
                getTraversal(),
                getParentForChildren(),
                isClean());
        traversal_ = null;
      }
      return traversalBuilder_;
    }

    private datapower.noesis.v1.SnapshotOptions snapshot_;
    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.SnapshotOptions, datapower.noesis.v1.SnapshotOptions.Builder, datapower.noesis.v1.SnapshotOptionsOrBuilder> snapshotBuilder_;
    /**
     * <pre>
     * Consistent view for nodes+links
     * </pre>
     *
     * <code>.datapower.noesis.v1.SnapshotOptions snapshot = 3 [json_name = "snapshot"];</code>
     * @return Whether the snapshot field is set.
     */
    public boolean hasSnapshot() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Consistent view for nodes+links
     * </pre>
     *
     * <code>.datapower.noesis.v1.SnapshotOptions snapshot = 3 [json_name = "snapshot"];</code>
     * @return The snapshot.
     */
    public datapower.noesis.v1.SnapshotOptions getSnapshot() {
      if (snapshotBuilder_ == null) {
        return snapshot_ == null ? datapower.noesis.v1.SnapshotOptions.getDefaultInstance() : snapshot_;
      } else {
        return snapshotBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Consistent view for nodes+links
     * </pre>
     *
     * <code>.datapower.noesis.v1.SnapshotOptions snapshot = 3 [json_name = "snapshot"];</code>
     */
    public Builder setSnapshot(datapower.noesis.v1.SnapshotOptions value) {
      if (snapshotBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        snapshot_ = value;
      } else {
        snapshotBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Consistent view for nodes+links
     * </pre>
     *
     * <code>.datapower.noesis.v1.SnapshotOptions snapshot = 3 [json_name = "snapshot"];</code>
     */
    public Builder setSnapshot(
        datapower.noesis.v1.SnapshotOptions.Builder builderForValue) {
      if (snapshotBuilder_ == null) {
        snapshot_ = builderForValue.build();
      } else {
        snapshotBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Consistent view for nodes+links
     * </pre>
     *
     * <code>.datapower.noesis.v1.SnapshotOptions snapshot = 3 [json_name = "snapshot"];</code>
     */
    public Builder mergeSnapshot(datapower.noesis.v1.SnapshotOptions value) {
      if (snapshotBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          snapshot_ != null &&
          snapshot_ != datapower.noesis.v1.SnapshotOptions.getDefaultInstance()) {
          getSnapshotBuilder().mergeFrom(value);
        } else {
          snapshot_ = value;
        }
      } else {
        snapshotBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Consistent view for nodes+links
     * </pre>
     *
     * <code>.datapower.noesis.v1.SnapshotOptions snapshot = 3 [json_name = "snapshot"];</code>
     */
    public Builder clearSnapshot() {
      bitField0_ = (bitField0_ & ~0x00000004);
      snapshot_ = null;
      if (snapshotBuilder_ != null) {
        snapshotBuilder_.dispose();
        snapshotBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Consistent view for nodes+links
     * </pre>
     *
     * <code>.datapower.noesis.v1.SnapshotOptions snapshot = 3 [json_name = "snapshot"];</code>
     */
    public datapower.noesis.v1.SnapshotOptions.Builder getSnapshotBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getSnapshotFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Consistent view for nodes+links
     * </pre>
     *
     * <code>.datapower.noesis.v1.SnapshotOptions snapshot = 3 [json_name = "snapshot"];</code>
     */
    public datapower.noesis.v1.SnapshotOptionsOrBuilder getSnapshotOrBuilder() {
      if (snapshotBuilder_ != null) {
        return snapshotBuilder_.getMessageOrBuilder();
      } else {
        return snapshot_ == null ?
            datapower.noesis.v1.SnapshotOptions.getDefaultInstance() : snapshot_;
      }
    }
    /**
     * <pre>
     * Consistent view for nodes+links
     * </pre>
     *
     * <code>.datapower.noesis.v1.SnapshotOptions snapshot = 3 [json_name = "snapshot"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.SnapshotOptions, datapower.noesis.v1.SnapshotOptions.Builder, datapower.noesis.v1.SnapshotOptionsOrBuilder> 
        getSnapshotFieldBuilder() {
      if (snapshotBuilder_ == null) {
        snapshotBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            datapower.noesis.v1.SnapshotOptions, datapower.noesis.v1.SnapshotOptions.Builder, datapower.noesis.v1.SnapshotOptionsOrBuilder>(
                getSnapshot(),
                getParentForChildren(),
                isClean());
        snapshot_ = null;
      }
      return snapshotBuilder_;
    }

    private datapower.noesis.v1.Cursor resumeFrom_;
    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.Cursor, datapower.noesis.v1.Cursor.Builder, datapower.noesis.v1.CursorOrBuilder> resumeFromBuilder_;
    /**
     * <pre>
     * Opaque traversal frontier for resume
     * </pre>
     *
     * <code>.datapower.noesis.v1.Cursor resume_from = 4 [json_name = "resumeFrom"];</code>
     * @return Whether the resumeFrom field is set.
     */
    public boolean hasResumeFrom() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Opaque traversal frontier for resume
     * </pre>
     *
     * <code>.datapower.noesis.v1.Cursor resume_from = 4 [json_name = "resumeFrom"];</code>
     * @return The resumeFrom.
     */
    public datapower.noesis.v1.Cursor getResumeFrom() {
      if (resumeFromBuilder_ == null) {
        return resumeFrom_ == null ? datapower.noesis.v1.Cursor.getDefaultInstance() : resumeFrom_;
      } else {
        return resumeFromBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Opaque traversal frontier for resume
     * </pre>
     *
     * <code>.datapower.noesis.v1.Cursor resume_from = 4 [json_name = "resumeFrom"];</code>
     */
    public Builder setResumeFrom(datapower.noesis.v1.Cursor value) {
      if (resumeFromBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        resumeFrom_ = value;
      } else {
        resumeFromBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Opaque traversal frontier for resume
     * </pre>
     *
     * <code>.datapower.noesis.v1.Cursor resume_from = 4 [json_name = "resumeFrom"];</code>
     */
    public Builder setResumeFrom(
        datapower.noesis.v1.Cursor.Builder builderForValue) {
      if (resumeFromBuilder_ == null) {
        resumeFrom_ = builderForValue.build();
      } else {
        resumeFromBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Opaque traversal frontier for resume
     * </pre>
     *
     * <code>.datapower.noesis.v1.Cursor resume_from = 4 [json_name = "resumeFrom"];</code>
     */
    public Builder mergeResumeFrom(datapower.noesis.v1.Cursor value) {
      if (resumeFromBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0) &&
          resumeFrom_ != null &&
          resumeFrom_ != datapower.noesis.v1.Cursor.getDefaultInstance()) {
          getResumeFromBuilder().mergeFrom(value);
        } else {
          resumeFrom_ = value;
        }
      } else {
        resumeFromBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Opaque traversal frontier for resume
     * </pre>
     *
     * <code>.datapower.noesis.v1.Cursor resume_from = 4 [json_name = "resumeFrom"];</code>
     */
    public Builder clearResumeFrom() {
      bitField0_ = (bitField0_ & ~0x00000008);
      resumeFrom_ = null;
      if (resumeFromBuilder_ != null) {
        resumeFromBuilder_.dispose();
        resumeFromBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Opaque traversal frontier for resume
     * </pre>
     *
     * <code>.datapower.noesis.v1.Cursor resume_from = 4 [json_name = "resumeFrom"];</code>
     */
    public datapower.noesis.v1.Cursor.Builder getResumeFromBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getResumeFromFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Opaque traversal frontier for resume
     * </pre>
     *
     * <code>.datapower.noesis.v1.Cursor resume_from = 4 [json_name = "resumeFrom"];</code>
     */
    public datapower.noesis.v1.CursorOrBuilder getResumeFromOrBuilder() {
      if (resumeFromBuilder_ != null) {
        return resumeFromBuilder_.getMessageOrBuilder();
      } else {
        return resumeFrom_ == null ?
            datapower.noesis.v1.Cursor.getDefaultInstance() : resumeFrom_;
      }
    }
    /**
     * <pre>
     * Opaque traversal frontier for resume
     * </pre>
     *
     * <code>.datapower.noesis.v1.Cursor resume_from = 4 [json_name = "resumeFrom"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.Cursor, datapower.noesis.v1.Cursor.Builder, datapower.noesis.v1.CursorOrBuilder> 
        getResumeFromFieldBuilder() {
      if (resumeFromBuilder_ == null) {
        resumeFromBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            datapower.noesis.v1.Cursor, datapower.noesis.v1.Cursor.Builder, datapower.noesis.v1.CursorOrBuilder>(
                getResumeFrom(),
                getParentForChildren(),
                isClean());
        resumeFrom_ = null;
      }
      return resumeFromBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:datapower.noesis.v1.SubgraphRead)
  }

  // @@protoc_insertion_point(class_scope:datapower.noesis.v1.SubgraphRead)
  private static final datapower.noesis.v1.SubgraphRead DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new datapower.noesis.v1.SubgraphRead();
  }

  public static datapower.noesis.v1.SubgraphRead getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SubgraphRead>
      PARSER = new com.google.protobuf.AbstractParser<SubgraphRead>() {
    @java.lang.Override
    public SubgraphRead parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<SubgraphRead> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SubgraphRead> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public datapower.noesis.v1.SubgraphRead getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

