// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datapower/noesis/v1/enrichment_service.proto

package datapower.noesis.v1;

public interface FlinkEnrichmentResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:datapower.noesis.v1.FlinkEnrichmentResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.google.protobuf.Struct enriched_record = 1 [json_name = "enrichedRecord"];</code>
   * @return Whether the enrichedRecord field is set.
   */
  boolean hasEnrichedRecord();
  /**
   * <code>.google.protobuf.Struct enriched_record = 1 [json_name = "enrichedRecord"];</code>
   * @return The enrichedRecord.
   */
  com.google.protobuf.Struct getEnrichedRecord();
  /**
   * <code>.google.protobuf.Struct enriched_record = 1 [json_name = "enrichedRecord"];</code>
   */
  com.google.protobuf.StructOrBuilder getEnrichedRecordOrBuilder();

  /**
   * <code>map&lt;string, string&gt; added_fields = 2 [json_name = "addedFields"];</code>
   */
  int getAddedFieldsCount();
  /**
   * <code>map&lt;string, string&gt; added_fields = 2 [json_name = "addedFields"];</code>
   */
  boolean containsAddedFields(
      java.lang.String key);
  /**
   * Use {@link #getAddedFieldsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getAddedFields();
  /**
   * <code>map&lt;string, string&gt; added_fields = 2 [json_name = "addedFields"];</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getAddedFieldsMap();
  /**
   * <code>map&lt;string, string&gt; added_fields = 2 [json_name = "addedFields"];</code>
   */
  /* nullable */
java.lang.String getAddedFieldsOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <code>map&lt;string, string&gt; added_fields = 2 [json_name = "addedFields"];</code>
   */
  java.lang.String getAddedFieldsOrThrow(
      java.lang.String key);

  /**
   * <code>repeated string errors = 3 [json_name = "errors"];</code>
   * @return A list containing the errors.
   */
  java.util.List<java.lang.String>
      getErrorsList();
  /**
   * <code>repeated string errors = 3 [json_name = "errors"];</code>
   * @return The count of errors.
   */
  int getErrorsCount();
  /**
   * <code>repeated string errors = 3 [json_name = "errors"];</code>
   * @param index The index of the element to return.
   * @return The errors at the given index.
   */
  java.lang.String getErrors(int index);
  /**
   * <code>repeated string errors = 3 [json_name = "errors"];</code>
   * @param index The index of the value to return.
   * @return The bytes of the errors at the given index.
   */
  com.google.protobuf.ByteString
      getErrorsBytes(int index);

  /**
   * <pre>
   * Flink-specific timing
   * </pre>
   *
   * <code>int64 processing_time_ms = 4 [json_name = "processingTimeMs"];</code>
   * @return The processingTimeMs.
   */
  long getProcessingTimeMs();

  /**
   * <pre>
   * Flink task identifier
   * </pre>
   *
   * <code>string flink_task_id = 5 [json_name = "flinkTaskId"];</code>
   * @return The flinkTaskId.
   */
  java.lang.String getFlinkTaskId();
  /**
   * <pre>
   * Flink task identifier
   * </pre>
   *
   * <code>string flink_task_id = 5 [json_name = "flinkTaskId"];</code>
   * @return The bytes for flinkTaskId.
   */
  com.google.protobuf.ByteString
      getFlinkTaskIdBytes();
}
