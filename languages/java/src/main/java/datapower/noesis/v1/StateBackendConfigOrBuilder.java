// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datapower/noesis/v1/execution.proto

package datapower.noesis.v1;

public interface StateBackendConfigOrBuilder extends
    // @@protoc_insertion_point(interface_extends:datapower.noesis.v1.StateBackendConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * State backend type (rocksdb, memory, filesystem)
   * </pre>
   *
   * <code>string type = 1 [json_name = "type"];</code>
   * @return The type.
   */
  java.lang.String getType();
  /**
   * <pre>
   * State backend type (rocksdb, memory, filesystem)
   * </pre>
   *
   * <code>string type = 1 [json_name = "type"];</code>
   * @return The bytes for type.
   */
  com.google.protobuf.ByteString
      getTypeBytes();

  /**
   * <pre>
   * For RocksDB: incremental checkpoints
   * </pre>
   *
   * <code>bool incremental_checkpoints = 2 [json_name = "incrementalCheckpoints"];</code>
   * @return The incrementalCheckpoints.
   */
  boolean getIncrementalCheckpoints();

  /**
   * <pre>
   * Storage path (for persistent backends)
   * </pre>
   *
   * <code>string storage_path = 3 [json_name = "storagePath"];</code>
   * @return The storagePath.
   */
  java.lang.String getStoragePath();
  /**
   * <pre>
   * Storage path (for persistent backends)
   * </pre>
   *
   * <code>string storage_path = 3 [json_name = "storagePath"];</code>
   * @return The bytes for storagePath.
   */
  com.google.protobuf.ByteString
      getStoragePathBytes();
}
