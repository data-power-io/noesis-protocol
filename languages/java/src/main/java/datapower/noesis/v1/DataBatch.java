// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datapower/noesis/v1/sidecar.proto

package datapower.noesis.v1;

/**
 * <pre>
 * A batch of records to write.
 * The connector sends multiple DataBatch messages in a stream.
 * </pre>
 *
 * Protobuf type {@code datapower.noesis.v1.DataBatch}
 */
public final class DataBatch extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:datapower.noesis.v1.DataBatch)
    DataBatchOrBuilder {
private static final long serialVersionUID = 0L;
  // Use DataBatch.newBuilder() to construct.
  private DataBatch(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private DataBatch() {
    sessionId_ = "";
    records_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new DataBatch();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return datapower.noesis.v1.SidecarOuterClass.internal_static_datapower_noesis_v1_DataBatch_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return datapower.noesis.v1.SidecarOuterClass.internal_static_datapower_noesis_v1_DataBatch_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            datapower.noesis.v1.DataBatch.class, datapower.noesis.v1.DataBatch.Builder.class);
  }

  public static final int SESSION_ID_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object sessionId_ = "";
  /**
   * <pre>
   * Must match InitSession
   * </pre>
   *
   * <code>string session_id = 1 [json_name = "sessionId"];</code>
   * @return The sessionId.
   */
  @java.lang.Override
  public java.lang.String getSessionId() {
    java.lang.Object ref = sessionId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      sessionId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Must match InitSession
   * </pre>
   *
   * <code>string session_id = 1 [json_name = "sessionId"];</code>
   * @return The bytes for sessionId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSessionIdBytes() {
    java.lang.Object ref = sessionId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      sessionId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int RECORDS_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<datapower.noesis.v1.RecordMsg> records_;
  /**
   * <pre>
   * Batch of records (reuse RecordMsg from connector.proto)
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.RecordMsg records = 2 [json_name = "records"];</code>
   */
  @java.lang.Override
  public java.util.List<datapower.noesis.v1.RecordMsg> getRecordsList() {
    return records_;
  }
  /**
   * <pre>
   * Batch of records (reuse RecordMsg from connector.proto)
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.RecordMsg records = 2 [json_name = "records"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends datapower.noesis.v1.RecordMsgOrBuilder> 
      getRecordsOrBuilderList() {
    return records_;
  }
  /**
   * <pre>
   * Batch of records (reuse RecordMsg from connector.proto)
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.RecordMsg records = 2 [json_name = "records"];</code>
   */
  @java.lang.Override
  public int getRecordsCount() {
    return records_.size();
  }
  /**
   * <pre>
   * Batch of records (reuse RecordMsg from connector.proto)
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.RecordMsg records = 2 [json_name = "records"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.RecordMsg getRecords(int index) {
    return records_.get(index);
  }
  /**
   * <pre>
   * Batch of records (reuse RecordMsg from connector.proto)
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.RecordMsg records = 2 [json_name = "records"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.RecordMsgOrBuilder getRecordsOrBuilder(
      int index) {
    return records_.get(index);
  }

  public static final int BATCH_SEQ_FIELD_NUMBER = 3;
  private long batchSeq_ = 0L;
  /**
   * <pre>
   * Monotonically increasing batch sequence number
   * </pre>
   *
   * <code>int64 batch_seq = 3 [json_name = "batchSeq"];</code>
   * @return The batchSeq.
   */
  @java.lang.Override
  public long getBatchSeq() {
    return batchSeq_;
  }

  public static final int IS_LAST_BATCH_FIELD_NUMBER = 4;
  private boolean isLastBatch_ = false;
  /**
   * <pre>
   * True if this is the final batch in the stream
   * </pre>
   *
   * <code>bool is_last_batch = 4 [json_name = "isLastBatch"];</code>
   * @return The isLastBatch.
   */
  @java.lang.Override
  public boolean getIsLastBatch() {
    return isLastBatch_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sessionId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, sessionId_);
    }
    for (int i = 0; i < records_.size(); i++) {
      output.writeMessage(2, records_.get(i));
    }
    if (batchSeq_ != 0L) {
      output.writeInt64(3, batchSeq_);
    }
    if (isLastBatch_ != false) {
      output.writeBool(4, isLastBatch_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sessionId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, sessionId_);
    }
    for (int i = 0; i < records_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, records_.get(i));
    }
    if (batchSeq_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(3, batchSeq_);
    }
    if (isLastBatch_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, isLastBatch_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof datapower.noesis.v1.DataBatch)) {
      return super.equals(obj);
    }
    datapower.noesis.v1.DataBatch other = (datapower.noesis.v1.DataBatch) obj;

    if (!getSessionId()
        .equals(other.getSessionId())) return false;
    if (!getRecordsList()
        .equals(other.getRecordsList())) return false;
    if (getBatchSeq()
        != other.getBatchSeq()) return false;
    if (getIsLastBatch()
        != other.getIsLastBatch()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + SESSION_ID_FIELD_NUMBER;
    hash = (53 * hash) + getSessionId().hashCode();
    if (getRecordsCount() > 0) {
      hash = (37 * hash) + RECORDS_FIELD_NUMBER;
      hash = (53 * hash) + getRecordsList().hashCode();
    }
    hash = (37 * hash) + BATCH_SEQ_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getBatchSeq());
    hash = (37 * hash) + IS_LAST_BATCH_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getIsLastBatch());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static datapower.noesis.v1.DataBatch parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.DataBatch parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.DataBatch parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.DataBatch parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.DataBatch parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.DataBatch parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.DataBatch parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.DataBatch parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static datapower.noesis.v1.DataBatch parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static datapower.noesis.v1.DataBatch parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static datapower.noesis.v1.DataBatch parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.DataBatch parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(datapower.noesis.v1.DataBatch prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * A batch of records to write.
   * The connector sends multiple DataBatch messages in a stream.
   * </pre>
   *
   * Protobuf type {@code datapower.noesis.v1.DataBatch}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:datapower.noesis.v1.DataBatch)
      datapower.noesis.v1.DataBatchOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return datapower.noesis.v1.SidecarOuterClass.internal_static_datapower_noesis_v1_DataBatch_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return datapower.noesis.v1.SidecarOuterClass.internal_static_datapower_noesis_v1_DataBatch_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              datapower.noesis.v1.DataBatch.class, datapower.noesis.v1.DataBatch.Builder.class);
    }

    // Construct using datapower.noesis.v1.DataBatch.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      sessionId_ = "";
      if (recordsBuilder_ == null) {
        records_ = java.util.Collections.emptyList();
      } else {
        records_ = null;
        recordsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      batchSeq_ = 0L;
      isLastBatch_ = false;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return datapower.noesis.v1.SidecarOuterClass.internal_static_datapower_noesis_v1_DataBatch_descriptor;
    }

    @java.lang.Override
    public datapower.noesis.v1.DataBatch getDefaultInstanceForType() {
      return datapower.noesis.v1.DataBatch.getDefaultInstance();
    }

    @java.lang.Override
    public datapower.noesis.v1.DataBatch build() {
      datapower.noesis.v1.DataBatch result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public datapower.noesis.v1.DataBatch buildPartial() {
      datapower.noesis.v1.DataBatch result = new datapower.noesis.v1.DataBatch(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(datapower.noesis.v1.DataBatch result) {
      if (recordsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          records_ = java.util.Collections.unmodifiableList(records_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.records_ = records_;
      } else {
        result.records_ = recordsBuilder_.build();
      }
    }

    private void buildPartial0(datapower.noesis.v1.DataBatch result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.sessionId_ = sessionId_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.batchSeq_ = batchSeq_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.isLastBatch_ = isLastBatch_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof datapower.noesis.v1.DataBatch) {
        return mergeFrom((datapower.noesis.v1.DataBatch)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(datapower.noesis.v1.DataBatch other) {
      if (other == datapower.noesis.v1.DataBatch.getDefaultInstance()) return this;
      if (!other.getSessionId().isEmpty()) {
        sessionId_ = other.sessionId_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (recordsBuilder_ == null) {
        if (!other.records_.isEmpty()) {
          if (records_.isEmpty()) {
            records_ = other.records_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureRecordsIsMutable();
            records_.addAll(other.records_);
          }
          onChanged();
        }
      } else {
        if (!other.records_.isEmpty()) {
          if (recordsBuilder_.isEmpty()) {
            recordsBuilder_.dispose();
            recordsBuilder_ = null;
            records_ = other.records_;
            bitField0_ = (bitField0_ & ~0x00000002);
            recordsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getRecordsFieldBuilder() : null;
          } else {
            recordsBuilder_.addAllMessages(other.records_);
          }
        }
      }
      if (other.getBatchSeq() != 0L) {
        setBatchSeq(other.getBatchSeq());
      }
      if (other.getIsLastBatch() != false) {
        setIsLastBatch(other.getIsLastBatch());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              sessionId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              datapower.noesis.v1.RecordMsg m =
                  input.readMessage(
                      datapower.noesis.v1.RecordMsg.parser(),
                      extensionRegistry);
              if (recordsBuilder_ == null) {
                ensureRecordsIsMutable();
                records_.add(m);
              } else {
                recordsBuilder_.addMessage(m);
              }
              break;
            } // case 18
            case 24: {
              batchSeq_ = input.readInt64();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 32: {
              isLastBatch_ = input.readBool();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object sessionId_ = "";
    /**
     * <pre>
     * Must match InitSession
     * </pre>
     *
     * <code>string session_id = 1 [json_name = "sessionId"];</code>
     * @return The sessionId.
     */
    public java.lang.String getSessionId() {
      java.lang.Object ref = sessionId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sessionId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Must match InitSession
     * </pre>
     *
     * <code>string session_id = 1 [json_name = "sessionId"];</code>
     * @return The bytes for sessionId.
     */
    public com.google.protobuf.ByteString
        getSessionIdBytes() {
      java.lang.Object ref = sessionId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sessionId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Must match InitSession
     * </pre>
     *
     * <code>string session_id = 1 [json_name = "sessionId"];</code>
     * @param value The sessionId to set.
     * @return This builder for chaining.
     */
    public Builder setSessionId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      sessionId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Must match InitSession
     * </pre>
     *
     * <code>string session_id = 1 [json_name = "sessionId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearSessionId() {
      sessionId_ = getDefaultInstance().getSessionId();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Must match InitSession
     * </pre>
     *
     * <code>string session_id = 1 [json_name = "sessionId"];</code>
     * @param value The bytes for sessionId to set.
     * @return This builder for chaining.
     */
    public Builder setSessionIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      sessionId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.util.List<datapower.noesis.v1.RecordMsg> records_ =
      java.util.Collections.emptyList();
    private void ensureRecordsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        records_ = new java.util.ArrayList<datapower.noesis.v1.RecordMsg>(records_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        datapower.noesis.v1.RecordMsg, datapower.noesis.v1.RecordMsg.Builder, datapower.noesis.v1.RecordMsgOrBuilder> recordsBuilder_;

    /**
     * <pre>
     * Batch of records (reuse RecordMsg from connector.proto)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.RecordMsg records = 2 [json_name = "records"];</code>
     */
    public java.util.List<datapower.noesis.v1.RecordMsg> getRecordsList() {
      if (recordsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(records_);
      } else {
        return recordsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Batch of records (reuse RecordMsg from connector.proto)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.RecordMsg records = 2 [json_name = "records"];</code>
     */
    public int getRecordsCount() {
      if (recordsBuilder_ == null) {
        return records_.size();
      } else {
        return recordsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Batch of records (reuse RecordMsg from connector.proto)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.RecordMsg records = 2 [json_name = "records"];</code>
     */
    public datapower.noesis.v1.RecordMsg getRecords(int index) {
      if (recordsBuilder_ == null) {
        return records_.get(index);
      } else {
        return recordsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Batch of records (reuse RecordMsg from connector.proto)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.RecordMsg records = 2 [json_name = "records"];</code>
     */
    public Builder setRecords(
        int index, datapower.noesis.v1.RecordMsg value) {
      if (recordsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRecordsIsMutable();
        records_.set(index, value);
        onChanged();
      } else {
        recordsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Batch of records (reuse RecordMsg from connector.proto)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.RecordMsg records = 2 [json_name = "records"];</code>
     */
    public Builder setRecords(
        int index, datapower.noesis.v1.RecordMsg.Builder builderForValue) {
      if (recordsBuilder_ == null) {
        ensureRecordsIsMutable();
        records_.set(index, builderForValue.build());
        onChanged();
      } else {
        recordsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Batch of records (reuse RecordMsg from connector.proto)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.RecordMsg records = 2 [json_name = "records"];</code>
     */
    public Builder addRecords(datapower.noesis.v1.RecordMsg value) {
      if (recordsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRecordsIsMutable();
        records_.add(value);
        onChanged();
      } else {
        recordsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Batch of records (reuse RecordMsg from connector.proto)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.RecordMsg records = 2 [json_name = "records"];</code>
     */
    public Builder addRecords(
        int index, datapower.noesis.v1.RecordMsg value) {
      if (recordsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRecordsIsMutable();
        records_.add(index, value);
        onChanged();
      } else {
        recordsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Batch of records (reuse RecordMsg from connector.proto)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.RecordMsg records = 2 [json_name = "records"];</code>
     */
    public Builder addRecords(
        datapower.noesis.v1.RecordMsg.Builder builderForValue) {
      if (recordsBuilder_ == null) {
        ensureRecordsIsMutable();
        records_.add(builderForValue.build());
        onChanged();
      } else {
        recordsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Batch of records (reuse RecordMsg from connector.proto)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.RecordMsg records = 2 [json_name = "records"];</code>
     */
    public Builder addRecords(
        int index, datapower.noesis.v1.RecordMsg.Builder builderForValue) {
      if (recordsBuilder_ == null) {
        ensureRecordsIsMutable();
        records_.add(index, builderForValue.build());
        onChanged();
      } else {
        recordsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Batch of records (reuse RecordMsg from connector.proto)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.RecordMsg records = 2 [json_name = "records"];</code>
     */
    public Builder addAllRecords(
        java.lang.Iterable<? extends datapower.noesis.v1.RecordMsg> values) {
      if (recordsBuilder_ == null) {
        ensureRecordsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, records_);
        onChanged();
      } else {
        recordsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Batch of records (reuse RecordMsg from connector.proto)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.RecordMsg records = 2 [json_name = "records"];</code>
     */
    public Builder clearRecords() {
      if (recordsBuilder_ == null) {
        records_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        recordsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Batch of records (reuse RecordMsg from connector.proto)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.RecordMsg records = 2 [json_name = "records"];</code>
     */
    public Builder removeRecords(int index) {
      if (recordsBuilder_ == null) {
        ensureRecordsIsMutable();
        records_.remove(index);
        onChanged();
      } else {
        recordsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Batch of records (reuse RecordMsg from connector.proto)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.RecordMsg records = 2 [json_name = "records"];</code>
     */
    public datapower.noesis.v1.RecordMsg.Builder getRecordsBuilder(
        int index) {
      return getRecordsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Batch of records (reuse RecordMsg from connector.proto)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.RecordMsg records = 2 [json_name = "records"];</code>
     */
    public datapower.noesis.v1.RecordMsgOrBuilder getRecordsOrBuilder(
        int index) {
      if (recordsBuilder_ == null) {
        return records_.get(index);  } else {
        return recordsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Batch of records (reuse RecordMsg from connector.proto)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.RecordMsg records = 2 [json_name = "records"];</code>
     */
    public java.util.List<? extends datapower.noesis.v1.RecordMsgOrBuilder> 
         getRecordsOrBuilderList() {
      if (recordsBuilder_ != null) {
        return recordsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(records_);
      }
    }
    /**
     * <pre>
     * Batch of records (reuse RecordMsg from connector.proto)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.RecordMsg records = 2 [json_name = "records"];</code>
     */
    public datapower.noesis.v1.RecordMsg.Builder addRecordsBuilder() {
      return getRecordsFieldBuilder().addBuilder(
          datapower.noesis.v1.RecordMsg.getDefaultInstance());
    }
    /**
     * <pre>
     * Batch of records (reuse RecordMsg from connector.proto)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.RecordMsg records = 2 [json_name = "records"];</code>
     */
    public datapower.noesis.v1.RecordMsg.Builder addRecordsBuilder(
        int index) {
      return getRecordsFieldBuilder().addBuilder(
          index, datapower.noesis.v1.RecordMsg.getDefaultInstance());
    }
    /**
     * <pre>
     * Batch of records (reuse RecordMsg from connector.proto)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.RecordMsg records = 2 [json_name = "records"];</code>
     */
    public java.util.List<datapower.noesis.v1.RecordMsg.Builder> 
         getRecordsBuilderList() {
      return getRecordsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        datapower.noesis.v1.RecordMsg, datapower.noesis.v1.RecordMsg.Builder, datapower.noesis.v1.RecordMsgOrBuilder> 
        getRecordsFieldBuilder() {
      if (recordsBuilder_ == null) {
        recordsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            datapower.noesis.v1.RecordMsg, datapower.noesis.v1.RecordMsg.Builder, datapower.noesis.v1.RecordMsgOrBuilder>(
                records_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        records_ = null;
      }
      return recordsBuilder_;
    }

    private long batchSeq_ ;
    /**
     * <pre>
     * Monotonically increasing batch sequence number
     * </pre>
     *
     * <code>int64 batch_seq = 3 [json_name = "batchSeq"];</code>
     * @return The batchSeq.
     */
    @java.lang.Override
    public long getBatchSeq() {
      return batchSeq_;
    }
    /**
     * <pre>
     * Monotonically increasing batch sequence number
     * </pre>
     *
     * <code>int64 batch_seq = 3 [json_name = "batchSeq"];</code>
     * @param value The batchSeq to set.
     * @return This builder for chaining.
     */
    public Builder setBatchSeq(long value) {

      batchSeq_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Monotonically increasing batch sequence number
     * </pre>
     *
     * <code>int64 batch_seq = 3 [json_name = "batchSeq"];</code>
     * @return This builder for chaining.
     */
    public Builder clearBatchSeq() {
      bitField0_ = (bitField0_ & ~0x00000004);
      batchSeq_ = 0L;
      onChanged();
      return this;
    }

    private boolean isLastBatch_ ;
    /**
     * <pre>
     * True if this is the final batch in the stream
     * </pre>
     *
     * <code>bool is_last_batch = 4 [json_name = "isLastBatch"];</code>
     * @return The isLastBatch.
     */
    @java.lang.Override
    public boolean getIsLastBatch() {
      return isLastBatch_;
    }
    /**
     * <pre>
     * True if this is the final batch in the stream
     * </pre>
     *
     * <code>bool is_last_batch = 4 [json_name = "isLastBatch"];</code>
     * @param value The isLastBatch to set.
     * @return This builder for chaining.
     */
    public Builder setIsLastBatch(boolean value) {

      isLastBatch_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * True if this is the final batch in the stream
     * </pre>
     *
     * <code>bool is_last_batch = 4 [json_name = "isLastBatch"];</code>
     * @return This builder for chaining.
     */
    public Builder clearIsLastBatch() {
      bitField0_ = (bitField0_ & ~0x00000008);
      isLastBatch_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:datapower.noesis.v1.DataBatch)
  }

  // @@protoc_insertion_point(class_scope:datapower.noesis.v1.DataBatch)
  private static final datapower.noesis.v1.DataBatch DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new datapower.noesis.v1.DataBatch();
  }

  public static datapower.noesis.v1.DataBatch getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DataBatch>
      PARSER = new com.google.protobuf.AbstractParser<DataBatch>() {
    @java.lang.Override
    public DataBatch parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<DataBatch> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DataBatch> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public datapower.noesis.v1.DataBatch getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

