// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datapower/noesis/v1/execution.proto

package datapower.noesis.v1;

/**
 * Protobuf type {@code datapower.noesis.v1.ParquetOptions}
 */
public final class ParquetOptions extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:datapower.noesis.v1.ParquetOptions)
    ParquetOptionsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ParquetOptions.newBuilder() to construct.
  private ParquetOptions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ParquetOptions() {
    compression_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ParquetOptions();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return datapower.noesis.v1.Execution.internal_static_datapower_noesis_v1_ParquetOptions_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return datapower.noesis.v1.Execution.internal_static_datapower_noesis_v1_ParquetOptions_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            datapower.noesis.v1.ParquetOptions.class, datapower.noesis.v1.ParquetOptions.Builder.class);
  }

  public static final int COMPRESSION_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object compression_ = "";
  /**
   * <pre>
   * Compression codec (snappy, gzip, lzo, zstd)
   * </pre>
   *
   * <code>string compression = 1 [json_name = "compression"];</code>
   * @return The compression.
   */
  @java.lang.Override
  public java.lang.String getCompression() {
    java.lang.Object ref = compression_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      compression_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Compression codec (snappy, gzip, lzo, zstd)
   * </pre>
   *
   * <code>string compression = 1 [json_name = "compression"];</code>
   * @return The bytes for compression.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getCompressionBytes() {
    java.lang.Object ref = compression_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      compression_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ROW_GROUP_SIZE_FIELD_NUMBER = 2;
  private long rowGroupSize_ = 0L;
  /**
   * <pre>
   * Row group size
   * </pre>
   *
   * <code>int64 row_group_size = 2 [json_name = "rowGroupSize"];</code>
   * @return The rowGroupSize.
   */
  @java.lang.Override
  public long getRowGroupSize() {
    return rowGroupSize_;
  }

  public static final int PAGE_SIZE_FIELD_NUMBER = 3;
  private long pageSize_ = 0L;
  /**
   * <pre>
   * Page size
   * </pre>
   *
   * <code>int64 page_size = 3 [json_name = "pageSize"];</code>
   * @return The pageSize.
   */
  @java.lang.Override
  public long getPageSize() {
    return pageSize_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(compression_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, compression_);
    }
    if (rowGroupSize_ != 0L) {
      output.writeInt64(2, rowGroupSize_);
    }
    if (pageSize_ != 0L) {
      output.writeInt64(3, pageSize_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(compression_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, compression_);
    }
    if (rowGroupSize_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(2, rowGroupSize_);
    }
    if (pageSize_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(3, pageSize_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof datapower.noesis.v1.ParquetOptions)) {
      return super.equals(obj);
    }
    datapower.noesis.v1.ParquetOptions other = (datapower.noesis.v1.ParquetOptions) obj;

    if (!getCompression()
        .equals(other.getCompression())) return false;
    if (getRowGroupSize()
        != other.getRowGroupSize()) return false;
    if (getPageSize()
        != other.getPageSize()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + COMPRESSION_FIELD_NUMBER;
    hash = (53 * hash) + getCompression().hashCode();
    hash = (37 * hash) + ROW_GROUP_SIZE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getRowGroupSize());
    hash = (37 * hash) + PAGE_SIZE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getPageSize());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static datapower.noesis.v1.ParquetOptions parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.ParquetOptions parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.ParquetOptions parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.ParquetOptions parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.ParquetOptions parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.ParquetOptions parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.ParquetOptions parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.ParquetOptions parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static datapower.noesis.v1.ParquetOptions parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static datapower.noesis.v1.ParquetOptions parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static datapower.noesis.v1.ParquetOptions parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.ParquetOptions parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(datapower.noesis.v1.ParquetOptions prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code datapower.noesis.v1.ParquetOptions}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:datapower.noesis.v1.ParquetOptions)
      datapower.noesis.v1.ParquetOptionsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return datapower.noesis.v1.Execution.internal_static_datapower_noesis_v1_ParquetOptions_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return datapower.noesis.v1.Execution.internal_static_datapower_noesis_v1_ParquetOptions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              datapower.noesis.v1.ParquetOptions.class, datapower.noesis.v1.ParquetOptions.Builder.class);
    }

    // Construct using datapower.noesis.v1.ParquetOptions.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      compression_ = "";
      rowGroupSize_ = 0L;
      pageSize_ = 0L;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return datapower.noesis.v1.Execution.internal_static_datapower_noesis_v1_ParquetOptions_descriptor;
    }

    @java.lang.Override
    public datapower.noesis.v1.ParquetOptions getDefaultInstanceForType() {
      return datapower.noesis.v1.ParquetOptions.getDefaultInstance();
    }

    @java.lang.Override
    public datapower.noesis.v1.ParquetOptions build() {
      datapower.noesis.v1.ParquetOptions result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public datapower.noesis.v1.ParquetOptions buildPartial() {
      datapower.noesis.v1.ParquetOptions result = new datapower.noesis.v1.ParquetOptions(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(datapower.noesis.v1.ParquetOptions result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.compression_ = compression_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.rowGroupSize_ = rowGroupSize_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.pageSize_ = pageSize_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof datapower.noesis.v1.ParquetOptions) {
        return mergeFrom((datapower.noesis.v1.ParquetOptions)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(datapower.noesis.v1.ParquetOptions other) {
      if (other == datapower.noesis.v1.ParquetOptions.getDefaultInstance()) return this;
      if (!other.getCompression().isEmpty()) {
        compression_ = other.compression_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.getRowGroupSize() != 0L) {
        setRowGroupSize(other.getRowGroupSize());
      }
      if (other.getPageSize() != 0L) {
        setPageSize(other.getPageSize());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              compression_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 16: {
              rowGroupSize_ = input.readInt64();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 24: {
              pageSize_ = input.readInt64();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object compression_ = "";
    /**
     * <pre>
     * Compression codec (snappy, gzip, lzo, zstd)
     * </pre>
     *
     * <code>string compression = 1 [json_name = "compression"];</code>
     * @return The compression.
     */
    public java.lang.String getCompression() {
      java.lang.Object ref = compression_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        compression_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Compression codec (snappy, gzip, lzo, zstd)
     * </pre>
     *
     * <code>string compression = 1 [json_name = "compression"];</code>
     * @return The bytes for compression.
     */
    public com.google.protobuf.ByteString
        getCompressionBytes() {
      java.lang.Object ref = compression_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        compression_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Compression codec (snappy, gzip, lzo, zstd)
     * </pre>
     *
     * <code>string compression = 1 [json_name = "compression"];</code>
     * @param value The compression to set.
     * @return This builder for chaining.
     */
    public Builder setCompression(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      compression_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Compression codec (snappy, gzip, lzo, zstd)
     * </pre>
     *
     * <code>string compression = 1 [json_name = "compression"];</code>
     * @return This builder for chaining.
     */
    public Builder clearCompression() {
      compression_ = getDefaultInstance().getCompression();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Compression codec (snappy, gzip, lzo, zstd)
     * </pre>
     *
     * <code>string compression = 1 [json_name = "compression"];</code>
     * @param value The bytes for compression to set.
     * @return This builder for chaining.
     */
    public Builder setCompressionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      compression_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private long rowGroupSize_ ;
    /**
     * <pre>
     * Row group size
     * </pre>
     *
     * <code>int64 row_group_size = 2 [json_name = "rowGroupSize"];</code>
     * @return The rowGroupSize.
     */
    @java.lang.Override
    public long getRowGroupSize() {
      return rowGroupSize_;
    }
    /**
     * <pre>
     * Row group size
     * </pre>
     *
     * <code>int64 row_group_size = 2 [json_name = "rowGroupSize"];</code>
     * @param value The rowGroupSize to set.
     * @return This builder for chaining.
     */
    public Builder setRowGroupSize(long value) {

      rowGroupSize_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Row group size
     * </pre>
     *
     * <code>int64 row_group_size = 2 [json_name = "rowGroupSize"];</code>
     * @return This builder for chaining.
     */
    public Builder clearRowGroupSize() {
      bitField0_ = (bitField0_ & ~0x00000002);
      rowGroupSize_ = 0L;
      onChanged();
      return this;
    }

    private long pageSize_ ;
    /**
     * <pre>
     * Page size
     * </pre>
     *
     * <code>int64 page_size = 3 [json_name = "pageSize"];</code>
     * @return The pageSize.
     */
    @java.lang.Override
    public long getPageSize() {
      return pageSize_;
    }
    /**
     * <pre>
     * Page size
     * </pre>
     *
     * <code>int64 page_size = 3 [json_name = "pageSize"];</code>
     * @param value The pageSize to set.
     * @return This builder for chaining.
     */
    public Builder setPageSize(long value) {

      pageSize_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Page size
     * </pre>
     *
     * <code>int64 page_size = 3 [json_name = "pageSize"];</code>
     * @return This builder for chaining.
     */
    public Builder clearPageSize() {
      bitField0_ = (bitField0_ & ~0x00000004);
      pageSize_ = 0L;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:datapower.noesis.v1.ParquetOptions)
  }

  // @@protoc_insertion_point(class_scope:datapower.noesis.v1.ParquetOptions)
  private static final datapower.noesis.v1.ParquetOptions DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new datapower.noesis.v1.ParquetOptions();
  }

  public static datapower.noesis.v1.ParquetOptions getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ParquetOptions>
      PARSER = new com.google.protobuf.AbstractParser<ParquetOptions>() {
    @java.lang.Override
    public ParquetOptions parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ParquetOptions> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ParquetOptions> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public datapower.noesis.v1.ParquetOptions getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

