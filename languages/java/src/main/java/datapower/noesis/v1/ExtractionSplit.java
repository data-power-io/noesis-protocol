// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datapower/noesis/v1/execution.proto

package datapower.noesis.v1;

/**
 * <pre>
 * ExtractionSplit represents a partition of data to be extracted
 * Returned by the PlanBatchSourceExtractionActivity
 * </pre>
 *
 * Protobuf type {@code datapower.noesis.v1.ExtractionSplit}
 */
public final class ExtractionSplit extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:datapower.noesis.v1.ExtractionSplit)
    ExtractionSplitOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ExtractionSplit.newBuilder() to construct.
  private ExtractionSplit(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ExtractionSplit() {
    splitId_ = "";
    sourceAlias_ = "";
    filterCondition_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ExtractionSplit();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return datapower.noesis.v1.Execution.internal_static_datapower_noesis_v1_ExtractionSplit_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return datapower.noesis.v1.Execution.internal_static_datapower_noesis_v1_ExtractionSplit_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            datapower.noesis.v1.ExtractionSplit.class, datapower.noesis.v1.ExtractionSplit.Builder.class);
  }

  public static final int SPLIT_ID_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object splitId_ = "";
  /**
   * <pre>
   * Unique split identifier (e.g., "split-0", "split-1")
   * </pre>
   *
   * <code>string split_id = 1 [json_name = "splitId"];</code>
   * @return The splitId.
   */
  @java.lang.Override
  public java.lang.String getSplitId() {
    java.lang.Object ref = splitId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      splitId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Unique split identifier (e.g., "split-0", "split-1")
   * </pre>
   *
   * <code>string split_id = 1 [json_name = "splitId"];</code>
   * @return The bytes for splitId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSplitIdBytes() {
    java.lang.Object ref = splitId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      splitId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SOURCE_ALIAS_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object sourceAlias_ = "";
  /**
   * <pre>
   * Source alias this split belongs to
   * </pre>
   *
   * <code>string source_alias = 2 [json_name = "sourceAlias"];</code>
   * @return The sourceAlias.
   */
  @java.lang.Override
  public java.lang.String getSourceAlias() {
    java.lang.Object ref = sourceAlias_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      sourceAlias_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Source alias this split belongs to
   * </pre>
   *
   * <code>string source_alias = 2 [json_name = "sourceAlias"];</code>
   * @return The bytes for sourceAlias.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSourceAliasBytes() {
    java.lang.Object ref = sourceAlias_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      sourceAlias_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FILTER_CONDITION_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private volatile java.lang.Object filterCondition_ = "";
  /**
   * <pre>
   * Filter condition for this split (e.g., "WHERE id BETWEEN 1 AND 1000000")
   * </pre>
   *
   * <code>string filter_condition = 3 [json_name = "filterCondition"];</code>
   * @return The filterCondition.
   */
  @java.lang.Override
  public java.lang.String getFilterCondition() {
    java.lang.Object ref = filterCondition_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      filterCondition_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Filter condition for this split (e.g., "WHERE id BETWEEN 1 AND 1000000")
   * </pre>
   *
   * <code>string filter_condition = 3 [json_name = "filterCondition"];</code>
   * @return The bytes for filterCondition.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getFilterConditionBytes() {
    java.lang.Object ref = filterCondition_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      filterCondition_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ESTIMATED_ROWS_FIELD_NUMBER = 4;
  private long estimatedRows_ = 0L;
  /**
   * <pre>
   * Estimated rows in this split
   * </pre>
   *
   * <code>int64 estimated_rows = 4 [json_name = "estimatedRows"];</code>
   * @return The estimatedRows.
   */
  @java.lang.Override
  public long getEstimatedRows() {
    return estimatedRows_;
  }

  public static final int CONNECTOR_FIELD_NUMBER = 5;
  private datapower.noesis.v1.ConnectorConfig connector_;
  /**
   * <pre>
   * Connector configuration
   * </pre>
   *
   * <code>.datapower.noesis.v1.ConnectorConfig connector = 5 [json_name = "connector"];</code>
   * @return Whether the connector field is set.
   */
  @java.lang.Override
  public boolean hasConnector() {
    return connector_ != null;
  }
  /**
   * <pre>
   * Connector configuration
   * </pre>
   *
   * <code>.datapower.noesis.v1.ConnectorConfig connector = 5 [json_name = "connector"];</code>
   * @return The connector.
   */
  @java.lang.Override
  public datapower.noesis.v1.ConnectorConfig getConnector() {
    return connector_ == null ? datapower.noesis.v1.ConnectorConfig.getDefaultInstance() : connector_;
  }
  /**
   * <pre>
   * Connector configuration
   * </pre>
   *
   * <code>.datapower.noesis.v1.ConnectorConfig connector = 5 [json_name = "connector"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.ConnectorConfigOrBuilder getConnectorOrBuilder() {
    return connector_ == null ? datapower.noesis.v1.ConnectorConfig.getDefaultInstance() : connector_;
  }

  public static final int OUTPUT_FIELD_NUMBER = 6;
  private datapower.noesis.v1.OutputConfig output_;
  /**
   * <pre>
   * Output configuration
   * </pre>
   *
   * <code>.datapower.noesis.v1.OutputConfig output = 6 [json_name = "output"];</code>
   * @return Whether the output field is set.
   */
  @java.lang.Override
  public boolean hasOutput() {
    return output_ != null;
  }
  /**
   * <pre>
   * Output configuration
   * </pre>
   *
   * <code>.datapower.noesis.v1.OutputConfig output = 6 [json_name = "output"];</code>
   * @return The output.
   */
  @java.lang.Override
  public datapower.noesis.v1.OutputConfig getOutput() {
    return output_ == null ? datapower.noesis.v1.OutputConfig.getDefaultInstance() : output_;
  }
  /**
   * <pre>
   * Output configuration
   * </pre>
   *
   * <code>.datapower.noesis.v1.OutputConfig output = 6 [json_name = "output"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.OutputConfigOrBuilder getOutputOrBuilder() {
    return output_ == null ? datapower.noesis.v1.OutputConfig.getDefaultInstance() : output_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(splitId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, splitId_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sourceAlias_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, sourceAlias_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(filterCondition_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, filterCondition_);
    }
    if (estimatedRows_ != 0L) {
      output.writeInt64(4, estimatedRows_);
    }
    if (connector_ != null) {
      output.writeMessage(5, getConnector());
    }
    if (output_ != null) {
      output.writeMessage(6, getOutput());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(splitId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, splitId_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sourceAlias_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, sourceAlias_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(filterCondition_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, filterCondition_);
    }
    if (estimatedRows_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(4, estimatedRows_);
    }
    if (connector_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getConnector());
    }
    if (output_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getOutput());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof datapower.noesis.v1.ExtractionSplit)) {
      return super.equals(obj);
    }
    datapower.noesis.v1.ExtractionSplit other = (datapower.noesis.v1.ExtractionSplit) obj;

    if (!getSplitId()
        .equals(other.getSplitId())) return false;
    if (!getSourceAlias()
        .equals(other.getSourceAlias())) return false;
    if (!getFilterCondition()
        .equals(other.getFilterCondition())) return false;
    if (getEstimatedRows()
        != other.getEstimatedRows()) return false;
    if (hasConnector() != other.hasConnector()) return false;
    if (hasConnector()) {
      if (!getConnector()
          .equals(other.getConnector())) return false;
    }
    if (hasOutput() != other.hasOutput()) return false;
    if (hasOutput()) {
      if (!getOutput()
          .equals(other.getOutput())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + SPLIT_ID_FIELD_NUMBER;
    hash = (53 * hash) + getSplitId().hashCode();
    hash = (37 * hash) + SOURCE_ALIAS_FIELD_NUMBER;
    hash = (53 * hash) + getSourceAlias().hashCode();
    hash = (37 * hash) + FILTER_CONDITION_FIELD_NUMBER;
    hash = (53 * hash) + getFilterCondition().hashCode();
    hash = (37 * hash) + ESTIMATED_ROWS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getEstimatedRows());
    if (hasConnector()) {
      hash = (37 * hash) + CONNECTOR_FIELD_NUMBER;
      hash = (53 * hash) + getConnector().hashCode();
    }
    if (hasOutput()) {
      hash = (37 * hash) + OUTPUT_FIELD_NUMBER;
      hash = (53 * hash) + getOutput().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static datapower.noesis.v1.ExtractionSplit parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.ExtractionSplit parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.ExtractionSplit parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.ExtractionSplit parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.ExtractionSplit parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.ExtractionSplit parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.ExtractionSplit parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.ExtractionSplit parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static datapower.noesis.v1.ExtractionSplit parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static datapower.noesis.v1.ExtractionSplit parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static datapower.noesis.v1.ExtractionSplit parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.ExtractionSplit parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(datapower.noesis.v1.ExtractionSplit prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * ExtractionSplit represents a partition of data to be extracted
   * Returned by the PlanBatchSourceExtractionActivity
   * </pre>
   *
   * Protobuf type {@code datapower.noesis.v1.ExtractionSplit}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:datapower.noesis.v1.ExtractionSplit)
      datapower.noesis.v1.ExtractionSplitOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return datapower.noesis.v1.Execution.internal_static_datapower_noesis_v1_ExtractionSplit_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return datapower.noesis.v1.Execution.internal_static_datapower_noesis_v1_ExtractionSplit_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              datapower.noesis.v1.ExtractionSplit.class, datapower.noesis.v1.ExtractionSplit.Builder.class);
    }

    // Construct using datapower.noesis.v1.ExtractionSplit.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      splitId_ = "";
      sourceAlias_ = "";
      filterCondition_ = "";
      estimatedRows_ = 0L;
      connector_ = null;
      if (connectorBuilder_ != null) {
        connectorBuilder_.dispose();
        connectorBuilder_ = null;
      }
      output_ = null;
      if (outputBuilder_ != null) {
        outputBuilder_.dispose();
        outputBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return datapower.noesis.v1.Execution.internal_static_datapower_noesis_v1_ExtractionSplit_descriptor;
    }

    @java.lang.Override
    public datapower.noesis.v1.ExtractionSplit getDefaultInstanceForType() {
      return datapower.noesis.v1.ExtractionSplit.getDefaultInstance();
    }

    @java.lang.Override
    public datapower.noesis.v1.ExtractionSplit build() {
      datapower.noesis.v1.ExtractionSplit result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public datapower.noesis.v1.ExtractionSplit buildPartial() {
      datapower.noesis.v1.ExtractionSplit result = new datapower.noesis.v1.ExtractionSplit(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(datapower.noesis.v1.ExtractionSplit result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.splitId_ = splitId_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.sourceAlias_ = sourceAlias_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.filterCondition_ = filterCondition_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.estimatedRows_ = estimatedRows_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.connector_ = connectorBuilder_ == null
            ? connector_
            : connectorBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.output_ = outputBuilder_ == null
            ? output_
            : outputBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof datapower.noesis.v1.ExtractionSplit) {
        return mergeFrom((datapower.noesis.v1.ExtractionSplit)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(datapower.noesis.v1.ExtractionSplit other) {
      if (other == datapower.noesis.v1.ExtractionSplit.getDefaultInstance()) return this;
      if (!other.getSplitId().isEmpty()) {
        splitId_ = other.splitId_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getSourceAlias().isEmpty()) {
        sourceAlias_ = other.sourceAlias_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (!other.getFilterCondition().isEmpty()) {
        filterCondition_ = other.filterCondition_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (other.getEstimatedRows() != 0L) {
        setEstimatedRows(other.getEstimatedRows());
      }
      if (other.hasConnector()) {
        mergeConnector(other.getConnector());
      }
      if (other.hasOutput()) {
        mergeOutput(other.getOutput());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              splitId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              sourceAlias_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              filterCondition_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 32: {
              estimatedRows_ = input.readInt64();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 42: {
              input.readMessage(
                  getConnectorFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            case 50: {
              input.readMessage(
                  getOutputFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000020;
              break;
            } // case 50
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object splitId_ = "";
    /**
     * <pre>
     * Unique split identifier (e.g., "split-0", "split-1")
     * </pre>
     *
     * <code>string split_id = 1 [json_name = "splitId"];</code>
     * @return The splitId.
     */
    public java.lang.String getSplitId() {
      java.lang.Object ref = splitId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        splitId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Unique split identifier (e.g., "split-0", "split-1")
     * </pre>
     *
     * <code>string split_id = 1 [json_name = "splitId"];</code>
     * @return The bytes for splitId.
     */
    public com.google.protobuf.ByteString
        getSplitIdBytes() {
      java.lang.Object ref = splitId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        splitId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Unique split identifier (e.g., "split-0", "split-1")
     * </pre>
     *
     * <code>string split_id = 1 [json_name = "splitId"];</code>
     * @param value The splitId to set.
     * @return This builder for chaining.
     */
    public Builder setSplitId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      splitId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Unique split identifier (e.g., "split-0", "split-1")
     * </pre>
     *
     * <code>string split_id = 1 [json_name = "splitId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearSplitId() {
      splitId_ = getDefaultInstance().getSplitId();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Unique split identifier (e.g., "split-0", "split-1")
     * </pre>
     *
     * <code>string split_id = 1 [json_name = "splitId"];</code>
     * @param value The bytes for splitId to set.
     * @return This builder for chaining.
     */
    public Builder setSplitIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      splitId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object sourceAlias_ = "";
    /**
     * <pre>
     * Source alias this split belongs to
     * </pre>
     *
     * <code>string source_alias = 2 [json_name = "sourceAlias"];</code>
     * @return The sourceAlias.
     */
    public java.lang.String getSourceAlias() {
      java.lang.Object ref = sourceAlias_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sourceAlias_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Source alias this split belongs to
     * </pre>
     *
     * <code>string source_alias = 2 [json_name = "sourceAlias"];</code>
     * @return The bytes for sourceAlias.
     */
    public com.google.protobuf.ByteString
        getSourceAliasBytes() {
      java.lang.Object ref = sourceAlias_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sourceAlias_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Source alias this split belongs to
     * </pre>
     *
     * <code>string source_alias = 2 [json_name = "sourceAlias"];</code>
     * @param value The sourceAlias to set.
     * @return This builder for chaining.
     */
    public Builder setSourceAlias(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      sourceAlias_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Source alias this split belongs to
     * </pre>
     *
     * <code>string source_alias = 2 [json_name = "sourceAlias"];</code>
     * @return This builder for chaining.
     */
    public Builder clearSourceAlias() {
      sourceAlias_ = getDefaultInstance().getSourceAlias();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Source alias this split belongs to
     * </pre>
     *
     * <code>string source_alias = 2 [json_name = "sourceAlias"];</code>
     * @param value The bytes for sourceAlias to set.
     * @return This builder for chaining.
     */
    public Builder setSourceAliasBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      sourceAlias_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private java.lang.Object filterCondition_ = "";
    /**
     * <pre>
     * Filter condition for this split (e.g., "WHERE id BETWEEN 1 AND 1000000")
     * </pre>
     *
     * <code>string filter_condition = 3 [json_name = "filterCondition"];</code>
     * @return The filterCondition.
     */
    public java.lang.String getFilterCondition() {
      java.lang.Object ref = filterCondition_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        filterCondition_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Filter condition for this split (e.g., "WHERE id BETWEEN 1 AND 1000000")
     * </pre>
     *
     * <code>string filter_condition = 3 [json_name = "filterCondition"];</code>
     * @return The bytes for filterCondition.
     */
    public com.google.protobuf.ByteString
        getFilterConditionBytes() {
      java.lang.Object ref = filterCondition_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        filterCondition_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Filter condition for this split (e.g., "WHERE id BETWEEN 1 AND 1000000")
     * </pre>
     *
     * <code>string filter_condition = 3 [json_name = "filterCondition"];</code>
     * @param value The filterCondition to set.
     * @return This builder for chaining.
     */
    public Builder setFilterCondition(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      filterCondition_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Filter condition for this split (e.g., "WHERE id BETWEEN 1 AND 1000000")
     * </pre>
     *
     * <code>string filter_condition = 3 [json_name = "filterCondition"];</code>
     * @return This builder for chaining.
     */
    public Builder clearFilterCondition() {
      filterCondition_ = getDefaultInstance().getFilterCondition();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Filter condition for this split (e.g., "WHERE id BETWEEN 1 AND 1000000")
     * </pre>
     *
     * <code>string filter_condition = 3 [json_name = "filterCondition"];</code>
     * @param value The bytes for filterCondition to set.
     * @return This builder for chaining.
     */
    public Builder setFilterConditionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      filterCondition_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private long estimatedRows_ ;
    /**
     * <pre>
     * Estimated rows in this split
     * </pre>
     *
     * <code>int64 estimated_rows = 4 [json_name = "estimatedRows"];</code>
     * @return The estimatedRows.
     */
    @java.lang.Override
    public long getEstimatedRows() {
      return estimatedRows_;
    }
    /**
     * <pre>
     * Estimated rows in this split
     * </pre>
     *
     * <code>int64 estimated_rows = 4 [json_name = "estimatedRows"];</code>
     * @param value The estimatedRows to set.
     * @return This builder for chaining.
     */
    public Builder setEstimatedRows(long value) {

      estimatedRows_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Estimated rows in this split
     * </pre>
     *
     * <code>int64 estimated_rows = 4 [json_name = "estimatedRows"];</code>
     * @return This builder for chaining.
     */
    public Builder clearEstimatedRows() {
      bitField0_ = (bitField0_ & ~0x00000008);
      estimatedRows_ = 0L;
      onChanged();
      return this;
    }

    private datapower.noesis.v1.ConnectorConfig connector_;
    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.ConnectorConfig, datapower.noesis.v1.ConnectorConfig.Builder, datapower.noesis.v1.ConnectorConfigOrBuilder> connectorBuilder_;
    /**
     * <pre>
     * Connector configuration
     * </pre>
     *
     * <code>.datapower.noesis.v1.ConnectorConfig connector = 5 [json_name = "connector"];</code>
     * @return Whether the connector field is set.
     */
    public boolean hasConnector() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Connector configuration
     * </pre>
     *
     * <code>.datapower.noesis.v1.ConnectorConfig connector = 5 [json_name = "connector"];</code>
     * @return The connector.
     */
    public datapower.noesis.v1.ConnectorConfig getConnector() {
      if (connectorBuilder_ == null) {
        return connector_ == null ? datapower.noesis.v1.ConnectorConfig.getDefaultInstance() : connector_;
      } else {
        return connectorBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Connector configuration
     * </pre>
     *
     * <code>.datapower.noesis.v1.ConnectorConfig connector = 5 [json_name = "connector"];</code>
     */
    public Builder setConnector(datapower.noesis.v1.ConnectorConfig value) {
      if (connectorBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        connector_ = value;
      } else {
        connectorBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Connector configuration
     * </pre>
     *
     * <code>.datapower.noesis.v1.ConnectorConfig connector = 5 [json_name = "connector"];</code>
     */
    public Builder setConnector(
        datapower.noesis.v1.ConnectorConfig.Builder builderForValue) {
      if (connectorBuilder_ == null) {
        connector_ = builderForValue.build();
      } else {
        connectorBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Connector configuration
     * </pre>
     *
     * <code>.datapower.noesis.v1.ConnectorConfig connector = 5 [json_name = "connector"];</code>
     */
    public Builder mergeConnector(datapower.noesis.v1.ConnectorConfig value) {
      if (connectorBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0) &&
          connector_ != null &&
          connector_ != datapower.noesis.v1.ConnectorConfig.getDefaultInstance()) {
          getConnectorBuilder().mergeFrom(value);
        } else {
          connector_ = value;
        }
      } else {
        connectorBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Connector configuration
     * </pre>
     *
     * <code>.datapower.noesis.v1.ConnectorConfig connector = 5 [json_name = "connector"];</code>
     */
    public Builder clearConnector() {
      bitField0_ = (bitField0_ & ~0x00000010);
      connector_ = null;
      if (connectorBuilder_ != null) {
        connectorBuilder_.dispose();
        connectorBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Connector configuration
     * </pre>
     *
     * <code>.datapower.noesis.v1.ConnectorConfig connector = 5 [json_name = "connector"];</code>
     */
    public datapower.noesis.v1.ConnectorConfig.Builder getConnectorBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getConnectorFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Connector configuration
     * </pre>
     *
     * <code>.datapower.noesis.v1.ConnectorConfig connector = 5 [json_name = "connector"];</code>
     */
    public datapower.noesis.v1.ConnectorConfigOrBuilder getConnectorOrBuilder() {
      if (connectorBuilder_ != null) {
        return connectorBuilder_.getMessageOrBuilder();
      } else {
        return connector_ == null ?
            datapower.noesis.v1.ConnectorConfig.getDefaultInstance() : connector_;
      }
    }
    /**
     * <pre>
     * Connector configuration
     * </pre>
     *
     * <code>.datapower.noesis.v1.ConnectorConfig connector = 5 [json_name = "connector"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.ConnectorConfig, datapower.noesis.v1.ConnectorConfig.Builder, datapower.noesis.v1.ConnectorConfigOrBuilder> 
        getConnectorFieldBuilder() {
      if (connectorBuilder_ == null) {
        connectorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            datapower.noesis.v1.ConnectorConfig, datapower.noesis.v1.ConnectorConfig.Builder, datapower.noesis.v1.ConnectorConfigOrBuilder>(
                getConnector(),
                getParentForChildren(),
                isClean());
        connector_ = null;
      }
      return connectorBuilder_;
    }

    private datapower.noesis.v1.OutputConfig output_;
    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.OutputConfig, datapower.noesis.v1.OutputConfig.Builder, datapower.noesis.v1.OutputConfigOrBuilder> outputBuilder_;
    /**
     * <pre>
     * Output configuration
     * </pre>
     *
     * <code>.datapower.noesis.v1.OutputConfig output = 6 [json_name = "output"];</code>
     * @return Whether the output field is set.
     */
    public boolean hasOutput() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * Output configuration
     * </pre>
     *
     * <code>.datapower.noesis.v1.OutputConfig output = 6 [json_name = "output"];</code>
     * @return The output.
     */
    public datapower.noesis.v1.OutputConfig getOutput() {
      if (outputBuilder_ == null) {
        return output_ == null ? datapower.noesis.v1.OutputConfig.getDefaultInstance() : output_;
      } else {
        return outputBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Output configuration
     * </pre>
     *
     * <code>.datapower.noesis.v1.OutputConfig output = 6 [json_name = "output"];</code>
     */
    public Builder setOutput(datapower.noesis.v1.OutputConfig value) {
      if (outputBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        output_ = value;
      } else {
        outputBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Output configuration
     * </pre>
     *
     * <code>.datapower.noesis.v1.OutputConfig output = 6 [json_name = "output"];</code>
     */
    public Builder setOutput(
        datapower.noesis.v1.OutputConfig.Builder builderForValue) {
      if (outputBuilder_ == null) {
        output_ = builderForValue.build();
      } else {
        outputBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Output configuration
     * </pre>
     *
     * <code>.datapower.noesis.v1.OutputConfig output = 6 [json_name = "output"];</code>
     */
    public Builder mergeOutput(datapower.noesis.v1.OutputConfig value) {
      if (outputBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0) &&
          output_ != null &&
          output_ != datapower.noesis.v1.OutputConfig.getDefaultInstance()) {
          getOutputBuilder().mergeFrom(value);
        } else {
          output_ = value;
        }
      } else {
        outputBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Output configuration
     * </pre>
     *
     * <code>.datapower.noesis.v1.OutputConfig output = 6 [json_name = "output"];</code>
     */
    public Builder clearOutput() {
      bitField0_ = (bitField0_ & ~0x00000020);
      output_ = null;
      if (outputBuilder_ != null) {
        outputBuilder_.dispose();
        outputBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Output configuration
     * </pre>
     *
     * <code>.datapower.noesis.v1.OutputConfig output = 6 [json_name = "output"];</code>
     */
    public datapower.noesis.v1.OutputConfig.Builder getOutputBuilder() {
      bitField0_ |= 0x00000020;
      onChanged();
      return getOutputFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Output configuration
     * </pre>
     *
     * <code>.datapower.noesis.v1.OutputConfig output = 6 [json_name = "output"];</code>
     */
    public datapower.noesis.v1.OutputConfigOrBuilder getOutputOrBuilder() {
      if (outputBuilder_ != null) {
        return outputBuilder_.getMessageOrBuilder();
      } else {
        return output_ == null ?
            datapower.noesis.v1.OutputConfig.getDefaultInstance() : output_;
      }
    }
    /**
     * <pre>
     * Output configuration
     * </pre>
     *
     * <code>.datapower.noesis.v1.OutputConfig output = 6 [json_name = "output"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.OutputConfig, datapower.noesis.v1.OutputConfig.Builder, datapower.noesis.v1.OutputConfigOrBuilder> 
        getOutputFieldBuilder() {
      if (outputBuilder_ == null) {
        outputBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            datapower.noesis.v1.OutputConfig, datapower.noesis.v1.OutputConfig.Builder, datapower.noesis.v1.OutputConfigOrBuilder>(
                getOutput(),
                getParentForChildren(),
                isClean());
        output_ = null;
      }
      return outputBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:datapower.noesis.v1.ExtractionSplit)
  }

  // @@protoc_insertion_point(class_scope:datapower.noesis.v1.ExtractionSplit)
  private static final datapower.noesis.v1.ExtractionSplit DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new datapower.noesis.v1.ExtractionSplit();
  }

  public static datapower.noesis.v1.ExtractionSplit getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ExtractionSplit>
      PARSER = new com.google.protobuf.AbstractParser<ExtractionSplit>() {
    @java.lang.Override
    public ExtractionSplit parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ExtractionSplit> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ExtractionSplit> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public datapower.noesis.v1.ExtractionSplit getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

