// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datapower/noesis/v1/connector.proto

package datapower.noesis.v1;

/**
 * <pre>
 * Represents an independent unit of work for parallel extraction.
 * The split token is opaque and connector-specific (could encode key ranges,
 * partition IDs, file paths, etc.)
 * </pre>
 *
 * Protobuf type {@code datapower.noesis.v1.ExtractionSplit}
 */
public final class ExtractionSplit extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:datapower.noesis.v1.ExtractionSplit)
    ExtractionSplitOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ExtractionSplit.newBuilder() to construct.
  private ExtractionSplit(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ExtractionSplit() {
    splitId_ = "";
    splitToken_ = com.google.protobuf.ByteString.EMPTY;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ExtractionSplit();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_ExtractionSplit_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 4:
        return internalGetMetadata();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_ExtractionSplit_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            datapower.noesis.v1.ExtractionSplit.class, datapower.noesis.v1.ExtractionSplit.Builder.class);
  }

  public static final int SPLIT_ID_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object splitId_ = "";
  /**
   * <pre>
   * Unique identifier for this split (e.g., "split-0001")
   * </pre>
   *
   * <code>string split_id = 1 [json_name = "splitId"];</code>
   * @return The splitId.
   */
  @java.lang.Override
  public java.lang.String getSplitId() {
    java.lang.Object ref = splitId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      splitId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Unique identifier for this split (e.g., "split-0001")
   * </pre>
   *
   * <code>string split_id = 1 [json_name = "splitId"];</code>
   * @return The bytes for splitId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSplitIdBytes() {
    java.lang.Object ref = splitId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      splitId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SPLIT_TOKEN_FIELD_NUMBER = 2;
  private com.google.protobuf.ByteString splitToken_ = com.google.protobuf.ByteString.EMPTY;
  /**
   * <pre>
   * Opaque connector-specific split metadata
   * </pre>
   *
   * <code>bytes split_token = 2 [json_name = "splitToken"];</code>
   * @return The splitToken.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getSplitToken() {
    return splitToken_;
  }

  public static final int ESTIMATED_ROWS_FIELD_NUMBER = 3;
  private long estimatedRows_ = 0L;
  /**
   * <pre>
   * Estimated rows in this split (0 if unknown)
   * </pre>
   *
   * <code>int64 estimated_rows = 3 [json_name = "estimatedRows"];</code>
   * @return The estimatedRows.
   */
  @java.lang.Override
  public long getEstimatedRows() {
    return estimatedRows_;
  }

  public static final int METADATA_FIELD_NUMBER = 4;
  private static final class MetadataDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.String>newDefaultInstance(
                datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_ExtractionSplit_MetadataEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.String> metadata_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.String>
  internalGetMetadata() {
    if (metadata_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          MetadataDefaultEntryHolder.defaultEntry);
    }
    return metadata_;
  }
  public int getMetadataCount() {
    return internalGetMetadata().getMap().size();
  }
  /**
   * <pre>
   * Optional split metadata (for logging/debugging)
   * </pre>
   *
   * <code>map&lt;string, string&gt; metadata = 4 [json_name = "metadata"];</code>
   */
  @java.lang.Override
  public boolean containsMetadata(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetMetadata().getMap().containsKey(key);
  }
  /**
   * Use {@link #getMetadataMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
    return getMetadataMap();
  }
  /**
   * <pre>
   * Optional split metadata (for logging/debugging)
   * </pre>
   *
   * <code>map&lt;string, string&gt; metadata = 4 [json_name = "metadata"];</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
    return internalGetMetadata().getMap();
  }
  /**
   * <pre>
   * Optional split metadata (for logging/debugging)
   * </pre>
   *
   * <code>map&lt;string, string&gt; metadata = 4 [json_name = "metadata"];</code>
   */
  @java.lang.Override
  public /* nullable */
java.lang.String getMetadataOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetMetadata().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Optional split metadata (for logging/debugging)
   * </pre>
   *
   * <code>map&lt;string, string&gt; metadata = 4 [json_name = "metadata"];</code>
   */
  @java.lang.Override
  public java.lang.String getMetadataOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetMetadata().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(splitId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, splitId_);
    }
    if (!splitToken_.isEmpty()) {
      output.writeBytes(2, splitToken_);
    }
    if (estimatedRows_ != 0L) {
      output.writeInt64(3, estimatedRows_);
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetMetadata(),
        MetadataDefaultEntryHolder.defaultEntry,
        4);
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(splitId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, splitId_);
    }
    if (!splitToken_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(2, splitToken_);
    }
    if (estimatedRows_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(3, estimatedRows_);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
         : internalGetMetadata().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
      metadata__ = MetadataDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, metadata__);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof datapower.noesis.v1.ExtractionSplit)) {
      return super.equals(obj);
    }
    datapower.noesis.v1.ExtractionSplit other = (datapower.noesis.v1.ExtractionSplit) obj;

    if (!getSplitId()
        .equals(other.getSplitId())) return false;
    if (!getSplitToken()
        .equals(other.getSplitToken())) return false;
    if (getEstimatedRows()
        != other.getEstimatedRows()) return false;
    if (!internalGetMetadata().equals(
        other.internalGetMetadata())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + SPLIT_ID_FIELD_NUMBER;
    hash = (53 * hash) + getSplitId().hashCode();
    hash = (37 * hash) + SPLIT_TOKEN_FIELD_NUMBER;
    hash = (53 * hash) + getSplitToken().hashCode();
    hash = (37 * hash) + ESTIMATED_ROWS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getEstimatedRows());
    if (!internalGetMetadata().getMap().isEmpty()) {
      hash = (37 * hash) + METADATA_FIELD_NUMBER;
      hash = (53 * hash) + internalGetMetadata().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static datapower.noesis.v1.ExtractionSplit parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.ExtractionSplit parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.ExtractionSplit parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.ExtractionSplit parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.ExtractionSplit parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.ExtractionSplit parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.ExtractionSplit parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.ExtractionSplit parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static datapower.noesis.v1.ExtractionSplit parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static datapower.noesis.v1.ExtractionSplit parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static datapower.noesis.v1.ExtractionSplit parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.ExtractionSplit parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(datapower.noesis.v1.ExtractionSplit prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Represents an independent unit of work for parallel extraction.
   * The split token is opaque and connector-specific (could encode key ranges,
   * partition IDs, file paths, etc.)
   * </pre>
   *
   * Protobuf type {@code datapower.noesis.v1.ExtractionSplit}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:datapower.noesis.v1.ExtractionSplit)
      datapower.noesis.v1.ExtractionSplitOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_ExtractionSplit_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 4:
          return internalGetMetadata();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 4:
          return internalGetMutableMetadata();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_ExtractionSplit_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              datapower.noesis.v1.ExtractionSplit.class, datapower.noesis.v1.ExtractionSplit.Builder.class);
    }

    // Construct using datapower.noesis.v1.ExtractionSplit.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      splitId_ = "";
      splitToken_ = com.google.protobuf.ByteString.EMPTY;
      estimatedRows_ = 0L;
      internalGetMutableMetadata().clear();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_ExtractionSplit_descriptor;
    }

    @java.lang.Override
    public datapower.noesis.v1.ExtractionSplit getDefaultInstanceForType() {
      return datapower.noesis.v1.ExtractionSplit.getDefaultInstance();
    }

    @java.lang.Override
    public datapower.noesis.v1.ExtractionSplit build() {
      datapower.noesis.v1.ExtractionSplit result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public datapower.noesis.v1.ExtractionSplit buildPartial() {
      datapower.noesis.v1.ExtractionSplit result = new datapower.noesis.v1.ExtractionSplit(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(datapower.noesis.v1.ExtractionSplit result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.splitId_ = splitId_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.splitToken_ = splitToken_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.estimatedRows_ = estimatedRows_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.metadata_ = internalGetMetadata();
        result.metadata_.makeImmutable();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof datapower.noesis.v1.ExtractionSplit) {
        return mergeFrom((datapower.noesis.v1.ExtractionSplit)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(datapower.noesis.v1.ExtractionSplit other) {
      if (other == datapower.noesis.v1.ExtractionSplit.getDefaultInstance()) return this;
      if (!other.getSplitId().isEmpty()) {
        splitId_ = other.splitId_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.getSplitToken() != com.google.protobuf.ByteString.EMPTY) {
        setSplitToken(other.getSplitToken());
      }
      if (other.getEstimatedRows() != 0L) {
        setEstimatedRows(other.getEstimatedRows());
      }
      internalGetMutableMetadata().mergeFrom(
          other.internalGetMetadata());
      bitField0_ |= 0x00000008;
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              splitId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              splitToken_ = input.readBytes();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 24: {
              estimatedRows_ = input.readInt64();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 34: {
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              metadata__ = input.readMessage(
                  MetadataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableMetadata().getMutableMap().put(
                  metadata__.getKey(), metadata__.getValue());
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object splitId_ = "";
    /**
     * <pre>
     * Unique identifier for this split (e.g., "split-0001")
     * </pre>
     *
     * <code>string split_id = 1 [json_name = "splitId"];</code>
     * @return The splitId.
     */
    public java.lang.String getSplitId() {
      java.lang.Object ref = splitId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        splitId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Unique identifier for this split (e.g., "split-0001")
     * </pre>
     *
     * <code>string split_id = 1 [json_name = "splitId"];</code>
     * @return The bytes for splitId.
     */
    public com.google.protobuf.ByteString
        getSplitIdBytes() {
      java.lang.Object ref = splitId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        splitId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Unique identifier for this split (e.g., "split-0001")
     * </pre>
     *
     * <code>string split_id = 1 [json_name = "splitId"];</code>
     * @param value The splitId to set.
     * @return This builder for chaining.
     */
    public Builder setSplitId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      splitId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Unique identifier for this split (e.g., "split-0001")
     * </pre>
     *
     * <code>string split_id = 1 [json_name = "splitId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearSplitId() {
      splitId_ = getDefaultInstance().getSplitId();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Unique identifier for this split (e.g., "split-0001")
     * </pre>
     *
     * <code>string split_id = 1 [json_name = "splitId"];</code>
     * @param value The bytes for splitId to set.
     * @return This builder for chaining.
     */
    public Builder setSplitIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      splitId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString splitToken_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * Opaque connector-specific split metadata
     * </pre>
     *
     * <code>bytes split_token = 2 [json_name = "splitToken"];</code>
     * @return The splitToken.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getSplitToken() {
      return splitToken_;
    }
    /**
     * <pre>
     * Opaque connector-specific split metadata
     * </pre>
     *
     * <code>bytes split_token = 2 [json_name = "splitToken"];</code>
     * @param value The splitToken to set.
     * @return This builder for chaining.
     */
    public Builder setSplitToken(com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      splitToken_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Opaque connector-specific split metadata
     * </pre>
     *
     * <code>bytes split_token = 2 [json_name = "splitToken"];</code>
     * @return This builder for chaining.
     */
    public Builder clearSplitToken() {
      bitField0_ = (bitField0_ & ~0x00000002);
      splitToken_ = getDefaultInstance().getSplitToken();
      onChanged();
      return this;
    }

    private long estimatedRows_ ;
    /**
     * <pre>
     * Estimated rows in this split (0 if unknown)
     * </pre>
     *
     * <code>int64 estimated_rows = 3 [json_name = "estimatedRows"];</code>
     * @return The estimatedRows.
     */
    @java.lang.Override
    public long getEstimatedRows() {
      return estimatedRows_;
    }
    /**
     * <pre>
     * Estimated rows in this split (0 if unknown)
     * </pre>
     *
     * <code>int64 estimated_rows = 3 [json_name = "estimatedRows"];</code>
     * @param value The estimatedRows to set.
     * @return This builder for chaining.
     */
    public Builder setEstimatedRows(long value) {

      estimatedRows_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Estimated rows in this split (0 if unknown)
     * </pre>
     *
     * <code>int64 estimated_rows = 3 [json_name = "estimatedRows"];</code>
     * @return This builder for chaining.
     */
    public Builder clearEstimatedRows() {
      bitField0_ = (bitField0_ & ~0x00000004);
      estimatedRows_ = 0L;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> metadata_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMetadata() {
      if (metadata_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MetadataDefaultEntryHolder.defaultEntry);
      }
      return metadata_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMutableMetadata() {
      if (metadata_ == null) {
        metadata_ = com.google.protobuf.MapField.newMapField(
            MetadataDefaultEntryHolder.defaultEntry);
      }
      if (!metadata_.isMutable()) {
        metadata_ = metadata_.copy();
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return metadata_;
    }
    public int getMetadataCount() {
      return internalGetMetadata().getMap().size();
    }
    /**
     * <pre>
     * Optional split metadata (for logging/debugging)
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 4 [json_name = "metadata"];</code>
     */
    @java.lang.Override
    public boolean containsMetadata(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetMetadata().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMetadataMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
      return getMetadataMap();
    }
    /**
     * <pre>
     * Optional split metadata (for logging/debugging)
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 4 [json_name = "metadata"];</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
      return internalGetMetadata().getMap();
    }
    /**
     * <pre>
     * Optional split metadata (for logging/debugging)
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 4 [json_name = "metadata"];</code>
     */
    @java.lang.Override
    public /* nullable */
java.lang.String getMetadataOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetMetadata().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Optional split metadata (for logging/debugging)
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 4 [json_name = "metadata"];</code>
     */
    @java.lang.Override
    public java.lang.String getMetadataOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetMetadata().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    public Builder clearMetadata() {
      bitField0_ = (bitField0_ & ~0x00000008);
      internalGetMutableMetadata().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * Optional split metadata (for logging/debugging)
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 4 [json_name = "metadata"];</code>
     */
    public Builder removeMetadata(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableMetadata().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String>
        getMutableMetadata() {
      bitField0_ |= 0x00000008;
      return internalGetMutableMetadata().getMutableMap();
    }
    /**
     * <pre>
     * Optional split metadata (for logging/debugging)
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 4 [json_name = "metadata"];</code>
     */
    public Builder putMetadata(
        java.lang.String key,
        java.lang.String value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) { throw new NullPointerException("map value"); }
      internalGetMutableMetadata().getMutableMap()
          .put(key, value);
      bitField0_ |= 0x00000008;
      return this;
    }
    /**
     * <pre>
     * Optional split metadata (for logging/debugging)
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 4 [json_name = "metadata"];</code>
     */
    public Builder putAllMetadata(
        java.util.Map<java.lang.String, java.lang.String> values) {
      internalGetMutableMetadata().getMutableMap()
          .putAll(values);
      bitField0_ |= 0x00000008;
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:datapower.noesis.v1.ExtractionSplit)
  }

  // @@protoc_insertion_point(class_scope:datapower.noesis.v1.ExtractionSplit)
  private static final datapower.noesis.v1.ExtractionSplit DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new datapower.noesis.v1.ExtractionSplit();
  }

  public static datapower.noesis.v1.ExtractionSplit getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ExtractionSplit>
      PARSER = new com.google.protobuf.AbstractParser<ExtractionSplit>() {
    @java.lang.Override
    public ExtractionSplit parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ExtractionSplit> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ExtractionSplit> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public datapower.noesis.v1.ExtractionSplit getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

