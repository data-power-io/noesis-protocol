// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datapower/noesis/v1/patch_events.proto

package datapower.noesis.v1;

/**
 * <pre>
 * EventValidationResult for validating transform events
 * </pre>
 *
 * Protobuf type {@code datapower.noesis.v1.EventValidationResult}
 */
public final class EventValidationResult extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:datapower.noesis.v1.EventValidationResult)
    EventValidationResultOrBuilder {
private static final long serialVersionUID = 0L;
  // Use EventValidationResult.newBuilder() to construct.
  private EventValidationResult(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private EventValidationResult() {
    errors_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    warnings_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    schemaViolations_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new EventValidationResult();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return datapower.noesis.v1.PatchEvents.internal_static_datapower_noesis_v1_EventValidationResult_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return datapower.noesis.v1.PatchEvents.internal_static_datapower_noesis_v1_EventValidationResult_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            datapower.noesis.v1.EventValidationResult.class, datapower.noesis.v1.EventValidationResult.Builder.class);
  }

  public static final int VALID_FIELD_NUMBER = 1;
  private boolean valid_ = false;
  /**
   * <pre>
   * Whether the event is valid
   * </pre>
   *
   * <code>bool valid = 1 [json_name = "valid"];</code>
   * @return The valid.
   */
  @java.lang.Override
  public boolean getValid() {
    return valid_;
  }

  public static final int ERRORS_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringArrayList errors_ =
      com.google.protobuf.LazyStringArrayList.emptyList();
  /**
   * <pre>
   * Validation errors
   * </pre>
   *
   * <code>repeated string errors = 2 [json_name = "errors"];</code>
   * @return A list containing the errors.
   */
  public com.google.protobuf.ProtocolStringList
      getErrorsList() {
    return errors_;
  }
  /**
   * <pre>
   * Validation errors
   * </pre>
   *
   * <code>repeated string errors = 2 [json_name = "errors"];</code>
   * @return The count of errors.
   */
  public int getErrorsCount() {
    return errors_.size();
  }
  /**
   * <pre>
   * Validation errors
   * </pre>
   *
   * <code>repeated string errors = 2 [json_name = "errors"];</code>
   * @param index The index of the element to return.
   * @return The errors at the given index.
   */
  public java.lang.String getErrors(int index) {
    return errors_.get(index);
  }
  /**
   * <pre>
   * Validation errors
   * </pre>
   *
   * <code>repeated string errors = 2 [json_name = "errors"];</code>
   * @param index The index of the value to return.
   * @return The bytes of the errors at the given index.
   */
  public com.google.protobuf.ByteString
      getErrorsBytes(int index) {
    return errors_.getByteString(index);
  }

  public static final int WARNINGS_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringArrayList warnings_ =
      com.google.protobuf.LazyStringArrayList.emptyList();
  /**
   * <pre>
   * Validation warnings
   * </pre>
   *
   * <code>repeated string warnings = 3 [json_name = "warnings"];</code>
   * @return A list containing the warnings.
   */
  public com.google.protobuf.ProtocolStringList
      getWarningsList() {
    return warnings_;
  }
  /**
   * <pre>
   * Validation warnings
   * </pre>
   *
   * <code>repeated string warnings = 3 [json_name = "warnings"];</code>
   * @return The count of warnings.
   */
  public int getWarningsCount() {
    return warnings_.size();
  }
  /**
   * <pre>
   * Validation warnings
   * </pre>
   *
   * <code>repeated string warnings = 3 [json_name = "warnings"];</code>
   * @param index The index of the element to return.
   * @return The warnings at the given index.
   */
  public java.lang.String getWarnings(int index) {
    return warnings_.get(index);
  }
  /**
   * <pre>
   * Validation warnings
   * </pre>
   *
   * <code>repeated string warnings = 3 [json_name = "warnings"];</code>
   * @param index The index of the value to return.
   * @return The bytes of the warnings at the given index.
   */
  public com.google.protobuf.ByteString
      getWarningsBytes(int index) {
    return warnings_.getByteString(index);
  }

  public static final int SCHEMA_VIOLATIONS_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private java.util.List<datapower.noesis.v1.SchemaViolation> schemaViolations_;
  /**
   * <pre>
   * Schema violations
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.SchemaViolation schema_violations = 4 [json_name = "schemaViolations"];</code>
   */
  @java.lang.Override
  public java.util.List<datapower.noesis.v1.SchemaViolation> getSchemaViolationsList() {
    return schemaViolations_;
  }
  /**
   * <pre>
   * Schema violations
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.SchemaViolation schema_violations = 4 [json_name = "schemaViolations"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends datapower.noesis.v1.SchemaViolationOrBuilder> 
      getSchemaViolationsOrBuilderList() {
    return schemaViolations_;
  }
  /**
   * <pre>
   * Schema violations
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.SchemaViolation schema_violations = 4 [json_name = "schemaViolations"];</code>
   */
  @java.lang.Override
  public int getSchemaViolationsCount() {
    return schemaViolations_.size();
  }
  /**
   * <pre>
   * Schema violations
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.SchemaViolation schema_violations = 4 [json_name = "schemaViolations"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.SchemaViolation getSchemaViolations(int index) {
    return schemaViolations_.get(index);
  }
  /**
   * <pre>
   * Schema violations
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.SchemaViolation schema_violations = 4 [json_name = "schemaViolations"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.SchemaViolationOrBuilder getSchemaViolationsOrBuilder(
      int index) {
    return schemaViolations_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (valid_ != false) {
      output.writeBool(1, valid_);
    }
    for (int i = 0; i < errors_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, errors_.getRaw(i));
    }
    for (int i = 0; i < warnings_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, warnings_.getRaw(i));
    }
    for (int i = 0; i < schemaViolations_.size(); i++) {
      output.writeMessage(4, schemaViolations_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (valid_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(1, valid_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < errors_.size(); i++) {
        dataSize += computeStringSizeNoTag(errors_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getErrorsList().size();
    }
    {
      int dataSize = 0;
      for (int i = 0; i < warnings_.size(); i++) {
        dataSize += computeStringSizeNoTag(warnings_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getWarningsList().size();
    }
    for (int i = 0; i < schemaViolations_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, schemaViolations_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof datapower.noesis.v1.EventValidationResult)) {
      return super.equals(obj);
    }
    datapower.noesis.v1.EventValidationResult other = (datapower.noesis.v1.EventValidationResult) obj;

    if (getValid()
        != other.getValid()) return false;
    if (!getErrorsList()
        .equals(other.getErrorsList())) return false;
    if (!getWarningsList()
        .equals(other.getWarningsList())) return false;
    if (!getSchemaViolationsList()
        .equals(other.getSchemaViolationsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + VALID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getValid());
    if (getErrorsCount() > 0) {
      hash = (37 * hash) + ERRORS_FIELD_NUMBER;
      hash = (53 * hash) + getErrorsList().hashCode();
    }
    if (getWarningsCount() > 0) {
      hash = (37 * hash) + WARNINGS_FIELD_NUMBER;
      hash = (53 * hash) + getWarningsList().hashCode();
    }
    if (getSchemaViolationsCount() > 0) {
      hash = (37 * hash) + SCHEMA_VIOLATIONS_FIELD_NUMBER;
      hash = (53 * hash) + getSchemaViolationsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static datapower.noesis.v1.EventValidationResult parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.EventValidationResult parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.EventValidationResult parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.EventValidationResult parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.EventValidationResult parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.EventValidationResult parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.EventValidationResult parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.EventValidationResult parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static datapower.noesis.v1.EventValidationResult parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static datapower.noesis.v1.EventValidationResult parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static datapower.noesis.v1.EventValidationResult parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.EventValidationResult parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(datapower.noesis.v1.EventValidationResult prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * EventValidationResult for validating transform events
   * </pre>
   *
   * Protobuf type {@code datapower.noesis.v1.EventValidationResult}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:datapower.noesis.v1.EventValidationResult)
      datapower.noesis.v1.EventValidationResultOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return datapower.noesis.v1.PatchEvents.internal_static_datapower_noesis_v1_EventValidationResult_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return datapower.noesis.v1.PatchEvents.internal_static_datapower_noesis_v1_EventValidationResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              datapower.noesis.v1.EventValidationResult.class, datapower.noesis.v1.EventValidationResult.Builder.class);
    }

    // Construct using datapower.noesis.v1.EventValidationResult.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      valid_ = false;
      errors_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      warnings_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      if (schemaViolationsBuilder_ == null) {
        schemaViolations_ = java.util.Collections.emptyList();
      } else {
        schemaViolations_ = null;
        schemaViolationsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return datapower.noesis.v1.PatchEvents.internal_static_datapower_noesis_v1_EventValidationResult_descriptor;
    }

    @java.lang.Override
    public datapower.noesis.v1.EventValidationResult getDefaultInstanceForType() {
      return datapower.noesis.v1.EventValidationResult.getDefaultInstance();
    }

    @java.lang.Override
    public datapower.noesis.v1.EventValidationResult build() {
      datapower.noesis.v1.EventValidationResult result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public datapower.noesis.v1.EventValidationResult buildPartial() {
      datapower.noesis.v1.EventValidationResult result = new datapower.noesis.v1.EventValidationResult(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(datapower.noesis.v1.EventValidationResult result) {
      if (schemaViolationsBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          schemaViolations_ = java.util.Collections.unmodifiableList(schemaViolations_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.schemaViolations_ = schemaViolations_;
      } else {
        result.schemaViolations_ = schemaViolationsBuilder_.build();
      }
    }

    private void buildPartial0(datapower.noesis.v1.EventValidationResult result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.valid_ = valid_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        errors_.makeImmutable();
        result.errors_ = errors_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        warnings_.makeImmutable();
        result.warnings_ = warnings_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof datapower.noesis.v1.EventValidationResult) {
        return mergeFrom((datapower.noesis.v1.EventValidationResult)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(datapower.noesis.v1.EventValidationResult other) {
      if (other == datapower.noesis.v1.EventValidationResult.getDefaultInstance()) return this;
      if (other.getValid() != false) {
        setValid(other.getValid());
      }
      if (!other.errors_.isEmpty()) {
        if (errors_.isEmpty()) {
          errors_ = other.errors_;
          bitField0_ |= 0x00000002;
        } else {
          ensureErrorsIsMutable();
          errors_.addAll(other.errors_);
        }
        onChanged();
      }
      if (!other.warnings_.isEmpty()) {
        if (warnings_.isEmpty()) {
          warnings_ = other.warnings_;
          bitField0_ |= 0x00000004;
        } else {
          ensureWarningsIsMutable();
          warnings_.addAll(other.warnings_);
        }
        onChanged();
      }
      if (schemaViolationsBuilder_ == null) {
        if (!other.schemaViolations_.isEmpty()) {
          if (schemaViolations_.isEmpty()) {
            schemaViolations_ = other.schemaViolations_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureSchemaViolationsIsMutable();
            schemaViolations_.addAll(other.schemaViolations_);
          }
          onChanged();
        }
      } else {
        if (!other.schemaViolations_.isEmpty()) {
          if (schemaViolationsBuilder_.isEmpty()) {
            schemaViolationsBuilder_.dispose();
            schemaViolationsBuilder_ = null;
            schemaViolations_ = other.schemaViolations_;
            bitField0_ = (bitField0_ & ~0x00000008);
            schemaViolationsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSchemaViolationsFieldBuilder() : null;
          } else {
            schemaViolationsBuilder_.addAllMessages(other.schemaViolations_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              valid_ = input.readBool();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureErrorsIsMutable();
              errors_.add(s);
              break;
            } // case 18
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureWarningsIsMutable();
              warnings_.add(s);
              break;
            } // case 26
            case 34: {
              datapower.noesis.v1.SchemaViolation m =
                  input.readMessage(
                      datapower.noesis.v1.SchemaViolation.parser(),
                      extensionRegistry);
              if (schemaViolationsBuilder_ == null) {
                ensureSchemaViolationsIsMutable();
                schemaViolations_.add(m);
              } else {
                schemaViolationsBuilder_.addMessage(m);
              }
              break;
            } // case 34
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private boolean valid_ ;
    /**
     * <pre>
     * Whether the event is valid
     * </pre>
     *
     * <code>bool valid = 1 [json_name = "valid"];</code>
     * @return The valid.
     */
    @java.lang.Override
    public boolean getValid() {
      return valid_;
    }
    /**
     * <pre>
     * Whether the event is valid
     * </pre>
     *
     * <code>bool valid = 1 [json_name = "valid"];</code>
     * @param value The valid to set.
     * @return This builder for chaining.
     */
    public Builder setValid(boolean value) {

      valid_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether the event is valid
     * </pre>
     *
     * <code>bool valid = 1 [json_name = "valid"];</code>
     * @return This builder for chaining.
     */
    public Builder clearValid() {
      bitField0_ = (bitField0_ & ~0x00000001);
      valid_ = false;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringArrayList errors_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    private void ensureErrorsIsMutable() {
      if (!errors_.isModifiable()) {
        errors_ = new com.google.protobuf.LazyStringArrayList(errors_);
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <pre>
     * Validation errors
     * </pre>
     *
     * <code>repeated string errors = 2 [json_name = "errors"];</code>
     * @return A list containing the errors.
     */
    public com.google.protobuf.ProtocolStringList
        getErrorsList() {
      errors_.makeImmutable();
      return errors_;
    }
    /**
     * <pre>
     * Validation errors
     * </pre>
     *
     * <code>repeated string errors = 2 [json_name = "errors"];</code>
     * @return The count of errors.
     */
    public int getErrorsCount() {
      return errors_.size();
    }
    /**
     * <pre>
     * Validation errors
     * </pre>
     *
     * <code>repeated string errors = 2 [json_name = "errors"];</code>
     * @param index The index of the element to return.
     * @return The errors at the given index.
     */
    public java.lang.String getErrors(int index) {
      return errors_.get(index);
    }
    /**
     * <pre>
     * Validation errors
     * </pre>
     *
     * <code>repeated string errors = 2 [json_name = "errors"];</code>
     * @param index The index of the value to return.
     * @return The bytes of the errors at the given index.
     */
    public com.google.protobuf.ByteString
        getErrorsBytes(int index) {
      return errors_.getByteString(index);
    }
    /**
     * <pre>
     * Validation errors
     * </pre>
     *
     * <code>repeated string errors = 2 [json_name = "errors"];</code>
     * @param index The index to set the value at.
     * @param value The errors to set.
     * @return This builder for chaining.
     */
    public Builder setErrors(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureErrorsIsMutable();
      errors_.set(index, value);
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Validation errors
     * </pre>
     *
     * <code>repeated string errors = 2 [json_name = "errors"];</code>
     * @param value The errors to add.
     * @return This builder for chaining.
     */
    public Builder addErrors(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureErrorsIsMutable();
      errors_.add(value);
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Validation errors
     * </pre>
     *
     * <code>repeated string errors = 2 [json_name = "errors"];</code>
     * @param values The errors to add.
     * @return This builder for chaining.
     */
    public Builder addAllErrors(
        java.lang.Iterable<java.lang.String> values) {
      ensureErrorsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, errors_);
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Validation errors
     * </pre>
     *
     * <code>repeated string errors = 2 [json_name = "errors"];</code>
     * @return This builder for chaining.
     */
    public Builder clearErrors() {
      errors_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
      bitField0_ = (bitField0_ & ~0x00000002);;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Validation errors
     * </pre>
     *
     * <code>repeated string errors = 2 [json_name = "errors"];</code>
     * @param value The bytes of the errors to add.
     * @return This builder for chaining.
     */
    public Builder addErrorsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureErrorsIsMutable();
      errors_.add(value);
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringArrayList warnings_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    private void ensureWarningsIsMutable() {
      if (!warnings_.isModifiable()) {
        warnings_ = new com.google.protobuf.LazyStringArrayList(warnings_);
      }
      bitField0_ |= 0x00000004;
    }
    /**
     * <pre>
     * Validation warnings
     * </pre>
     *
     * <code>repeated string warnings = 3 [json_name = "warnings"];</code>
     * @return A list containing the warnings.
     */
    public com.google.protobuf.ProtocolStringList
        getWarningsList() {
      warnings_.makeImmutable();
      return warnings_;
    }
    /**
     * <pre>
     * Validation warnings
     * </pre>
     *
     * <code>repeated string warnings = 3 [json_name = "warnings"];</code>
     * @return The count of warnings.
     */
    public int getWarningsCount() {
      return warnings_.size();
    }
    /**
     * <pre>
     * Validation warnings
     * </pre>
     *
     * <code>repeated string warnings = 3 [json_name = "warnings"];</code>
     * @param index The index of the element to return.
     * @return The warnings at the given index.
     */
    public java.lang.String getWarnings(int index) {
      return warnings_.get(index);
    }
    /**
     * <pre>
     * Validation warnings
     * </pre>
     *
     * <code>repeated string warnings = 3 [json_name = "warnings"];</code>
     * @param index The index of the value to return.
     * @return The bytes of the warnings at the given index.
     */
    public com.google.protobuf.ByteString
        getWarningsBytes(int index) {
      return warnings_.getByteString(index);
    }
    /**
     * <pre>
     * Validation warnings
     * </pre>
     *
     * <code>repeated string warnings = 3 [json_name = "warnings"];</code>
     * @param index The index to set the value at.
     * @param value The warnings to set.
     * @return This builder for chaining.
     */
    public Builder setWarnings(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureWarningsIsMutable();
      warnings_.set(index, value);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Validation warnings
     * </pre>
     *
     * <code>repeated string warnings = 3 [json_name = "warnings"];</code>
     * @param value The warnings to add.
     * @return This builder for chaining.
     */
    public Builder addWarnings(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureWarningsIsMutable();
      warnings_.add(value);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Validation warnings
     * </pre>
     *
     * <code>repeated string warnings = 3 [json_name = "warnings"];</code>
     * @param values The warnings to add.
     * @return This builder for chaining.
     */
    public Builder addAllWarnings(
        java.lang.Iterable<java.lang.String> values) {
      ensureWarningsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, warnings_);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Validation warnings
     * </pre>
     *
     * <code>repeated string warnings = 3 [json_name = "warnings"];</code>
     * @return This builder for chaining.
     */
    public Builder clearWarnings() {
      warnings_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
      bitField0_ = (bitField0_ & ~0x00000004);;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Validation warnings
     * </pre>
     *
     * <code>repeated string warnings = 3 [json_name = "warnings"];</code>
     * @param value The bytes of the warnings to add.
     * @return This builder for chaining.
     */
    public Builder addWarningsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureWarningsIsMutable();
      warnings_.add(value);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private java.util.List<datapower.noesis.v1.SchemaViolation> schemaViolations_ =
      java.util.Collections.emptyList();
    private void ensureSchemaViolationsIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        schemaViolations_ = new java.util.ArrayList<datapower.noesis.v1.SchemaViolation>(schemaViolations_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        datapower.noesis.v1.SchemaViolation, datapower.noesis.v1.SchemaViolation.Builder, datapower.noesis.v1.SchemaViolationOrBuilder> schemaViolationsBuilder_;

    /**
     * <pre>
     * Schema violations
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.SchemaViolation schema_violations = 4 [json_name = "schemaViolations"];</code>
     */
    public java.util.List<datapower.noesis.v1.SchemaViolation> getSchemaViolationsList() {
      if (schemaViolationsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(schemaViolations_);
      } else {
        return schemaViolationsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Schema violations
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.SchemaViolation schema_violations = 4 [json_name = "schemaViolations"];</code>
     */
    public int getSchemaViolationsCount() {
      if (schemaViolationsBuilder_ == null) {
        return schemaViolations_.size();
      } else {
        return schemaViolationsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Schema violations
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.SchemaViolation schema_violations = 4 [json_name = "schemaViolations"];</code>
     */
    public datapower.noesis.v1.SchemaViolation getSchemaViolations(int index) {
      if (schemaViolationsBuilder_ == null) {
        return schemaViolations_.get(index);
      } else {
        return schemaViolationsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Schema violations
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.SchemaViolation schema_violations = 4 [json_name = "schemaViolations"];</code>
     */
    public Builder setSchemaViolations(
        int index, datapower.noesis.v1.SchemaViolation value) {
      if (schemaViolationsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSchemaViolationsIsMutable();
        schemaViolations_.set(index, value);
        onChanged();
      } else {
        schemaViolationsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Schema violations
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.SchemaViolation schema_violations = 4 [json_name = "schemaViolations"];</code>
     */
    public Builder setSchemaViolations(
        int index, datapower.noesis.v1.SchemaViolation.Builder builderForValue) {
      if (schemaViolationsBuilder_ == null) {
        ensureSchemaViolationsIsMutable();
        schemaViolations_.set(index, builderForValue.build());
        onChanged();
      } else {
        schemaViolationsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Schema violations
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.SchemaViolation schema_violations = 4 [json_name = "schemaViolations"];</code>
     */
    public Builder addSchemaViolations(datapower.noesis.v1.SchemaViolation value) {
      if (schemaViolationsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSchemaViolationsIsMutable();
        schemaViolations_.add(value);
        onChanged();
      } else {
        schemaViolationsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Schema violations
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.SchemaViolation schema_violations = 4 [json_name = "schemaViolations"];</code>
     */
    public Builder addSchemaViolations(
        int index, datapower.noesis.v1.SchemaViolation value) {
      if (schemaViolationsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSchemaViolationsIsMutable();
        schemaViolations_.add(index, value);
        onChanged();
      } else {
        schemaViolationsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Schema violations
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.SchemaViolation schema_violations = 4 [json_name = "schemaViolations"];</code>
     */
    public Builder addSchemaViolations(
        datapower.noesis.v1.SchemaViolation.Builder builderForValue) {
      if (schemaViolationsBuilder_ == null) {
        ensureSchemaViolationsIsMutable();
        schemaViolations_.add(builderForValue.build());
        onChanged();
      } else {
        schemaViolationsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Schema violations
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.SchemaViolation schema_violations = 4 [json_name = "schemaViolations"];</code>
     */
    public Builder addSchemaViolations(
        int index, datapower.noesis.v1.SchemaViolation.Builder builderForValue) {
      if (schemaViolationsBuilder_ == null) {
        ensureSchemaViolationsIsMutable();
        schemaViolations_.add(index, builderForValue.build());
        onChanged();
      } else {
        schemaViolationsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Schema violations
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.SchemaViolation schema_violations = 4 [json_name = "schemaViolations"];</code>
     */
    public Builder addAllSchemaViolations(
        java.lang.Iterable<? extends datapower.noesis.v1.SchemaViolation> values) {
      if (schemaViolationsBuilder_ == null) {
        ensureSchemaViolationsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, schemaViolations_);
        onChanged();
      } else {
        schemaViolationsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Schema violations
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.SchemaViolation schema_violations = 4 [json_name = "schemaViolations"];</code>
     */
    public Builder clearSchemaViolations() {
      if (schemaViolationsBuilder_ == null) {
        schemaViolations_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        schemaViolationsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Schema violations
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.SchemaViolation schema_violations = 4 [json_name = "schemaViolations"];</code>
     */
    public Builder removeSchemaViolations(int index) {
      if (schemaViolationsBuilder_ == null) {
        ensureSchemaViolationsIsMutable();
        schemaViolations_.remove(index);
        onChanged();
      } else {
        schemaViolationsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Schema violations
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.SchemaViolation schema_violations = 4 [json_name = "schemaViolations"];</code>
     */
    public datapower.noesis.v1.SchemaViolation.Builder getSchemaViolationsBuilder(
        int index) {
      return getSchemaViolationsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Schema violations
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.SchemaViolation schema_violations = 4 [json_name = "schemaViolations"];</code>
     */
    public datapower.noesis.v1.SchemaViolationOrBuilder getSchemaViolationsOrBuilder(
        int index) {
      if (schemaViolationsBuilder_ == null) {
        return schemaViolations_.get(index);  } else {
        return schemaViolationsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Schema violations
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.SchemaViolation schema_violations = 4 [json_name = "schemaViolations"];</code>
     */
    public java.util.List<? extends datapower.noesis.v1.SchemaViolationOrBuilder> 
         getSchemaViolationsOrBuilderList() {
      if (schemaViolationsBuilder_ != null) {
        return schemaViolationsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(schemaViolations_);
      }
    }
    /**
     * <pre>
     * Schema violations
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.SchemaViolation schema_violations = 4 [json_name = "schemaViolations"];</code>
     */
    public datapower.noesis.v1.SchemaViolation.Builder addSchemaViolationsBuilder() {
      return getSchemaViolationsFieldBuilder().addBuilder(
          datapower.noesis.v1.SchemaViolation.getDefaultInstance());
    }
    /**
     * <pre>
     * Schema violations
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.SchemaViolation schema_violations = 4 [json_name = "schemaViolations"];</code>
     */
    public datapower.noesis.v1.SchemaViolation.Builder addSchemaViolationsBuilder(
        int index) {
      return getSchemaViolationsFieldBuilder().addBuilder(
          index, datapower.noesis.v1.SchemaViolation.getDefaultInstance());
    }
    /**
     * <pre>
     * Schema violations
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.SchemaViolation schema_violations = 4 [json_name = "schemaViolations"];</code>
     */
    public java.util.List<datapower.noesis.v1.SchemaViolation.Builder> 
         getSchemaViolationsBuilderList() {
      return getSchemaViolationsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        datapower.noesis.v1.SchemaViolation, datapower.noesis.v1.SchemaViolation.Builder, datapower.noesis.v1.SchemaViolationOrBuilder> 
        getSchemaViolationsFieldBuilder() {
      if (schemaViolationsBuilder_ == null) {
        schemaViolationsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            datapower.noesis.v1.SchemaViolation, datapower.noesis.v1.SchemaViolation.Builder, datapower.noesis.v1.SchemaViolationOrBuilder>(
                schemaViolations_,
                ((bitField0_ & 0x00000008) != 0),
                getParentForChildren(),
                isClean());
        schemaViolations_ = null;
      }
      return schemaViolationsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:datapower.noesis.v1.EventValidationResult)
  }

  // @@protoc_insertion_point(class_scope:datapower.noesis.v1.EventValidationResult)
  private static final datapower.noesis.v1.EventValidationResult DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new datapower.noesis.v1.EventValidationResult();
  }

  public static datapower.noesis.v1.EventValidationResult getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<EventValidationResult>
      PARSER = new com.google.protobuf.AbstractParser<EventValidationResult>() {
    @java.lang.Override
    public EventValidationResult parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<EventValidationResult> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<EventValidationResult> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public datapower.noesis.v1.EventValidationResult getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

