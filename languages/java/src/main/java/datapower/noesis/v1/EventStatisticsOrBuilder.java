// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datapower/noesis/v1/patch_events.proto

package datapower.noesis.v1;

public interface EventStatisticsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:datapower.noesis.v1.EventStatistics)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Pipeline name
   * </pre>
   *
   * <code>string pipeline_name = 1 [json_name = "pipelineName"];</code>
   * @return The pipelineName.
   */
  java.lang.String getPipelineName();
  /**
   * <pre>
   * Pipeline name
   * </pre>
   *
   * <code>string pipeline_name = 1 [json_name = "pipelineName"];</code>
   * @return The bytes for pipelineName.
   */
  com.google.protobuf.ByteString
      getPipelineNameBytes();

  /**
   * <pre>
   * Time window for these statistics
   * </pre>
   *
   * <code>.google.protobuf.Timestamp window_start = 2 [json_name = "windowStart"];</code>
   * @return Whether the windowStart field is set.
   */
  boolean hasWindowStart();
  /**
   * <pre>
   * Time window for these statistics
   * </pre>
   *
   * <code>.google.protobuf.Timestamp window_start = 2 [json_name = "windowStart"];</code>
   * @return The windowStart.
   */
  com.google.protobuf.Timestamp getWindowStart();
  /**
   * <pre>
   * Time window for these statistics
   * </pre>
   *
   * <code>.google.protobuf.Timestamp window_start = 2 [json_name = "windowStart"];</code>
   */
  com.google.protobuf.TimestampOrBuilder getWindowStartOrBuilder();

  /**
   * <code>.google.protobuf.Timestamp window_end = 3 [json_name = "windowEnd"];</code>
   * @return Whether the windowEnd field is set.
   */
  boolean hasWindowEnd();
  /**
   * <code>.google.protobuf.Timestamp window_end = 3 [json_name = "windowEnd"];</code>
   * @return The windowEnd.
   */
  com.google.protobuf.Timestamp getWindowEnd();
  /**
   * <code>.google.protobuf.Timestamp window_end = 3 [json_name = "windowEnd"];</code>
   */
  com.google.protobuf.TimestampOrBuilder getWindowEndOrBuilder();

  /**
   * <pre>
   * Event counts by type
   * </pre>
   *
   * <code>int64 attribute_patch_count = 4 [json_name = "attributePatchCount"];</code>
   * @return The attributePatchCount.
   */
  long getAttributePatchCount();

  /**
   * <code>int64 full_state_count = 5 [json_name = "fullStateCount"];</code>
   * @return The fullStateCount.
   */
  long getFullStateCount();

  /**
   * <code>int64 delete_count = 6 [json_name = "deleteCount"];</code>
   * @return The deleteCount.
   */
  long getDeleteCount();

  /**
   * <pre>
   * Total events
   * </pre>
   *
   * <code>int64 total_events = 7 [json_name = "totalEvents"];</code>
   * @return The totalEvents.
   */
  long getTotalEvents();

  /**
   * <pre>
   * Bytes processed
   * </pre>
   *
   * <code>int64 total_bytes = 8 [json_name = "totalBytes"];</code>
   * @return The totalBytes.
   */
  long getTotalBytes();

  /**
   * <pre>
   * Events per second
   * </pre>
   *
   * <code>double events_per_second = 9 [json_name = "eventsPerSecond"];</code>
   * @return The eventsPerSecond.
   */
  double getEventsPerSecond();

  /**
   * <pre>
   * Bytes per second
   * </pre>
   *
   * <code>double bytes_per_second = 10 [json_name = "bytesPerSecond"];</code>
   * @return The bytesPerSecond.
   */
  double getBytesPerSecond();

  /**
   * <pre>
   * Per-job statistics
   * </pre>
   *
   * <code>map&lt;string, .datapower.noesis.v1.JobStatistics&gt; job_stats = 11 [json_name = "jobStats"];</code>
   */
  int getJobStatsCount();
  /**
   * <pre>
   * Per-job statistics
   * </pre>
   *
   * <code>map&lt;string, .datapower.noesis.v1.JobStatistics&gt; job_stats = 11 [json_name = "jobStats"];</code>
   */
  boolean containsJobStats(
      java.lang.String key);
  /**
   * Use {@link #getJobStatsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, datapower.noesis.v1.JobStatistics>
  getJobStats();
  /**
   * <pre>
   * Per-job statistics
   * </pre>
   *
   * <code>map&lt;string, .datapower.noesis.v1.JobStatistics&gt; job_stats = 11 [json_name = "jobStats"];</code>
   */
  java.util.Map<java.lang.String, datapower.noesis.v1.JobStatistics>
  getJobStatsMap();
  /**
   * <pre>
   * Per-job statistics
   * </pre>
   *
   * <code>map&lt;string, .datapower.noesis.v1.JobStatistics&gt; job_stats = 11 [json_name = "jobStats"];</code>
   */
  /* nullable */
datapower.noesis.v1.JobStatistics getJobStatsOrDefault(
      java.lang.String key,
      /* nullable */
datapower.noesis.v1.JobStatistics defaultValue);
  /**
   * <pre>
   * Per-job statistics
   * </pre>
   *
   * <code>map&lt;string, .datapower.noesis.v1.JobStatistics&gt; job_stats = 11 [json_name = "jobStats"];</code>
   */
  datapower.noesis.v1.JobStatistics getJobStatsOrThrow(
      java.lang.String key);
}
