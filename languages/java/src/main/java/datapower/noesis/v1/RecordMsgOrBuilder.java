// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datapower/noesis/v1/connector.proto

package datapower.noesis.v1;

public interface RecordMsgOrBuilder extends
    // @@protoc_insertion_point(interface_extends:datapower.noesis.v1.RecordMsg)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * e.g., "Part" or "BOMLink"
   * </pre>
   *
   * <code>string entity = 1 [json_name = "entity"];</code>
   * @return The entity.
   */
  java.lang.String getEntity();
  /**
   * <pre>
   * e.g., "Part" or "BOMLink"
   * </pre>
   *
   * <code>string entity = 1 [json_name = "entity"];</code>
   * @return The bytes for entity.
   */
  com.google.protobuf.ByteString
      getEntityBytes();

  /**
   * <pre>
   * Primary key serialized (unique within entity)
   * </pre>
   *
   * <code>string key = 2 [json_name = "key"];</code>
   * @return The key.
   */
  java.lang.String getKey();
  /**
   * <pre>
   * Primary key serialized (unique within entity)
   * </pre>
   *
   * <code>string key = 2 [json_name = "key"];</code>
   * @return The bytes for key.
   */
  com.google.protobuf.ByteString
      getKeyBytes();

  /**
   * <pre>
   * Row payload (Arrow/Avro/JSON â€” choice must match StructuredSchemaDescriptor)
   * </pre>
   *
   * <code>bytes payload = 3 [json_name = "payload"];</code>
   * @return The payload.
   */
  com.google.protobuf.ByteString getPayload();

  /**
   * <pre>
   * Version to validate reader compatibility
   * </pre>
   *
   * <code>string schema_id = 4 [json_name = "schemaId"];</code>
   * @return The schemaId.
   */
  java.lang.String getSchemaId();
  /**
   * <pre>
   * Version to validate reader compatibility
   * </pre>
   *
   * <code>string schema_id = 4 [json_name = "schemaId"];</code>
   * @return The bytes for schemaId.
   */
  com.google.protobuf.ByteString
      getSchemaIdBytes();

  /**
   * <pre>
   * UPSERT/DELETE
   * </pre>
   *
   * <code>.datapower.noesis.v1.Op op = 5 [json_name = "op"];</code>
   * @return The enum numeric value on the wire for op.
   */
  int getOpValue();
  /**
   * <pre>
   * UPSERT/DELETE
   * </pre>
   *
   * <code>.datapower.noesis.v1.Op op = 5 [json_name = "op"];</code>
   * @return The op.
   */
  datapower.noesis.v1.Op getOp();

  /**
   * <pre>
   * For subgraph: group all records belonging to the same head
   * </pre>
   *
   * <code>string group_id = 6 [json_name = "groupId"];</code>
   * @return The groupId.
   */
  java.lang.String getGroupId();
  /**
   * <pre>
   * For subgraph: group all records belonging to the same head
   * </pre>
   *
   * <code>string group_id = 6 [json_name = "groupId"];</code>
   * @return The bytes for groupId.
   */
  com.google.protobuf.ByteString
      getGroupIdBytes();

  /**
   * <pre>
   * Logical event time (watermark) in epoch millis
   * </pre>
   *
   * <code>int64 ts_event = 7 [json_name = "tsEvent"];</code>
   * @return The tsEvent.
   */
  long getTsEvent();
}
