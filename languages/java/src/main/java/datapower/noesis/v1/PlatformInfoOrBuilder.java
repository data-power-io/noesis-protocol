// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datapower/noesis/v1/connector.proto

package datapower.noesis.v1;

public interface PlatformInfoOrBuilder extends
    // @@protoc_insertion_point(interface_extends:datapower.noesis.v1.PlatformInfo)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * e.g., "Windchill", "Teamcenter", "PostgreSQL"
   * </pre>
   *
   * <code>string name = 1 [json_name = "name"];</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * e.g., "Windchill", "Teamcenter", "PostgreSQL"
   * </pre>
   *
   * <code>string name = 1 [json_name = "name"];</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * e.g., "PTC", "Siemens", "PostgreSQL Global Dev"
   * </pre>
   *
   * <code>string vendor = 2 [json_name = "vendor"];</code>
   * @return The vendor.
   */
  java.lang.String getVendor();
  /**
   * <pre>
   * e.g., "PTC", "Siemens", "PostgreSQL Global Dev"
   * </pre>
   *
   * <code>string vendor = 2 [json_name = "vendor"];</code>
   * @return The bytes for vendor.
   */
  com.google.protobuf.ByteString
      getVendorBytes();

  /**
   * <pre>
   * e.g., "12.3"
   * </pre>
   *
   * <code>string version = 3 [json_name = "version"];</code>
   * @return The version.
   */
  java.lang.String getVersion();
  /**
   * <pre>
   * e.g., "12.3"
   * </pre>
   *
   * <code>string version = 3 [json_name = "version"];</code>
   * @return The bytes for version.
   */
  com.google.protobuf.ByteString
      getVersionBytes();

  /**
   * <pre>
   * e.g., "UTC"
   * </pre>
   *
   * <code>string timezone = 4 [json_name = "timezone"];</code>
   * @return The timezone.
   */
  java.lang.String getTimezone();
  /**
   * <pre>
   * e.g., "UTC"
   * </pre>
   *
   * <code>string timezone = 4 [json_name = "timezone"];</code>
   * @return The bytes for timezone.
   */
  com.google.protobuf.ByteString
      getTimezoneBytes();

  /**
   * <pre>
   * Free-form: edition, api_tier, region, etc.
   * </pre>
   *
   * <code>map&lt;string, string&gt; tags = 5 [json_name = "tags"];</code>
   */
  int getTagsCount();
  /**
   * <pre>
   * Free-form: edition, api_tier, region, etc.
   * </pre>
   *
   * <code>map&lt;string, string&gt; tags = 5 [json_name = "tags"];</code>
   */
  boolean containsTags(
      java.lang.String key);
  /**
   * Use {@link #getTagsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getTags();
  /**
   * <pre>
   * Free-form: edition, api_tier, region, etc.
   * </pre>
   *
   * <code>map&lt;string, string&gt; tags = 5 [json_name = "tags"];</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getTagsMap();
  /**
   * <pre>
   * Free-form: edition, api_tier, region, etc.
   * </pre>
   *
   * <code>map&lt;string, string&gt; tags = 5 [json_name = "tags"];</code>
   */
  /* nullable */
java.lang.String getTagsOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * Free-form: edition, api_tier, region, etc.
   * </pre>
   *
   * <code>map&lt;string, string&gt; tags = 5 [json_name = "tags"];</code>
   */
  java.lang.String getTagsOrThrow(
      java.lang.String key);
}
