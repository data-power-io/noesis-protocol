// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datapower/noesis/v1/connector.proto

package datapower.noesis.v1;

public interface PlanExtractionResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:datapower.noesis.v1.PlanExtractionResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * List of independent extraction splits
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.ExtractionSplit splits = 1 [json_name = "splits"];</code>
   */
  java.util.List<datapower.noesis.v1.ExtractionSplit> 
      getSplitsList();
  /**
   * <pre>
   * List of independent extraction splits
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.ExtractionSplit splits = 1 [json_name = "splits"];</code>
   */
  datapower.noesis.v1.ExtractionSplit getSplits(int index);
  /**
   * <pre>
   * List of independent extraction splits
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.ExtractionSplit splits = 1 [json_name = "splits"];</code>
   */
  int getSplitsCount();
  /**
   * <pre>
   * List of independent extraction splits
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.ExtractionSplit splits = 1 [json_name = "splits"];</code>
   */
  java.util.List<? extends datapower.noesis.v1.ExtractionSplitOrBuilder> 
      getSplitsOrBuilderList();
  /**
   * <pre>
   * List of independent extraction splits
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.ExtractionSplit splits = 1 [json_name = "splits"];</code>
   */
  datapower.noesis.v1.ExtractionSplitOrBuilder getSplitsOrBuilder(
      int index);

  /**
   * <pre>
   * Optional: snapshot identifier for consistency
   * </pre>
   *
   * <code>string snapshot_id = 2 [json_name = "snapshotId"];</code>
   * @return The snapshotId.
   */
  java.lang.String getSnapshotId();
  /**
   * <pre>
   * Optional: snapshot identifier for consistency
   * </pre>
   *
   * <code>string snapshot_id = 2 [json_name = "snapshotId"];</code>
   * @return The bytes for snapshotId.
   */
  com.google.protobuf.ByteString
      getSnapshotIdBytes();

  /**
   * <pre>
   * Total estimated rows across all splits
   * </pre>
   *
   * <code>int64 total_estimated_rows = 3 [json_name = "totalEstimatedRows"];</code>
   * @return The totalEstimatedRows.
   */
  long getTotalEstimatedRows();
}
