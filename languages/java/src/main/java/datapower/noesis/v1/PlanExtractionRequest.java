// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datapower/noesis/v1/connector.proto

package datapower.noesis.v1;

/**
 * <pre>
 * Plan parallel extraction for a batch source entity.
 * The connector analyzes the entity and returns N independent splits
 * that can be extracted in parallel for optimal throughput.
 * </pre>
 *
 * Protobuf type {@code datapower.noesis.v1.PlanExtractionRequest}
 */
public final class PlanExtractionRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:datapower.noesis.v1.PlanExtractionRequest)
    PlanExtractionRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use PlanExtractionRequest.newBuilder() to construct.
  private PlanExtractionRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private PlanExtractionRequest() {
    tenantId_ = "";
    entity_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new PlanExtractionRequest();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_PlanExtractionRequest_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 4:
        return internalGetConfig();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_PlanExtractionRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            datapower.noesis.v1.PlanExtractionRequest.class, datapower.noesis.v1.PlanExtractionRequest.Builder.class);
  }

  public static final int TENANT_ID_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object tenantId_ = "";
  /**
   * <pre>
   * For multi-tenant scoping
   * </pre>
   *
   * <code>string tenant_id = 1 [json_name = "tenantId"];</code>
   * @return The tenantId.
   */
  @java.lang.Override
  public java.lang.String getTenantId() {
    java.lang.Object ref = tenantId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      tenantId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * For multi-tenant scoping
   * </pre>
   *
   * <code>string tenant_id = 1 [json_name = "tenantId"];</code>
   * @return The bytes for tenantId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTenantIdBytes() {
    java.lang.Object ref = tenantId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      tenantId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ENTITY_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object entity_ = "";
  /**
   * <pre>
   * Entity to extract (e.g., "customers")
   * </pre>
   *
   * <code>string entity = 2 [json_name = "entity"];</code>
   * @return The entity.
   */
  @java.lang.Override
  public java.lang.String getEntity() {
    java.lang.Object ref = entity_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      entity_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Entity to extract (e.g., "customers")
   * </pre>
   *
   * <code>string entity = 2 [json_name = "entity"];</code>
   * @return The bytes for entity.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getEntityBytes() {
    java.lang.Object ref = entity_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      entity_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DESIRED_PARALLELISM_FIELD_NUMBER = 3;
  private int desiredParallelism_ = 0;
  /**
   * <pre>
   * Hint: how many splits to generate (connector may adjust)
   * </pre>
   *
   * <code>int32 desired_parallelism = 3 [json_name = "desiredParallelism"];</code>
   * @return The desiredParallelism.
   */
  @java.lang.Override
  public int getDesiredParallelism() {
    return desiredParallelism_;
  }

  public static final int CONFIG_FIELD_NUMBER = 4;
  private static final class ConfigDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.String>newDefaultInstance(
                datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_PlanExtractionRequest_ConfigEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.String> config_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.String>
  internalGetConfig() {
    if (config_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          ConfigDefaultEntryHolder.defaultEntry);
    }
    return config_;
  }
  public int getConfigCount() {
    return internalGetConfig().getMap().size();
  }
  /**
   * <pre>
   * Source connection configuration
   * </pre>
   *
   * <code>map&lt;string, string&gt; config = 4 [json_name = "config"];</code>
   */
  @java.lang.Override
  public boolean containsConfig(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetConfig().getMap().containsKey(key);
  }
  /**
   * Use {@link #getConfigMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getConfig() {
    return getConfigMap();
  }
  /**
   * <pre>
   * Source connection configuration
   * </pre>
   *
   * <code>map&lt;string, string&gt; config = 4 [json_name = "config"];</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.String, java.lang.String> getConfigMap() {
    return internalGetConfig().getMap();
  }
  /**
   * <pre>
   * Source connection configuration
   * </pre>
   *
   * <code>map&lt;string, string&gt; config = 4 [json_name = "config"];</code>
   */
  @java.lang.Override
  public /* nullable */
java.lang.String getConfigOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetConfig().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Source connection configuration
   * </pre>
   *
   * <code>map&lt;string, string&gt; config = 4 [json_name = "config"];</code>
   */
  @java.lang.Override
  public java.lang.String getConfigOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetConfig().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int FILTER_FIELD_NUMBER = 5;
  private datapower.noesis.v1.Filter filter_;
  /**
   * <pre>
   * Optional: global filter to apply to all splits
   * </pre>
   *
   * <code>.datapower.noesis.v1.Filter filter = 5 [json_name = "filter"];</code>
   * @return Whether the filter field is set.
   */
  @java.lang.Override
  public boolean hasFilter() {
    return filter_ != null;
  }
  /**
   * <pre>
   * Optional: global filter to apply to all splits
   * </pre>
   *
   * <code>.datapower.noesis.v1.Filter filter = 5 [json_name = "filter"];</code>
   * @return The filter.
   */
  @java.lang.Override
  public datapower.noesis.v1.Filter getFilter() {
    return filter_ == null ? datapower.noesis.v1.Filter.getDefaultInstance() : filter_;
  }
  /**
   * <pre>
   * Optional: global filter to apply to all splits
   * </pre>
   *
   * <code>.datapower.noesis.v1.Filter filter = 5 [json_name = "filter"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.FilterOrBuilder getFilterOrBuilder() {
    return filter_ == null ? datapower.noesis.v1.Filter.getDefaultInstance() : filter_;
  }

  public static final int SNAPSHOT_FIELD_NUMBER = 6;
  private datapower.noesis.v1.SnapshotOptions snapshot_;
  /**
   * <pre>
   * Consistency requirements
   * </pre>
   *
   * <code>.datapower.noesis.v1.SnapshotOptions snapshot = 6 [json_name = "snapshot"];</code>
   * @return Whether the snapshot field is set.
   */
  @java.lang.Override
  public boolean hasSnapshot() {
    return snapshot_ != null;
  }
  /**
   * <pre>
   * Consistency requirements
   * </pre>
   *
   * <code>.datapower.noesis.v1.SnapshotOptions snapshot = 6 [json_name = "snapshot"];</code>
   * @return The snapshot.
   */
  @java.lang.Override
  public datapower.noesis.v1.SnapshotOptions getSnapshot() {
    return snapshot_ == null ? datapower.noesis.v1.SnapshotOptions.getDefaultInstance() : snapshot_;
  }
  /**
   * <pre>
   * Consistency requirements
   * </pre>
   *
   * <code>.datapower.noesis.v1.SnapshotOptions snapshot = 6 [json_name = "snapshot"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.SnapshotOptionsOrBuilder getSnapshotOrBuilder() {
    return snapshot_ == null ? datapower.noesis.v1.SnapshotOptions.getDefaultInstance() : snapshot_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(tenantId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, tenantId_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(entity_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, entity_);
    }
    if (desiredParallelism_ != 0) {
      output.writeInt32(3, desiredParallelism_);
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetConfig(),
        ConfigDefaultEntryHolder.defaultEntry,
        4);
    if (filter_ != null) {
      output.writeMessage(5, getFilter());
    }
    if (snapshot_ != null) {
      output.writeMessage(6, getSnapshot());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(tenantId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, tenantId_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(entity_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, entity_);
    }
    if (desiredParallelism_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, desiredParallelism_);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
         : internalGetConfig().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
      config__ = ConfigDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, config__);
    }
    if (filter_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getFilter());
    }
    if (snapshot_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getSnapshot());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof datapower.noesis.v1.PlanExtractionRequest)) {
      return super.equals(obj);
    }
    datapower.noesis.v1.PlanExtractionRequest other = (datapower.noesis.v1.PlanExtractionRequest) obj;

    if (!getTenantId()
        .equals(other.getTenantId())) return false;
    if (!getEntity()
        .equals(other.getEntity())) return false;
    if (getDesiredParallelism()
        != other.getDesiredParallelism()) return false;
    if (!internalGetConfig().equals(
        other.internalGetConfig())) return false;
    if (hasFilter() != other.hasFilter()) return false;
    if (hasFilter()) {
      if (!getFilter()
          .equals(other.getFilter())) return false;
    }
    if (hasSnapshot() != other.hasSnapshot()) return false;
    if (hasSnapshot()) {
      if (!getSnapshot()
          .equals(other.getSnapshot())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TENANT_ID_FIELD_NUMBER;
    hash = (53 * hash) + getTenantId().hashCode();
    hash = (37 * hash) + ENTITY_FIELD_NUMBER;
    hash = (53 * hash) + getEntity().hashCode();
    hash = (37 * hash) + DESIRED_PARALLELISM_FIELD_NUMBER;
    hash = (53 * hash) + getDesiredParallelism();
    if (!internalGetConfig().getMap().isEmpty()) {
      hash = (37 * hash) + CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + internalGetConfig().hashCode();
    }
    if (hasFilter()) {
      hash = (37 * hash) + FILTER_FIELD_NUMBER;
      hash = (53 * hash) + getFilter().hashCode();
    }
    if (hasSnapshot()) {
      hash = (37 * hash) + SNAPSHOT_FIELD_NUMBER;
      hash = (53 * hash) + getSnapshot().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static datapower.noesis.v1.PlanExtractionRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.PlanExtractionRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.PlanExtractionRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.PlanExtractionRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.PlanExtractionRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.PlanExtractionRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.PlanExtractionRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.PlanExtractionRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static datapower.noesis.v1.PlanExtractionRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static datapower.noesis.v1.PlanExtractionRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static datapower.noesis.v1.PlanExtractionRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.PlanExtractionRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(datapower.noesis.v1.PlanExtractionRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Plan parallel extraction for a batch source entity.
   * The connector analyzes the entity and returns N independent splits
   * that can be extracted in parallel for optimal throughput.
   * </pre>
   *
   * Protobuf type {@code datapower.noesis.v1.PlanExtractionRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:datapower.noesis.v1.PlanExtractionRequest)
      datapower.noesis.v1.PlanExtractionRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_PlanExtractionRequest_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 4:
          return internalGetConfig();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 4:
          return internalGetMutableConfig();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_PlanExtractionRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              datapower.noesis.v1.PlanExtractionRequest.class, datapower.noesis.v1.PlanExtractionRequest.Builder.class);
    }

    // Construct using datapower.noesis.v1.PlanExtractionRequest.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      tenantId_ = "";
      entity_ = "";
      desiredParallelism_ = 0;
      internalGetMutableConfig().clear();
      filter_ = null;
      if (filterBuilder_ != null) {
        filterBuilder_.dispose();
        filterBuilder_ = null;
      }
      snapshot_ = null;
      if (snapshotBuilder_ != null) {
        snapshotBuilder_.dispose();
        snapshotBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_PlanExtractionRequest_descriptor;
    }

    @java.lang.Override
    public datapower.noesis.v1.PlanExtractionRequest getDefaultInstanceForType() {
      return datapower.noesis.v1.PlanExtractionRequest.getDefaultInstance();
    }

    @java.lang.Override
    public datapower.noesis.v1.PlanExtractionRequest build() {
      datapower.noesis.v1.PlanExtractionRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public datapower.noesis.v1.PlanExtractionRequest buildPartial() {
      datapower.noesis.v1.PlanExtractionRequest result = new datapower.noesis.v1.PlanExtractionRequest(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(datapower.noesis.v1.PlanExtractionRequest result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.tenantId_ = tenantId_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.entity_ = entity_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.desiredParallelism_ = desiredParallelism_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.config_ = internalGetConfig();
        result.config_.makeImmutable();
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.filter_ = filterBuilder_ == null
            ? filter_
            : filterBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.snapshot_ = snapshotBuilder_ == null
            ? snapshot_
            : snapshotBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof datapower.noesis.v1.PlanExtractionRequest) {
        return mergeFrom((datapower.noesis.v1.PlanExtractionRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(datapower.noesis.v1.PlanExtractionRequest other) {
      if (other == datapower.noesis.v1.PlanExtractionRequest.getDefaultInstance()) return this;
      if (!other.getTenantId().isEmpty()) {
        tenantId_ = other.tenantId_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getEntity().isEmpty()) {
        entity_ = other.entity_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (other.getDesiredParallelism() != 0) {
        setDesiredParallelism(other.getDesiredParallelism());
      }
      internalGetMutableConfig().mergeFrom(
          other.internalGetConfig());
      bitField0_ |= 0x00000008;
      if (other.hasFilter()) {
        mergeFilter(other.getFilter());
      }
      if (other.hasSnapshot()) {
        mergeSnapshot(other.getSnapshot());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              tenantId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              entity_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 24: {
              desiredParallelism_ = input.readInt32();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 34: {
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              config__ = input.readMessage(
                  ConfigDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableConfig().getMutableMap().put(
                  config__.getKey(), config__.getValue());
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getFilterFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            case 50: {
              input.readMessage(
                  getSnapshotFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000020;
              break;
            } // case 50
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object tenantId_ = "";
    /**
     * <pre>
     * For multi-tenant scoping
     * </pre>
     *
     * <code>string tenant_id = 1 [json_name = "tenantId"];</code>
     * @return The tenantId.
     */
    public java.lang.String getTenantId() {
      java.lang.Object ref = tenantId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        tenantId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * For multi-tenant scoping
     * </pre>
     *
     * <code>string tenant_id = 1 [json_name = "tenantId"];</code>
     * @return The bytes for tenantId.
     */
    public com.google.protobuf.ByteString
        getTenantIdBytes() {
      java.lang.Object ref = tenantId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tenantId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * For multi-tenant scoping
     * </pre>
     *
     * <code>string tenant_id = 1 [json_name = "tenantId"];</code>
     * @param value The tenantId to set.
     * @return This builder for chaining.
     */
    public Builder setTenantId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      tenantId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * For multi-tenant scoping
     * </pre>
     *
     * <code>string tenant_id = 1 [json_name = "tenantId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearTenantId() {
      tenantId_ = getDefaultInstance().getTenantId();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * For multi-tenant scoping
     * </pre>
     *
     * <code>string tenant_id = 1 [json_name = "tenantId"];</code>
     * @param value The bytes for tenantId to set.
     * @return This builder for chaining.
     */
    public Builder setTenantIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      tenantId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object entity_ = "";
    /**
     * <pre>
     * Entity to extract (e.g., "customers")
     * </pre>
     *
     * <code>string entity = 2 [json_name = "entity"];</code>
     * @return The entity.
     */
    public java.lang.String getEntity() {
      java.lang.Object ref = entity_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        entity_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Entity to extract (e.g., "customers")
     * </pre>
     *
     * <code>string entity = 2 [json_name = "entity"];</code>
     * @return The bytes for entity.
     */
    public com.google.protobuf.ByteString
        getEntityBytes() {
      java.lang.Object ref = entity_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        entity_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Entity to extract (e.g., "customers")
     * </pre>
     *
     * <code>string entity = 2 [json_name = "entity"];</code>
     * @param value The entity to set.
     * @return This builder for chaining.
     */
    public Builder setEntity(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      entity_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Entity to extract (e.g., "customers")
     * </pre>
     *
     * <code>string entity = 2 [json_name = "entity"];</code>
     * @return This builder for chaining.
     */
    public Builder clearEntity() {
      entity_ = getDefaultInstance().getEntity();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Entity to extract (e.g., "customers")
     * </pre>
     *
     * <code>string entity = 2 [json_name = "entity"];</code>
     * @param value The bytes for entity to set.
     * @return This builder for chaining.
     */
    public Builder setEntityBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      entity_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private int desiredParallelism_ ;
    /**
     * <pre>
     * Hint: how many splits to generate (connector may adjust)
     * </pre>
     *
     * <code>int32 desired_parallelism = 3 [json_name = "desiredParallelism"];</code>
     * @return The desiredParallelism.
     */
    @java.lang.Override
    public int getDesiredParallelism() {
      return desiredParallelism_;
    }
    /**
     * <pre>
     * Hint: how many splits to generate (connector may adjust)
     * </pre>
     *
     * <code>int32 desired_parallelism = 3 [json_name = "desiredParallelism"];</code>
     * @param value The desiredParallelism to set.
     * @return This builder for chaining.
     */
    public Builder setDesiredParallelism(int value) {

      desiredParallelism_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Hint: how many splits to generate (connector may adjust)
     * </pre>
     *
     * <code>int32 desired_parallelism = 3 [json_name = "desiredParallelism"];</code>
     * @return This builder for chaining.
     */
    public Builder clearDesiredParallelism() {
      bitField0_ = (bitField0_ & ~0x00000004);
      desiredParallelism_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> config_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetConfig() {
      if (config_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ConfigDefaultEntryHolder.defaultEntry);
      }
      return config_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMutableConfig() {
      if (config_ == null) {
        config_ = com.google.protobuf.MapField.newMapField(
            ConfigDefaultEntryHolder.defaultEntry);
      }
      if (!config_.isMutable()) {
        config_ = config_.copy();
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return config_;
    }
    public int getConfigCount() {
      return internalGetConfig().getMap().size();
    }
    /**
     * <pre>
     * Source connection configuration
     * </pre>
     *
     * <code>map&lt;string, string&gt; config = 4 [json_name = "config"];</code>
     */
    @java.lang.Override
    public boolean containsConfig(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetConfig().getMap().containsKey(key);
    }
    /**
     * Use {@link #getConfigMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getConfig() {
      return getConfigMap();
    }
    /**
     * <pre>
     * Source connection configuration
     * </pre>
     *
     * <code>map&lt;string, string&gt; config = 4 [json_name = "config"];</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.String> getConfigMap() {
      return internalGetConfig().getMap();
    }
    /**
     * <pre>
     * Source connection configuration
     * </pre>
     *
     * <code>map&lt;string, string&gt; config = 4 [json_name = "config"];</code>
     */
    @java.lang.Override
    public /* nullable */
java.lang.String getConfigOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetConfig().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Source connection configuration
     * </pre>
     *
     * <code>map&lt;string, string&gt; config = 4 [json_name = "config"];</code>
     */
    @java.lang.Override
    public java.lang.String getConfigOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetConfig().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    public Builder clearConfig() {
      bitField0_ = (bitField0_ & ~0x00000008);
      internalGetMutableConfig().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * Source connection configuration
     * </pre>
     *
     * <code>map&lt;string, string&gt; config = 4 [json_name = "config"];</code>
     */
    public Builder removeConfig(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableConfig().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String>
        getMutableConfig() {
      bitField0_ |= 0x00000008;
      return internalGetMutableConfig().getMutableMap();
    }
    /**
     * <pre>
     * Source connection configuration
     * </pre>
     *
     * <code>map&lt;string, string&gt; config = 4 [json_name = "config"];</code>
     */
    public Builder putConfig(
        java.lang.String key,
        java.lang.String value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) { throw new NullPointerException("map value"); }
      internalGetMutableConfig().getMutableMap()
          .put(key, value);
      bitField0_ |= 0x00000008;
      return this;
    }
    /**
     * <pre>
     * Source connection configuration
     * </pre>
     *
     * <code>map&lt;string, string&gt; config = 4 [json_name = "config"];</code>
     */
    public Builder putAllConfig(
        java.util.Map<java.lang.String, java.lang.String> values) {
      internalGetMutableConfig().getMutableMap()
          .putAll(values);
      bitField0_ |= 0x00000008;
      return this;
    }

    private datapower.noesis.v1.Filter filter_;
    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.Filter, datapower.noesis.v1.Filter.Builder, datapower.noesis.v1.FilterOrBuilder> filterBuilder_;
    /**
     * <pre>
     * Optional: global filter to apply to all splits
     * </pre>
     *
     * <code>.datapower.noesis.v1.Filter filter = 5 [json_name = "filter"];</code>
     * @return Whether the filter field is set.
     */
    public boolean hasFilter() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Optional: global filter to apply to all splits
     * </pre>
     *
     * <code>.datapower.noesis.v1.Filter filter = 5 [json_name = "filter"];</code>
     * @return The filter.
     */
    public datapower.noesis.v1.Filter getFilter() {
      if (filterBuilder_ == null) {
        return filter_ == null ? datapower.noesis.v1.Filter.getDefaultInstance() : filter_;
      } else {
        return filterBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Optional: global filter to apply to all splits
     * </pre>
     *
     * <code>.datapower.noesis.v1.Filter filter = 5 [json_name = "filter"];</code>
     */
    public Builder setFilter(datapower.noesis.v1.Filter value) {
      if (filterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        filter_ = value;
      } else {
        filterBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: global filter to apply to all splits
     * </pre>
     *
     * <code>.datapower.noesis.v1.Filter filter = 5 [json_name = "filter"];</code>
     */
    public Builder setFilter(
        datapower.noesis.v1.Filter.Builder builderForValue) {
      if (filterBuilder_ == null) {
        filter_ = builderForValue.build();
      } else {
        filterBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: global filter to apply to all splits
     * </pre>
     *
     * <code>.datapower.noesis.v1.Filter filter = 5 [json_name = "filter"];</code>
     */
    public Builder mergeFilter(datapower.noesis.v1.Filter value) {
      if (filterBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0) &&
          filter_ != null &&
          filter_ != datapower.noesis.v1.Filter.getDefaultInstance()) {
          getFilterBuilder().mergeFrom(value);
        } else {
          filter_ = value;
        }
      } else {
        filterBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: global filter to apply to all splits
     * </pre>
     *
     * <code>.datapower.noesis.v1.Filter filter = 5 [json_name = "filter"];</code>
     */
    public Builder clearFilter() {
      bitField0_ = (bitField0_ & ~0x00000010);
      filter_ = null;
      if (filterBuilder_ != null) {
        filterBuilder_.dispose();
        filterBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: global filter to apply to all splits
     * </pre>
     *
     * <code>.datapower.noesis.v1.Filter filter = 5 [json_name = "filter"];</code>
     */
    public datapower.noesis.v1.Filter.Builder getFilterBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getFilterFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Optional: global filter to apply to all splits
     * </pre>
     *
     * <code>.datapower.noesis.v1.Filter filter = 5 [json_name = "filter"];</code>
     */
    public datapower.noesis.v1.FilterOrBuilder getFilterOrBuilder() {
      if (filterBuilder_ != null) {
        return filterBuilder_.getMessageOrBuilder();
      } else {
        return filter_ == null ?
            datapower.noesis.v1.Filter.getDefaultInstance() : filter_;
      }
    }
    /**
     * <pre>
     * Optional: global filter to apply to all splits
     * </pre>
     *
     * <code>.datapower.noesis.v1.Filter filter = 5 [json_name = "filter"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.Filter, datapower.noesis.v1.Filter.Builder, datapower.noesis.v1.FilterOrBuilder> 
        getFilterFieldBuilder() {
      if (filterBuilder_ == null) {
        filterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            datapower.noesis.v1.Filter, datapower.noesis.v1.Filter.Builder, datapower.noesis.v1.FilterOrBuilder>(
                getFilter(),
                getParentForChildren(),
                isClean());
        filter_ = null;
      }
      return filterBuilder_;
    }

    private datapower.noesis.v1.SnapshotOptions snapshot_;
    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.SnapshotOptions, datapower.noesis.v1.SnapshotOptions.Builder, datapower.noesis.v1.SnapshotOptionsOrBuilder> snapshotBuilder_;
    /**
     * <pre>
     * Consistency requirements
     * </pre>
     *
     * <code>.datapower.noesis.v1.SnapshotOptions snapshot = 6 [json_name = "snapshot"];</code>
     * @return Whether the snapshot field is set.
     */
    public boolean hasSnapshot() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * Consistency requirements
     * </pre>
     *
     * <code>.datapower.noesis.v1.SnapshotOptions snapshot = 6 [json_name = "snapshot"];</code>
     * @return The snapshot.
     */
    public datapower.noesis.v1.SnapshotOptions getSnapshot() {
      if (snapshotBuilder_ == null) {
        return snapshot_ == null ? datapower.noesis.v1.SnapshotOptions.getDefaultInstance() : snapshot_;
      } else {
        return snapshotBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Consistency requirements
     * </pre>
     *
     * <code>.datapower.noesis.v1.SnapshotOptions snapshot = 6 [json_name = "snapshot"];</code>
     */
    public Builder setSnapshot(datapower.noesis.v1.SnapshotOptions value) {
      if (snapshotBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        snapshot_ = value;
      } else {
        snapshotBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Consistency requirements
     * </pre>
     *
     * <code>.datapower.noesis.v1.SnapshotOptions snapshot = 6 [json_name = "snapshot"];</code>
     */
    public Builder setSnapshot(
        datapower.noesis.v1.SnapshotOptions.Builder builderForValue) {
      if (snapshotBuilder_ == null) {
        snapshot_ = builderForValue.build();
      } else {
        snapshotBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Consistency requirements
     * </pre>
     *
     * <code>.datapower.noesis.v1.SnapshotOptions snapshot = 6 [json_name = "snapshot"];</code>
     */
    public Builder mergeSnapshot(datapower.noesis.v1.SnapshotOptions value) {
      if (snapshotBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0) &&
          snapshot_ != null &&
          snapshot_ != datapower.noesis.v1.SnapshotOptions.getDefaultInstance()) {
          getSnapshotBuilder().mergeFrom(value);
        } else {
          snapshot_ = value;
        }
      } else {
        snapshotBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Consistency requirements
     * </pre>
     *
     * <code>.datapower.noesis.v1.SnapshotOptions snapshot = 6 [json_name = "snapshot"];</code>
     */
    public Builder clearSnapshot() {
      bitField0_ = (bitField0_ & ~0x00000020);
      snapshot_ = null;
      if (snapshotBuilder_ != null) {
        snapshotBuilder_.dispose();
        snapshotBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Consistency requirements
     * </pre>
     *
     * <code>.datapower.noesis.v1.SnapshotOptions snapshot = 6 [json_name = "snapshot"];</code>
     */
    public datapower.noesis.v1.SnapshotOptions.Builder getSnapshotBuilder() {
      bitField0_ |= 0x00000020;
      onChanged();
      return getSnapshotFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Consistency requirements
     * </pre>
     *
     * <code>.datapower.noesis.v1.SnapshotOptions snapshot = 6 [json_name = "snapshot"];</code>
     */
    public datapower.noesis.v1.SnapshotOptionsOrBuilder getSnapshotOrBuilder() {
      if (snapshotBuilder_ != null) {
        return snapshotBuilder_.getMessageOrBuilder();
      } else {
        return snapshot_ == null ?
            datapower.noesis.v1.SnapshotOptions.getDefaultInstance() : snapshot_;
      }
    }
    /**
     * <pre>
     * Consistency requirements
     * </pre>
     *
     * <code>.datapower.noesis.v1.SnapshotOptions snapshot = 6 [json_name = "snapshot"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.SnapshotOptions, datapower.noesis.v1.SnapshotOptions.Builder, datapower.noesis.v1.SnapshotOptionsOrBuilder> 
        getSnapshotFieldBuilder() {
      if (snapshotBuilder_ == null) {
        snapshotBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            datapower.noesis.v1.SnapshotOptions, datapower.noesis.v1.SnapshotOptions.Builder, datapower.noesis.v1.SnapshotOptionsOrBuilder>(
                getSnapshot(),
                getParentForChildren(),
                isClean());
        snapshot_ = null;
      }
      return snapshotBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:datapower.noesis.v1.PlanExtractionRequest)
  }

  // @@protoc_insertion_point(class_scope:datapower.noesis.v1.PlanExtractionRequest)
  private static final datapower.noesis.v1.PlanExtractionRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new datapower.noesis.v1.PlanExtractionRequest();
  }

  public static datapower.noesis.v1.PlanExtractionRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PlanExtractionRequest>
      PARSER = new com.google.protobuf.AbstractParser<PlanExtractionRequest>() {
    @java.lang.Override
    public PlanExtractionRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<PlanExtractionRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PlanExtractionRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public datapower.noesis.v1.PlanExtractionRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

