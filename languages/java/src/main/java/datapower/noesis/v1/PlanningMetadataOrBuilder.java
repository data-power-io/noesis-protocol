// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datapower/noesis/v1/execution.proto

package datapower.noesis.v1;

public interface PlanningMetadataOrBuilder extends
    // @@protoc_insertion_point(interface_extends:datapower.noesis.v1.PlanningMetadata)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * When planning occurred
   * </pre>
   *
   * <code>int64 planned_at_epoch_ms = 1 [json_name = "plannedAtEpochMs"];</code>
   * @return The plannedAtEpochMs.
   */
  long getPlannedAtEpochMs();

  /**
   * <pre>
   * Who/what initiated planning
   * </pre>
   *
   * <code>string planned_by = 2 [json_name = "plannedBy"];</code>
   * @return The plannedBy.
   */
  java.lang.String getPlannedBy();
  /**
   * <pre>
   * Who/what initiated planning
   * </pre>
   *
   * <code>string planned_by = 2 [json_name = "plannedBy"];</code>
   * @return The bytes for plannedBy.
   */
  com.google.protobuf.ByteString
      getPlannedByBytes();

  /**
   * <pre>
   * Planning duration in milliseconds
   * </pre>
   *
   * <code>int64 planning_duration_ms = 3 [json_name = "planningDurationMs"];</code>
   * @return The planningDurationMs.
   */
  long getPlanningDurationMs();

  /**
   * <pre>
   * SQL analysis results
   * </pre>
   *
   * <code>.datapower.noesis.v1.SQLAnalysisResult sql_analysis = 4 [json_name = "sqlAnalysis"];</code>
   * @return Whether the sqlAnalysis field is set.
   */
  boolean hasSqlAnalysis();
  /**
   * <pre>
   * SQL analysis results
   * </pre>
   *
   * <code>.datapower.noesis.v1.SQLAnalysisResult sql_analysis = 4 [json_name = "sqlAnalysis"];</code>
   * @return The sqlAnalysis.
   */
  datapower.noesis.v1.SQLAnalysisResult getSqlAnalysis();
  /**
   * <pre>
   * SQL analysis results
   * </pre>
   *
   * <code>.datapower.noesis.v1.SQLAnalysisResult sql_analysis = 4 [json_name = "sqlAnalysis"];</code>
   */
  datapower.noesis.v1.SQLAnalysisResultOrBuilder getSqlAnalysisOrBuilder();

  /**
   * <pre>
   * Strategy selection reasoning
   * </pre>
   *
   * <code>string strategy_reason = 5 [json_name = "strategyReason"];</code>
   * @return The strategyReason.
   */
  java.lang.String getStrategyReason();
  /**
   * <pre>
   * Strategy selection reasoning
   * </pre>
   *
   * <code>string strategy_reason = 5 [json_name = "strategyReason"];</code>
   * @return The bytes for strategyReason.
   */
  com.google.protobuf.ByteString
      getStrategyReasonBytes();
}
