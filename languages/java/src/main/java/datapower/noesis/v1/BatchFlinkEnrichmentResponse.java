// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datapower/noesis/v1/enrichment_service.proto

package datapower.noesis.v1;

/**
 * <pre>
 * Batch enrichment response for Flink
 * </pre>
 *
 * Protobuf type {@code datapower.noesis.v1.BatchFlinkEnrichmentResponse}
 */
public final class BatchFlinkEnrichmentResponse extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:datapower.noesis.v1.BatchFlinkEnrichmentResponse)
    BatchFlinkEnrichmentResponseOrBuilder {
private static final long serialVersionUID = 0L;
  // Use BatchFlinkEnrichmentResponse.newBuilder() to construct.
  private BatchFlinkEnrichmentResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private BatchFlinkEnrichmentResponse() {
    responses_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new BatchFlinkEnrichmentResponse();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return datapower.noesis.v1.FlinkEnrichmentServiceProto.internal_static_datapower_noesis_v1_BatchFlinkEnrichmentResponse_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return datapower.noesis.v1.FlinkEnrichmentServiceProto.internal_static_datapower_noesis_v1_BatchFlinkEnrichmentResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            datapower.noesis.v1.BatchFlinkEnrichmentResponse.class, datapower.noesis.v1.BatchFlinkEnrichmentResponse.Builder.class);
  }

  public static final int RESPONSES_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private java.util.List<datapower.noesis.v1.FlinkEnrichmentResponse> responses_;
  /**
   * <code>repeated .datapower.noesis.v1.FlinkEnrichmentResponse responses = 1 [json_name = "responses"];</code>
   */
  @java.lang.Override
  public java.util.List<datapower.noesis.v1.FlinkEnrichmentResponse> getResponsesList() {
    return responses_;
  }
  /**
   * <code>repeated .datapower.noesis.v1.FlinkEnrichmentResponse responses = 1 [json_name = "responses"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends datapower.noesis.v1.FlinkEnrichmentResponseOrBuilder> 
      getResponsesOrBuilderList() {
    return responses_;
  }
  /**
   * <code>repeated .datapower.noesis.v1.FlinkEnrichmentResponse responses = 1 [json_name = "responses"];</code>
   */
  @java.lang.Override
  public int getResponsesCount() {
    return responses_.size();
  }
  /**
   * <code>repeated .datapower.noesis.v1.FlinkEnrichmentResponse responses = 1 [json_name = "responses"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.FlinkEnrichmentResponse getResponses(int index) {
    return responses_.get(index);
  }
  /**
   * <code>repeated .datapower.noesis.v1.FlinkEnrichmentResponse responses = 1 [json_name = "responses"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.FlinkEnrichmentResponseOrBuilder getResponsesOrBuilder(
      int index) {
    return responses_.get(index);
  }

  public static final int TOTAL_PROCESSING_TIME_MS_FIELD_NUMBER = 2;
  private long totalProcessingTimeMs_ = 0L;
  /**
   * <pre>
   * Total batch processing time
   * </pre>
   *
   * <code>int64 total_processing_time_ms = 2 [json_name = "totalProcessingTimeMs"];</code>
   * @return The totalProcessingTimeMs.
   */
  @java.lang.Override
  public long getTotalProcessingTimeMs() {
    return totalProcessingTimeMs_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < responses_.size(); i++) {
      output.writeMessage(1, responses_.get(i));
    }
    if (totalProcessingTimeMs_ != 0L) {
      output.writeInt64(2, totalProcessingTimeMs_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < responses_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, responses_.get(i));
    }
    if (totalProcessingTimeMs_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(2, totalProcessingTimeMs_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof datapower.noesis.v1.BatchFlinkEnrichmentResponse)) {
      return super.equals(obj);
    }
    datapower.noesis.v1.BatchFlinkEnrichmentResponse other = (datapower.noesis.v1.BatchFlinkEnrichmentResponse) obj;

    if (!getResponsesList()
        .equals(other.getResponsesList())) return false;
    if (getTotalProcessingTimeMs()
        != other.getTotalProcessingTimeMs()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getResponsesCount() > 0) {
      hash = (37 * hash) + RESPONSES_FIELD_NUMBER;
      hash = (53 * hash) + getResponsesList().hashCode();
    }
    hash = (37 * hash) + TOTAL_PROCESSING_TIME_MS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTotalProcessingTimeMs());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static datapower.noesis.v1.BatchFlinkEnrichmentResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.BatchFlinkEnrichmentResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.BatchFlinkEnrichmentResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.BatchFlinkEnrichmentResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.BatchFlinkEnrichmentResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.BatchFlinkEnrichmentResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.BatchFlinkEnrichmentResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.BatchFlinkEnrichmentResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static datapower.noesis.v1.BatchFlinkEnrichmentResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static datapower.noesis.v1.BatchFlinkEnrichmentResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static datapower.noesis.v1.BatchFlinkEnrichmentResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.BatchFlinkEnrichmentResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(datapower.noesis.v1.BatchFlinkEnrichmentResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Batch enrichment response for Flink
   * </pre>
   *
   * Protobuf type {@code datapower.noesis.v1.BatchFlinkEnrichmentResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:datapower.noesis.v1.BatchFlinkEnrichmentResponse)
      datapower.noesis.v1.BatchFlinkEnrichmentResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return datapower.noesis.v1.FlinkEnrichmentServiceProto.internal_static_datapower_noesis_v1_BatchFlinkEnrichmentResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return datapower.noesis.v1.FlinkEnrichmentServiceProto.internal_static_datapower_noesis_v1_BatchFlinkEnrichmentResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              datapower.noesis.v1.BatchFlinkEnrichmentResponse.class, datapower.noesis.v1.BatchFlinkEnrichmentResponse.Builder.class);
    }

    // Construct using datapower.noesis.v1.BatchFlinkEnrichmentResponse.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (responsesBuilder_ == null) {
        responses_ = java.util.Collections.emptyList();
      } else {
        responses_ = null;
        responsesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      totalProcessingTimeMs_ = 0L;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return datapower.noesis.v1.FlinkEnrichmentServiceProto.internal_static_datapower_noesis_v1_BatchFlinkEnrichmentResponse_descriptor;
    }

    @java.lang.Override
    public datapower.noesis.v1.BatchFlinkEnrichmentResponse getDefaultInstanceForType() {
      return datapower.noesis.v1.BatchFlinkEnrichmentResponse.getDefaultInstance();
    }

    @java.lang.Override
    public datapower.noesis.v1.BatchFlinkEnrichmentResponse build() {
      datapower.noesis.v1.BatchFlinkEnrichmentResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public datapower.noesis.v1.BatchFlinkEnrichmentResponse buildPartial() {
      datapower.noesis.v1.BatchFlinkEnrichmentResponse result = new datapower.noesis.v1.BatchFlinkEnrichmentResponse(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(datapower.noesis.v1.BatchFlinkEnrichmentResponse result) {
      if (responsesBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          responses_ = java.util.Collections.unmodifiableList(responses_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.responses_ = responses_;
      } else {
        result.responses_ = responsesBuilder_.build();
      }
    }

    private void buildPartial0(datapower.noesis.v1.BatchFlinkEnrichmentResponse result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.totalProcessingTimeMs_ = totalProcessingTimeMs_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof datapower.noesis.v1.BatchFlinkEnrichmentResponse) {
        return mergeFrom((datapower.noesis.v1.BatchFlinkEnrichmentResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(datapower.noesis.v1.BatchFlinkEnrichmentResponse other) {
      if (other == datapower.noesis.v1.BatchFlinkEnrichmentResponse.getDefaultInstance()) return this;
      if (responsesBuilder_ == null) {
        if (!other.responses_.isEmpty()) {
          if (responses_.isEmpty()) {
            responses_ = other.responses_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureResponsesIsMutable();
            responses_.addAll(other.responses_);
          }
          onChanged();
        }
      } else {
        if (!other.responses_.isEmpty()) {
          if (responsesBuilder_.isEmpty()) {
            responsesBuilder_.dispose();
            responsesBuilder_ = null;
            responses_ = other.responses_;
            bitField0_ = (bitField0_ & ~0x00000001);
            responsesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getResponsesFieldBuilder() : null;
          } else {
            responsesBuilder_.addAllMessages(other.responses_);
          }
        }
      }
      if (other.getTotalProcessingTimeMs() != 0L) {
        setTotalProcessingTimeMs(other.getTotalProcessingTimeMs());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              datapower.noesis.v1.FlinkEnrichmentResponse m =
                  input.readMessage(
                      datapower.noesis.v1.FlinkEnrichmentResponse.parser(),
                      extensionRegistry);
              if (responsesBuilder_ == null) {
                ensureResponsesIsMutable();
                responses_.add(m);
              } else {
                responsesBuilder_.addMessage(m);
              }
              break;
            } // case 10
            case 16: {
              totalProcessingTimeMs_ = input.readInt64();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.util.List<datapower.noesis.v1.FlinkEnrichmentResponse> responses_ =
      java.util.Collections.emptyList();
    private void ensureResponsesIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        responses_ = new java.util.ArrayList<datapower.noesis.v1.FlinkEnrichmentResponse>(responses_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        datapower.noesis.v1.FlinkEnrichmentResponse, datapower.noesis.v1.FlinkEnrichmentResponse.Builder, datapower.noesis.v1.FlinkEnrichmentResponseOrBuilder> responsesBuilder_;

    /**
     * <code>repeated .datapower.noesis.v1.FlinkEnrichmentResponse responses = 1 [json_name = "responses"];</code>
     */
    public java.util.List<datapower.noesis.v1.FlinkEnrichmentResponse> getResponsesList() {
      if (responsesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(responses_);
      } else {
        return responsesBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .datapower.noesis.v1.FlinkEnrichmentResponse responses = 1 [json_name = "responses"];</code>
     */
    public int getResponsesCount() {
      if (responsesBuilder_ == null) {
        return responses_.size();
      } else {
        return responsesBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .datapower.noesis.v1.FlinkEnrichmentResponse responses = 1 [json_name = "responses"];</code>
     */
    public datapower.noesis.v1.FlinkEnrichmentResponse getResponses(int index) {
      if (responsesBuilder_ == null) {
        return responses_.get(index);
      } else {
        return responsesBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .datapower.noesis.v1.FlinkEnrichmentResponse responses = 1 [json_name = "responses"];</code>
     */
    public Builder setResponses(
        int index, datapower.noesis.v1.FlinkEnrichmentResponse value) {
      if (responsesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureResponsesIsMutable();
        responses_.set(index, value);
        onChanged();
      } else {
        responsesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .datapower.noesis.v1.FlinkEnrichmentResponse responses = 1 [json_name = "responses"];</code>
     */
    public Builder setResponses(
        int index, datapower.noesis.v1.FlinkEnrichmentResponse.Builder builderForValue) {
      if (responsesBuilder_ == null) {
        ensureResponsesIsMutable();
        responses_.set(index, builderForValue.build());
        onChanged();
      } else {
        responsesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .datapower.noesis.v1.FlinkEnrichmentResponse responses = 1 [json_name = "responses"];</code>
     */
    public Builder addResponses(datapower.noesis.v1.FlinkEnrichmentResponse value) {
      if (responsesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureResponsesIsMutable();
        responses_.add(value);
        onChanged();
      } else {
        responsesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .datapower.noesis.v1.FlinkEnrichmentResponse responses = 1 [json_name = "responses"];</code>
     */
    public Builder addResponses(
        int index, datapower.noesis.v1.FlinkEnrichmentResponse value) {
      if (responsesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureResponsesIsMutable();
        responses_.add(index, value);
        onChanged();
      } else {
        responsesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .datapower.noesis.v1.FlinkEnrichmentResponse responses = 1 [json_name = "responses"];</code>
     */
    public Builder addResponses(
        datapower.noesis.v1.FlinkEnrichmentResponse.Builder builderForValue) {
      if (responsesBuilder_ == null) {
        ensureResponsesIsMutable();
        responses_.add(builderForValue.build());
        onChanged();
      } else {
        responsesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .datapower.noesis.v1.FlinkEnrichmentResponse responses = 1 [json_name = "responses"];</code>
     */
    public Builder addResponses(
        int index, datapower.noesis.v1.FlinkEnrichmentResponse.Builder builderForValue) {
      if (responsesBuilder_ == null) {
        ensureResponsesIsMutable();
        responses_.add(index, builderForValue.build());
        onChanged();
      } else {
        responsesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .datapower.noesis.v1.FlinkEnrichmentResponse responses = 1 [json_name = "responses"];</code>
     */
    public Builder addAllResponses(
        java.lang.Iterable<? extends datapower.noesis.v1.FlinkEnrichmentResponse> values) {
      if (responsesBuilder_ == null) {
        ensureResponsesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, responses_);
        onChanged();
      } else {
        responsesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .datapower.noesis.v1.FlinkEnrichmentResponse responses = 1 [json_name = "responses"];</code>
     */
    public Builder clearResponses() {
      if (responsesBuilder_ == null) {
        responses_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        responsesBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .datapower.noesis.v1.FlinkEnrichmentResponse responses = 1 [json_name = "responses"];</code>
     */
    public Builder removeResponses(int index) {
      if (responsesBuilder_ == null) {
        ensureResponsesIsMutable();
        responses_.remove(index);
        onChanged();
      } else {
        responsesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .datapower.noesis.v1.FlinkEnrichmentResponse responses = 1 [json_name = "responses"];</code>
     */
    public datapower.noesis.v1.FlinkEnrichmentResponse.Builder getResponsesBuilder(
        int index) {
      return getResponsesFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .datapower.noesis.v1.FlinkEnrichmentResponse responses = 1 [json_name = "responses"];</code>
     */
    public datapower.noesis.v1.FlinkEnrichmentResponseOrBuilder getResponsesOrBuilder(
        int index) {
      if (responsesBuilder_ == null) {
        return responses_.get(index);  } else {
        return responsesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .datapower.noesis.v1.FlinkEnrichmentResponse responses = 1 [json_name = "responses"];</code>
     */
    public java.util.List<? extends datapower.noesis.v1.FlinkEnrichmentResponseOrBuilder> 
         getResponsesOrBuilderList() {
      if (responsesBuilder_ != null) {
        return responsesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(responses_);
      }
    }
    /**
     * <code>repeated .datapower.noesis.v1.FlinkEnrichmentResponse responses = 1 [json_name = "responses"];</code>
     */
    public datapower.noesis.v1.FlinkEnrichmentResponse.Builder addResponsesBuilder() {
      return getResponsesFieldBuilder().addBuilder(
          datapower.noesis.v1.FlinkEnrichmentResponse.getDefaultInstance());
    }
    /**
     * <code>repeated .datapower.noesis.v1.FlinkEnrichmentResponse responses = 1 [json_name = "responses"];</code>
     */
    public datapower.noesis.v1.FlinkEnrichmentResponse.Builder addResponsesBuilder(
        int index) {
      return getResponsesFieldBuilder().addBuilder(
          index, datapower.noesis.v1.FlinkEnrichmentResponse.getDefaultInstance());
    }
    /**
     * <code>repeated .datapower.noesis.v1.FlinkEnrichmentResponse responses = 1 [json_name = "responses"];</code>
     */
    public java.util.List<datapower.noesis.v1.FlinkEnrichmentResponse.Builder> 
         getResponsesBuilderList() {
      return getResponsesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        datapower.noesis.v1.FlinkEnrichmentResponse, datapower.noesis.v1.FlinkEnrichmentResponse.Builder, datapower.noesis.v1.FlinkEnrichmentResponseOrBuilder> 
        getResponsesFieldBuilder() {
      if (responsesBuilder_ == null) {
        responsesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            datapower.noesis.v1.FlinkEnrichmentResponse, datapower.noesis.v1.FlinkEnrichmentResponse.Builder, datapower.noesis.v1.FlinkEnrichmentResponseOrBuilder>(
                responses_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        responses_ = null;
      }
      return responsesBuilder_;
    }

    private long totalProcessingTimeMs_ ;
    /**
     * <pre>
     * Total batch processing time
     * </pre>
     *
     * <code>int64 total_processing_time_ms = 2 [json_name = "totalProcessingTimeMs"];</code>
     * @return The totalProcessingTimeMs.
     */
    @java.lang.Override
    public long getTotalProcessingTimeMs() {
      return totalProcessingTimeMs_;
    }
    /**
     * <pre>
     * Total batch processing time
     * </pre>
     *
     * <code>int64 total_processing_time_ms = 2 [json_name = "totalProcessingTimeMs"];</code>
     * @param value The totalProcessingTimeMs to set.
     * @return This builder for chaining.
     */
    public Builder setTotalProcessingTimeMs(long value) {

      totalProcessingTimeMs_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Total batch processing time
     * </pre>
     *
     * <code>int64 total_processing_time_ms = 2 [json_name = "totalProcessingTimeMs"];</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalProcessingTimeMs() {
      bitField0_ = (bitField0_ & ~0x00000002);
      totalProcessingTimeMs_ = 0L;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:datapower.noesis.v1.BatchFlinkEnrichmentResponse)
  }

  // @@protoc_insertion_point(class_scope:datapower.noesis.v1.BatchFlinkEnrichmentResponse)
  private static final datapower.noesis.v1.BatchFlinkEnrichmentResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new datapower.noesis.v1.BatchFlinkEnrichmentResponse();
  }

  public static datapower.noesis.v1.BatchFlinkEnrichmentResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<BatchFlinkEnrichmentResponse>
      PARSER = new com.google.protobuf.AbstractParser<BatchFlinkEnrichmentResponse>() {
    @java.lang.Override
    public BatchFlinkEnrichmentResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<BatchFlinkEnrichmentResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<BatchFlinkEnrichmentResponse> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public datapower.noesis.v1.BatchFlinkEnrichmentResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

