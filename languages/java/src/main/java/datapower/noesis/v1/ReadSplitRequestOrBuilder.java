// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datapower/noesis/v1/connector.proto

package datapower.noesis.v1;

public interface ReadSplitRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:datapower.noesis.v1.ReadSplitRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * For multi-tenant scoping
   * </pre>
   *
   * <code>string tenant_id = 1 [json_name = "tenantId"];</code>
   * @return The tenantId.
   */
  java.lang.String getTenantId();
  /**
   * <pre>
   * For multi-tenant scoping
   * </pre>
   *
   * <code>string tenant_id = 1 [json_name = "tenantId"];</code>
   * @return The bytes for tenantId.
   */
  com.google.protobuf.ByteString
      getTenantIdBytes();

  /**
   * <pre>
   * Entity being extracted
   * </pre>
   *
   * <code>string entity = 2 [json_name = "entity"];</code>
   * @return The entity.
   */
  java.lang.String getEntity();
  /**
   * <pre>
   * Entity being extracted
   * </pre>
   *
   * <code>string entity = 2 [json_name = "entity"];</code>
   * @return The bytes for entity.
   */
  com.google.protobuf.ByteString
      getEntityBytes();

  /**
   * <pre>
   * The split to read
   * </pre>
   *
   * <code>.datapower.noesis.v1.ExtractionSplit split = 3 [json_name = "split"];</code>
   * @return Whether the split field is set.
   */
  boolean hasSplit();
  /**
   * <pre>
   * The split to read
   * </pre>
   *
   * <code>.datapower.noesis.v1.ExtractionSplit split = 3 [json_name = "split"];</code>
   * @return The split.
   */
  datapower.noesis.v1.ExtractionSplit getSplit();
  /**
   * <pre>
   * The split to read
   * </pre>
   *
   * <code>.datapower.noesis.v1.ExtractionSplit split = 3 [json_name = "split"];</code>
   */
  datapower.noesis.v1.ExtractionSplitOrBuilder getSplitOrBuilder();

  /**
   * <pre>
   * Optional: from PlanExtractionResponse
   * </pre>
   *
   * <code>string snapshot_id = 4 [json_name = "snapshotId"];</code>
   * @return The snapshotId.
   */
  java.lang.String getSnapshotId();
  /**
   * <pre>
   * Optional: from PlanExtractionResponse
   * </pre>
   *
   * <code>string snapshot_id = 4 [json_name = "snapshotId"];</code>
   * @return The bytes for snapshotId.
   */
  com.google.protobuf.ByteString
      getSnapshotIdBytes();

  /**
   * <pre>
   * Optional: subset of fields
   * </pre>
   *
   * <code>.datapower.noesis.v1.Projection projection = 5 [json_name = "projection"];</code>
   * @return Whether the projection field is set.
   */
  boolean hasProjection();
  /**
   * <pre>
   * Optional: subset of fields
   * </pre>
   *
   * <code>.datapower.noesis.v1.Projection projection = 5 [json_name = "projection"];</code>
   * @return The projection.
   */
  datapower.noesis.v1.Projection getProjection();
  /**
   * <pre>
   * Optional: subset of fields
   * </pre>
   *
   * <code>.datapower.noesis.v1.Projection projection = 5 [json_name = "projection"];</code>
   */
  datapower.noesis.v1.ProjectionOrBuilder getProjectionOrBuilder();

  /**
   * <pre>
   * Optional: QPS/parallelism limits
   * </pre>
   *
   * <code>.datapower.noesis.v1.RateLimit rate_limit = 6 [json_name = "rateLimit"];</code>
   * @return Whether the rateLimit field is set.
   */
  boolean hasRateLimit();
  /**
   * <pre>
   * Optional: QPS/parallelism limits
   * </pre>
   *
   * <code>.datapower.noesis.v1.RateLimit rate_limit = 6 [json_name = "rateLimit"];</code>
   * @return The rateLimit.
   */
  datapower.noesis.v1.RateLimit getRateLimit();
  /**
   * <pre>
   * Optional: QPS/parallelism limits
   * </pre>
   *
   * <code>.datapower.noesis.v1.RateLimit rate_limit = 6 [json_name = "rateLimit"];</code>
   */
  datapower.noesis.v1.RateLimitOrBuilder getRateLimitOrBuilder();
}
