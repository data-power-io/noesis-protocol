// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datapower/noesis/v1/connector.proto

package datapower.noesis.v1;

/**
 * <pre>
 * Snapshot consistency hints. The connector should pick the strongest available option.
 * </pre>
 *
 * Protobuf type {@code datapower.noesis.v1.SnapshotOptions}
 */
public final class SnapshotOptions extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:datapower.noesis.v1.SnapshotOptions)
    SnapshotOptionsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SnapshotOptions.newBuilder() to construct.
  private SnapshotOptions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SnapshotOptions() {
    mode_ = 0;
    asOf_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new SnapshotOptions();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_SnapshotOptions_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_SnapshotOptions_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            datapower.noesis.v1.SnapshotOptions.class, datapower.noesis.v1.SnapshotOptions.Builder.class);
  }

  public static final int MODE_FIELD_NUMBER = 1;
  private int mode_ = 0;
  /**
   * <pre>
   * Desired consistency level
   * </pre>
   *
   * <code>.datapower.noesis.v1.ConsistencyMode mode = 1 [json_name = "mode"];</code>
   * @return The enum numeric value on the wire for mode.
   */
  @java.lang.Override public int getModeValue() {
    return mode_;
  }
  /**
   * <pre>
   * Desired consistency level
   * </pre>
   *
   * <code>.datapower.noesis.v1.ConsistencyMode mode = 1 [json_name = "mode"];</code>
   * @return The mode.
   */
  @java.lang.Override public datapower.noesis.v1.ConsistencyMode getMode() {
    datapower.noesis.v1.ConsistencyMode result = datapower.noesis.v1.ConsistencyMode.forNumber(mode_);
    return result == null ? datapower.noesis.v1.ConsistencyMode.UNRECOGNIZED : result;
  }

  public static final int AS_OF_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object asOf_ = "";
  /**
   * <pre>
   * Optional: timestamp/SCN/LSN string for "AS OF" reads
   * </pre>
   *
   * <code>string as_of = 2 [json_name = "asOf"];</code>
   * @return The asOf.
   */
  @java.lang.Override
  public java.lang.String getAsOf() {
    java.lang.Object ref = asOf_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      asOf_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Optional: timestamp/SCN/LSN string for "AS OF" reads
   * </pre>
   *
   * <code>string as_of = 2 [json_name = "asOf"];</code>
   * @return The bytes for asOf.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getAsOfBytes() {
    java.lang.Object ref = asOf_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      asOf_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (mode_ != datapower.noesis.v1.ConsistencyMode.CONSISTENCY_UNSPECIFIED.getNumber()) {
      output.writeEnum(1, mode_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(asOf_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, asOf_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (mode_ != datapower.noesis.v1.ConsistencyMode.CONSISTENCY_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, mode_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(asOf_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, asOf_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof datapower.noesis.v1.SnapshotOptions)) {
      return super.equals(obj);
    }
    datapower.noesis.v1.SnapshotOptions other = (datapower.noesis.v1.SnapshotOptions) obj;

    if (mode_ != other.mode_) return false;
    if (!getAsOf()
        .equals(other.getAsOf())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + MODE_FIELD_NUMBER;
    hash = (53 * hash) + mode_;
    hash = (37 * hash) + AS_OF_FIELD_NUMBER;
    hash = (53 * hash) + getAsOf().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static datapower.noesis.v1.SnapshotOptions parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.SnapshotOptions parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.SnapshotOptions parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.SnapshotOptions parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.SnapshotOptions parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.SnapshotOptions parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.SnapshotOptions parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.SnapshotOptions parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static datapower.noesis.v1.SnapshotOptions parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static datapower.noesis.v1.SnapshotOptions parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static datapower.noesis.v1.SnapshotOptions parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.SnapshotOptions parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(datapower.noesis.v1.SnapshotOptions prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Snapshot consistency hints. The connector should pick the strongest available option.
   * </pre>
   *
   * Protobuf type {@code datapower.noesis.v1.SnapshotOptions}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:datapower.noesis.v1.SnapshotOptions)
      datapower.noesis.v1.SnapshotOptionsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_SnapshotOptions_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_SnapshotOptions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              datapower.noesis.v1.SnapshotOptions.class, datapower.noesis.v1.SnapshotOptions.Builder.class);
    }

    // Construct using datapower.noesis.v1.SnapshotOptions.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      mode_ = 0;
      asOf_ = "";
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_SnapshotOptions_descriptor;
    }

    @java.lang.Override
    public datapower.noesis.v1.SnapshotOptions getDefaultInstanceForType() {
      return datapower.noesis.v1.SnapshotOptions.getDefaultInstance();
    }

    @java.lang.Override
    public datapower.noesis.v1.SnapshotOptions build() {
      datapower.noesis.v1.SnapshotOptions result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public datapower.noesis.v1.SnapshotOptions buildPartial() {
      datapower.noesis.v1.SnapshotOptions result = new datapower.noesis.v1.SnapshotOptions(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(datapower.noesis.v1.SnapshotOptions result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.mode_ = mode_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.asOf_ = asOf_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof datapower.noesis.v1.SnapshotOptions) {
        return mergeFrom((datapower.noesis.v1.SnapshotOptions)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(datapower.noesis.v1.SnapshotOptions other) {
      if (other == datapower.noesis.v1.SnapshotOptions.getDefaultInstance()) return this;
      if (other.mode_ != 0) {
        setModeValue(other.getModeValue());
      }
      if (!other.getAsOf().isEmpty()) {
        asOf_ = other.asOf_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              mode_ = input.readEnum();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 18: {
              asOf_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int mode_ = 0;
    /**
     * <pre>
     * Desired consistency level
     * </pre>
     *
     * <code>.datapower.noesis.v1.ConsistencyMode mode = 1 [json_name = "mode"];</code>
     * @return The enum numeric value on the wire for mode.
     */
    @java.lang.Override public int getModeValue() {
      return mode_;
    }
    /**
     * <pre>
     * Desired consistency level
     * </pre>
     *
     * <code>.datapower.noesis.v1.ConsistencyMode mode = 1 [json_name = "mode"];</code>
     * @param value The enum numeric value on the wire for mode to set.
     * @return This builder for chaining.
     */
    public Builder setModeValue(int value) {
      mode_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Desired consistency level
     * </pre>
     *
     * <code>.datapower.noesis.v1.ConsistencyMode mode = 1 [json_name = "mode"];</code>
     * @return The mode.
     */
    @java.lang.Override
    public datapower.noesis.v1.ConsistencyMode getMode() {
      datapower.noesis.v1.ConsistencyMode result = datapower.noesis.v1.ConsistencyMode.forNumber(mode_);
      return result == null ? datapower.noesis.v1.ConsistencyMode.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Desired consistency level
     * </pre>
     *
     * <code>.datapower.noesis.v1.ConsistencyMode mode = 1 [json_name = "mode"];</code>
     * @param value The mode to set.
     * @return This builder for chaining.
     */
    public Builder setMode(datapower.noesis.v1.ConsistencyMode value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      mode_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Desired consistency level
     * </pre>
     *
     * <code>.datapower.noesis.v1.ConsistencyMode mode = 1 [json_name = "mode"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMode() {
      bitField0_ = (bitField0_ & ~0x00000001);
      mode_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object asOf_ = "";
    /**
     * <pre>
     * Optional: timestamp/SCN/LSN string for "AS OF" reads
     * </pre>
     *
     * <code>string as_of = 2 [json_name = "asOf"];</code>
     * @return The asOf.
     */
    public java.lang.String getAsOf() {
      java.lang.Object ref = asOf_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        asOf_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Optional: timestamp/SCN/LSN string for "AS OF" reads
     * </pre>
     *
     * <code>string as_of = 2 [json_name = "asOf"];</code>
     * @return The bytes for asOf.
     */
    public com.google.protobuf.ByteString
        getAsOfBytes() {
      java.lang.Object ref = asOf_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        asOf_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Optional: timestamp/SCN/LSN string for "AS OF" reads
     * </pre>
     *
     * <code>string as_of = 2 [json_name = "asOf"];</code>
     * @param value The asOf to set.
     * @return This builder for chaining.
     */
    public Builder setAsOf(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      asOf_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: timestamp/SCN/LSN string for "AS OF" reads
     * </pre>
     *
     * <code>string as_of = 2 [json_name = "asOf"];</code>
     * @return This builder for chaining.
     */
    public Builder clearAsOf() {
      asOf_ = getDefaultInstance().getAsOf();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: timestamp/SCN/LSN string for "AS OF" reads
     * </pre>
     *
     * <code>string as_of = 2 [json_name = "asOf"];</code>
     * @param value The bytes for asOf to set.
     * @return This builder for chaining.
     */
    public Builder setAsOfBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      asOf_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:datapower.noesis.v1.SnapshotOptions)
  }

  // @@protoc_insertion_point(class_scope:datapower.noesis.v1.SnapshotOptions)
  private static final datapower.noesis.v1.SnapshotOptions DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new datapower.noesis.v1.SnapshotOptions();
  }

  public static datapower.noesis.v1.SnapshotOptions getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SnapshotOptions>
      PARSER = new com.google.protobuf.AbstractParser<SnapshotOptions>() {
    @java.lang.Override
    public SnapshotOptions parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<SnapshotOptions> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SnapshotOptions> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public datapower.noesis.v1.SnapshotOptions getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

