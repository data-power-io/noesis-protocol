// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datapower/noesis/v1/connector.proto

package datapower.noesis.v1;

public interface TraversalOrBuilder extends
    // @@protoc_insertion_point(interface_extends:datapower.noesis.v1.Traversal)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * LINK entity names allowed during traversal (e.g., ["BOMLink","PartDocLink"])
   * </pre>
   *
   * <code>repeated string allowed_link_entities = 1 [json_name = "allowedLinkEntities"];</code>
   * @return A list containing the allowedLinkEntities.
   */
  java.util.List<java.lang.String>
      getAllowedLinkEntitiesList();
  /**
   * <pre>
   * LINK entity names allowed during traversal (e.g., ["BOMLink","PartDocLink"])
   * </pre>
   *
   * <code>repeated string allowed_link_entities = 1 [json_name = "allowedLinkEntities"];</code>
   * @return The count of allowedLinkEntities.
   */
  int getAllowedLinkEntitiesCount();
  /**
   * <pre>
   * LINK entity names allowed during traversal (e.g., ["BOMLink","PartDocLink"])
   * </pre>
   *
   * <code>repeated string allowed_link_entities = 1 [json_name = "allowedLinkEntities"];</code>
   * @param index The index of the element to return.
   * @return The allowedLinkEntities at the given index.
   */
  java.lang.String getAllowedLinkEntities(int index);
  /**
   * <pre>
   * LINK entity names allowed during traversal (e.g., ["BOMLink","PartDocLink"])
   * </pre>
   *
   * <code>repeated string allowed_link_entities = 1 [json_name = "allowedLinkEntities"];</code>
   * @param index The index of the value to return.
   * @return The bytes of the allowedLinkEntities at the given index.
   */
  com.google.protobuf.ByteString
      getAllowedLinkEntitiesBytes(int index);

  /**
   * <pre>
   * -1 = unlimited; 0 = only the head; N = max depth
   * </pre>
   *
   * <code>int32 max_depth = 2 [json_name = "maxDepth"];</code>
   * @return The maxDepth.
   */
  int getMaxDepth();

  /**
   * <pre>
   * OUTBOUND/INBOUND/BOTH
   * </pre>
   *
   * <code>.datapower.noesis.v1.TraversalDirection direction = 3 [json_name = "direction"];</code>
   * @return The enum numeric value on the wire for direction.
   */
  int getDirectionValue();
  /**
   * <pre>
   * OUTBOUND/INBOUND/BOTH
   * </pre>
   *
   * <code>.datapower.noesis.v1.TraversalDirection direction = 3 [json_name = "direction"];</code>
   * @return The direction.
   */
  datapower.noesis.v1.TraversalDirection getDirection();

  /**
   * <pre>
   * If false, connector must maintain a visited set
   * </pre>
   *
   * <code>bool allow_revisit = 4 [json_name = "allowRevisit"];</code>
   * @return The allowRevisit.
   */
  boolean getAllowRevisit();

  /**
   * <pre>
   * If true, missing references should be surfaced via LOG and/or error policy
   * </pre>
   *
   * <code>bool strict_referential_integrity = 5 [json_name = "strictReferentialIntegrity"];</code>
   * @return The strictReferentialIntegrity.
   */
  boolean getStrictReferentialIntegrity();
}
