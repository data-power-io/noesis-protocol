// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datapower/noesis/v1/pipeline.proto

package datapower.noesis.v1;

public interface TargetSchemaOrBuilder extends
    // @@protoc_insertion_point(interface_extends:datapower.noesis.v1.TargetSchema)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Name of the target entity (e.g., "Customer360")
   * </pre>
   *
   * <code>string name = 1 [json_name = "name"];</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * Name of the target entity (e.g., "Customer360")
   * </pre>
   *
   * <code>string name = 1 [json_name = "name"];</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * Primary key field name
   * </pre>
   *
   * <code>string primary_key = 2 [json_name = "primaryKey"];</code>
   * @return The primaryKey.
   */
  java.lang.String getPrimaryKey();
  /**
   * <pre>
   * Primary key field name
   * </pre>
   *
   * <code>string primary_key = 2 [json_name = "primaryKey"];</code>
   * @return The bytes for primaryKey.
   */
  com.google.protobuf.ByteString
      getPrimaryKeyBytes();

  /**
   * <pre>
   * All fields in the target schema
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.TargetField fields = 3 [json_name = "fields"];</code>
   */
  java.util.List<datapower.noesis.v1.TargetField> 
      getFieldsList();
  /**
   * <pre>
   * All fields in the target schema
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.TargetField fields = 3 [json_name = "fields"];</code>
   */
  datapower.noesis.v1.TargetField getFields(int index);
  /**
   * <pre>
   * All fields in the target schema
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.TargetField fields = 3 [json_name = "fields"];</code>
   */
  int getFieldsCount();
  /**
   * <pre>
   * All fields in the target schema
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.TargetField fields = 3 [json_name = "fields"];</code>
   */
  java.util.List<? extends datapower.noesis.v1.TargetFieldOrBuilder> 
      getFieldsOrBuilderList();
  /**
   * <pre>
   * All fields in the target schema
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.TargetField fields = 3 [json_name = "fields"];</code>
   */
  datapower.noesis.v1.TargetFieldOrBuilder getFieldsOrBuilder(
      int index);

  /**
   * <pre>
   * Optional: Composite primary key (if primary_key is not set)
   * </pre>
   *
   * <code>repeated string primary_key_fields = 4 [json_name = "primaryKeyFields"];</code>
   * @return A list containing the primaryKeyFields.
   */
  java.util.List<java.lang.String>
      getPrimaryKeyFieldsList();
  /**
   * <pre>
   * Optional: Composite primary key (if primary_key is not set)
   * </pre>
   *
   * <code>repeated string primary_key_fields = 4 [json_name = "primaryKeyFields"];</code>
   * @return The count of primaryKeyFields.
   */
  int getPrimaryKeyFieldsCount();
  /**
   * <pre>
   * Optional: Composite primary key (if primary_key is not set)
   * </pre>
   *
   * <code>repeated string primary_key_fields = 4 [json_name = "primaryKeyFields"];</code>
   * @param index The index of the element to return.
   * @return The primaryKeyFields at the given index.
   */
  java.lang.String getPrimaryKeyFields(int index);
  /**
   * <pre>
   * Optional: Composite primary key (if primary_key is not set)
   * </pre>
   *
   * <code>repeated string primary_key_fields = 4 [json_name = "primaryKeyFields"];</code>
   * @param index The index of the value to return.
   * @return The bytes of the primaryKeyFields at the given index.
   */
  com.google.protobuf.ByteString
      getPrimaryKeyFieldsBytes(int index);
}
