// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datapower/noesis/v1/connector.proto

package datapower.noesis.v1;

/**
 * <pre>
 * Read a specific extraction split (for parallel batch extraction).
 * </pre>
 *
 * Protobuf type {@code datapower.noesis.v1.ReadSplitRequest}
 */
public final class ReadSplitRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:datapower.noesis.v1.ReadSplitRequest)
    ReadSplitRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ReadSplitRequest.newBuilder() to construct.
  private ReadSplitRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ReadSplitRequest() {
    tenantId_ = "";
    entity_ = "";
    snapshotId_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ReadSplitRequest();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_ReadSplitRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_ReadSplitRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            datapower.noesis.v1.ReadSplitRequest.class, datapower.noesis.v1.ReadSplitRequest.Builder.class);
  }

  public static final int TENANT_ID_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object tenantId_ = "";
  /**
   * <pre>
   * For multi-tenant scoping
   * </pre>
   *
   * <code>string tenant_id = 1 [json_name = "tenantId"];</code>
   * @return The tenantId.
   */
  @java.lang.Override
  public java.lang.String getTenantId() {
    java.lang.Object ref = tenantId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      tenantId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * For multi-tenant scoping
   * </pre>
   *
   * <code>string tenant_id = 1 [json_name = "tenantId"];</code>
   * @return The bytes for tenantId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTenantIdBytes() {
    java.lang.Object ref = tenantId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      tenantId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ENTITY_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object entity_ = "";
  /**
   * <pre>
   * Entity being extracted
   * </pre>
   *
   * <code>string entity = 2 [json_name = "entity"];</code>
   * @return The entity.
   */
  @java.lang.Override
  public java.lang.String getEntity() {
    java.lang.Object ref = entity_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      entity_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Entity being extracted
   * </pre>
   *
   * <code>string entity = 2 [json_name = "entity"];</code>
   * @return The bytes for entity.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getEntityBytes() {
    java.lang.Object ref = entity_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      entity_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SPLIT_FIELD_NUMBER = 3;
  private datapower.noesis.v1.ExtractionSplit split_;
  /**
   * <pre>
   * The split to read
   * </pre>
   *
   * <code>.datapower.noesis.v1.ExtractionSplit split = 3 [json_name = "split"];</code>
   * @return Whether the split field is set.
   */
  @java.lang.Override
  public boolean hasSplit() {
    return split_ != null;
  }
  /**
   * <pre>
   * The split to read
   * </pre>
   *
   * <code>.datapower.noesis.v1.ExtractionSplit split = 3 [json_name = "split"];</code>
   * @return The split.
   */
  @java.lang.Override
  public datapower.noesis.v1.ExtractionSplit getSplit() {
    return split_ == null ? datapower.noesis.v1.ExtractionSplit.getDefaultInstance() : split_;
  }
  /**
   * <pre>
   * The split to read
   * </pre>
   *
   * <code>.datapower.noesis.v1.ExtractionSplit split = 3 [json_name = "split"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.ExtractionSplitOrBuilder getSplitOrBuilder() {
    return split_ == null ? datapower.noesis.v1.ExtractionSplit.getDefaultInstance() : split_;
  }

  public static final int SNAPSHOT_ID_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private volatile java.lang.Object snapshotId_ = "";
  /**
   * <pre>
   * Optional: from PlanExtractionResponse
   * </pre>
   *
   * <code>string snapshot_id = 4 [json_name = "snapshotId"];</code>
   * @return The snapshotId.
   */
  @java.lang.Override
  public java.lang.String getSnapshotId() {
    java.lang.Object ref = snapshotId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      snapshotId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Optional: from PlanExtractionResponse
   * </pre>
   *
   * <code>string snapshot_id = 4 [json_name = "snapshotId"];</code>
   * @return The bytes for snapshotId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSnapshotIdBytes() {
    java.lang.Object ref = snapshotId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      snapshotId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PROJECTION_FIELD_NUMBER = 5;
  private datapower.noesis.v1.Projection projection_;
  /**
   * <pre>
   * Optional: subset of fields
   * </pre>
   *
   * <code>.datapower.noesis.v1.Projection projection = 5 [json_name = "projection"];</code>
   * @return Whether the projection field is set.
   */
  @java.lang.Override
  public boolean hasProjection() {
    return projection_ != null;
  }
  /**
   * <pre>
   * Optional: subset of fields
   * </pre>
   *
   * <code>.datapower.noesis.v1.Projection projection = 5 [json_name = "projection"];</code>
   * @return The projection.
   */
  @java.lang.Override
  public datapower.noesis.v1.Projection getProjection() {
    return projection_ == null ? datapower.noesis.v1.Projection.getDefaultInstance() : projection_;
  }
  /**
   * <pre>
   * Optional: subset of fields
   * </pre>
   *
   * <code>.datapower.noesis.v1.Projection projection = 5 [json_name = "projection"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.ProjectionOrBuilder getProjectionOrBuilder() {
    return projection_ == null ? datapower.noesis.v1.Projection.getDefaultInstance() : projection_;
  }

  public static final int RATE_LIMIT_FIELD_NUMBER = 6;
  private datapower.noesis.v1.RateLimit rateLimit_;
  /**
   * <pre>
   * Optional: QPS/parallelism limits
   * </pre>
   *
   * <code>.datapower.noesis.v1.RateLimit rate_limit = 6 [json_name = "rateLimit"];</code>
   * @return Whether the rateLimit field is set.
   */
  @java.lang.Override
  public boolean hasRateLimit() {
    return rateLimit_ != null;
  }
  /**
   * <pre>
   * Optional: QPS/parallelism limits
   * </pre>
   *
   * <code>.datapower.noesis.v1.RateLimit rate_limit = 6 [json_name = "rateLimit"];</code>
   * @return The rateLimit.
   */
  @java.lang.Override
  public datapower.noesis.v1.RateLimit getRateLimit() {
    return rateLimit_ == null ? datapower.noesis.v1.RateLimit.getDefaultInstance() : rateLimit_;
  }
  /**
   * <pre>
   * Optional: QPS/parallelism limits
   * </pre>
   *
   * <code>.datapower.noesis.v1.RateLimit rate_limit = 6 [json_name = "rateLimit"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.RateLimitOrBuilder getRateLimitOrBuilder() {
    return rateLimit_ == null ? datapower.noesis.v1.RateLimit.getDefaultInstance() : rateLimit_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(tenantId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, tenantId_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(entity_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, entity_);
    }
    if (split_ != null) {
      output.writeMessage(3, getSplit());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(snapshotId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, snapshotId_);
    }
    if (projection_ != null) {
      output.writeMessage(5, getProjection());
    }
    if (rateLimit_ != null) {
      output.writeMessage(6, getRateLimit());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(tenantId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, tenantId_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(entity_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, entity_);
    }
    if (split_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getSplit());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(snapshotId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, snapshotId_);
    }
    if (projection_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getProjection());
    }
    if (rateLimit_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getRateLimit());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof datapower.noesis.v1.ReadSplitRequest)) {
      return super.equals(obj);
    }
    datapower.noesis.v1.ReadSplitRequest other = (datapower.noesis.v1.ReadSplitRequest) obj;

    if (!getTenantId()
        .equals(other.getTenantId())) return false;
    if (!getEntity()
        .equals(other.getEntity())) return false;
    if (hasSplit() != other.hasSplit()) return false;
    if (hasSplit()) {
      if (!getSplit()
          .equals(other.getSplit())) return false;
    }
    if (!getSnapshotId()
        .equals(other.getSnapshotId())) return false;
    if (hasProjection() != other.hasProjection()) return false;
    if (hasProjection()) {
      if (!getProjection()
          .equals(other.getProjection())) return false;
    }
    if (hasRateLimit() != other.hasRateLimit()) return false;
    if (hasRateLimit()) {
      if (!getRateLimit()
          .equals(other.getRateLimit())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TENANT_ID_FIELD_NUMBER;
    hash = (53 * hash) + getTenantId().hashCode();
    hash = (37 * hash) + ENTITY_FIELD_NUMBER;
    hash = (53 * hash) + getEntity().hashCode();
    if (hasSplit()) {
      hash = (37 * hash) + SPLIT_FIELD_NUMBER;
      hash = (53 * hash) + getSplit().hashCode();
    }
    hash = (37 * hash) + SNAPSHOT_ID_FIELD_NUMBER;
    hash = (53 * hash) + getSnapshotId().hashCode();
    if (hasProjection()) {
      hash = (37 * hash) + PROJECTION_FIELD_NUMBER;
      hash = (53 * hash) + getProjection().hashCode();
    }
    if (hasRateLimit()) {
      hash = (37 * hash) + RATE_LIMIT_FIELD_NUMBER;
      hash = (53 * hash) + getRateLimit().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static datapower.noesis.v1.ReadSplitRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.ReadSplitRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.ReadSplitRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.ReadSplitRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.ReadSplitRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.ReadSplitRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.ReadSplitRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.ReadSplitRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static datapower.noesis.v1.ReadSplitRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static datapower.noesis.v1.ReadSplitRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static datapower.noesis.v1.ReadSplitRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.ReadSplitRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(datapower.noesis.v1.ReadSplitRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Read a specific extraction split (for parallel batch extraction).
   * </pre>
   *
   * Protobuf type {@code datapower.noesis.v1.ReadSplitRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:datapower.noesis.v1.ReadSplitRequest)
      datapower.noesis.v1.ReadSplitRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_ReadSplitRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_ReadSplitRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              datapower.noesis.v1.ReadSplitRequest.class, datapower.noesis.v1.ReadSplitRequest.Builder.class);
    }

    // Construct using datapower.noesis.v1.ReadSplitRequest.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      tenantId_ = "";
      entity_ = "";
      split_ = null;
      if (splitBuilder_ != null) {
        splitBuilder_.dispose();
        splitBuilder_ = null;
      }
      snapshotId_ = "";
      projection_ = null;
      if (projectionBuilder_ != null) {
        projectionBuilder_.dispose();
        projectionBuilder_ = null;
      }
      rateLimit_ = null;
      if (rateLimitBuilder_ != null) {
        rateLimitBuilder_.dispose();
        rateLimitBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_ReadSplitRequest_descriptor;
    }

    @java.lang.Override
    public datapower.noesis.v1.ReadSplitRequest getDefaultInstanceForType() {
      return datapower.noesis.v1.ReadSplitRequest.getDefaultInstance();
    }

    @java.lang.Override
    public datapower.noesis.v1.ReadSplitRequest build() {
      datapower.noesis.v1.ReadSplitRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public datapower.noesis.v1.ReadSplitRequest buildPartial() {
      datapower.noesis.v1.ReadSplitRequest result = new datapower.noesis.v1.ReadSplitRequest(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(datapower.noesis.v1.ReadSplitRequest result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.tenantId_ = tenantId_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.entity_ = entity_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.split_ = splitBuilder_ == null
            ? split_
            : splitBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.snapshotId_ = snapshotId_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.projection_ = projectionBuilder_ == null
            ? projection_
            : projectionBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.rateLimit_ = rateLimitBuilder_ == null
            ? rateLimit_
            : rateLimitBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof datapower.noesis.v1.ReadSplitRequest) {
        return mergeFrom((datapower.noesis.v1.ReadSplitRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(datapower.noesis.v1.ReadSplitRequest other) {
      if (other == datapower.noesis.v1.ReadSplitRequest.getDefaultInstance()) return this;
      if (!other.getTenantId().isEmpty()) {
        tenantId_ = other.tenantId_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getEntity().isEmpty()) {
        entity_ = other.entity_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (other.hasSplit()) {
        mergeSplit(other.getSplit());
      }
      if (!other.getSnapshotId().isEmpty()) {
        snapshotId_ = other.snapshotId_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      if (other.hasProjection()) {
        mergeProjection(other.getProjection());
      }
      if (other.hasRateLimit()) {
        mergeRateLimit(other.getRateLimit());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              tenantId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              entity_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getSplitFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              snapshotId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getProjectionFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            case 50: {
              input.readMessage(
                  getRateLimitFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000020;
              break;
            } // case 50
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object tenantId_ = "";
    /**
     * <pre>
     * For multi-tenant scoping
     * </pre>
     *
     * <code>string tenant_id = 1 [json_name = "tenantId"];</code>
     * @return The tenantId.
     */
    public java.lang.String getTenantId() {
      java.lang.Object ref = tenantId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        tenantId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * For multi-tenant scoping
     * </pre>
     *
     * <code>string tenant_id = 1 [json_name = "tenantId"];</code>
     * @return The bytes for tenantId.
     */
    public com.google.protobuf.ByteString
        getTenantIdBytes() {
      java.lang.Object ref = tenantId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tenantId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * For multi-tenant scoping
     * </pre>
     *
     * <code>string tenant_id = 1 [json_name = "tenantId"];</code>
     * @param value The tenantId to set.
     * @return This builder for chaining.
     */
    public Builder setTenantId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      tenantId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * For multi-tenant scoping
     * </pre>
     *
     * <code>string tenant_id = 1 [json_name = "tenantId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearTenantId() {
      tenantId_ = getDefaultInstance().getTenantId();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * For multi-tenant scoping
     * </pre>
     *
     * <code>string tenant_id = 1 [json_name = "tenantId"];</code>
     * @param value The bytes for tenantId to set.
     * @return This builder for chaining.
     */
    public Builder setTenantIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      tenantId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object entity_ = "";
    /**
     * <pre>
     * Entity being extracted
     * </pre>
     *
     * <code>string entity = 2 [json_name = "entity"];</code>
     * @return The entity.
     */
    public java.lang.String getEntity() {
      java.lang.Object ref = entity_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        entity_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Entity being extracted
     * </pre>
     *
     * <code>string entity = 2 [json_name = "entity"];</code>
     * @return The bytes for entity.
     */
    public com.google.protobuf.ByteString
        getEntityBytes() {
      java.lang.Object ref = entity_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        entity_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Entity being extracted
     * </pre>
     *
     * <code>string entity = 2 [json_name = "entity"];</code>
     * @param value The entity to set.
     * @return This builder for chaining.
     */
    public Builder setEntity(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      entity_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Entity being extracted
     * </pre>
     *
     * <code>string entity = 2 [json_name = "entity"];</code>
     * @return This builder for chaining.
     */
    public Builder clearEntity() {
      entity_ = getDefaultInstance().getEntity();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Entity being extracted
     * </pre>
     *
     * <code>string entity = 2 [json_name = "entity"];</code>
     * @param value The bytes for entity to set.
     * @return This builder for chaining.
     */
    public Builder setEntityBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      entity_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private datapower.noesis.v1.ExtractionSplit split_;
    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.ExtractionSplit, datapower.noesis.v1.ExtractionSplit.Builder, datapower.noesis.v1.ExtractionSplitOrBuilder> splitBuilder_;
    /**
     * <pre>
     * The split to read
     * </pre>
     *
     * <code>.datapower.noesis.v1.ExtractionSplit split = 3 [json_name = "split"];</code>
     * @return Whether the split field is set.
     */
    public boolean hasSplit() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * The split to read
     * </pre>
     *
     * <code>.datapower.noesis.v1.ExtractionSplit split = 3 [json_name = "split"];</code>
     * @return The split.
     */
    public datapower.noesis.v1.ExtractionSplit getSplit() {
      if (splitBuilder_ == null) {
        return split_ == null ? datapower.noesis.v1.ExtractionSplit.getDefaultInstance() : split_;
      } else {
        return splitBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The split to read
     * </pre>
     *
     * <code>.datapower.noesis.v1.ExtractionSplit split = 3 [json_name = "split"];</code>
     */
    public Builder setSplit(datapower.noesis.v1.ExtractionSplit value) {
      if (splitBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        split_ = value;
      } else {
        splitBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The split to read
     * </pre>
     *
     * <code>.datapower.noesis.v1.ExtractionSplit split = 3 [json_name = "split"];</code>
     */
    public Builder setSplit(
        datapower.noesis.v1.ExtractionSplit.Builder builderForValue) {
      if (splitBuilder_ == null) {
        split_ = builderForValue.build();
      } else {
        splitBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The split to read
     * </pre>
     *
     * <code>.datapower.noesis.v1.ExtractionSplit split = 3 [json_name = "split"];</code>
     */
    public Builder mergeSplit(datapower.noesis.v1.ExtractionSplit value) {
      if (splitBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          split_ != null &&
          split_ != datapower.noesis.v1.ExtractionSplit.getDefaultInstance()) {
          getSplitBuilder().mergeFrom(value);
        } else {
          split_ = value;
        }
      } else {
        splitBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The split to read
     * </pre>
     *
     * <code>.datapower.noesis.v1.ExtractionSplit split = 3 [json_name = "split"];</code>
     */
    public Builder clearSplit() {
      bitField0_ = (bitField0_ & ~0x00000004);
      split_ = null;
      if (splitBuilder_ != null) {
        splitBuilder_.dispose();
        splitBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The split to read
     * </pre>
     *
     * <code>.datapower.noesis.v1.ExtractionSplit split = 3 [json_name = "split"];</code>
     */
    public datapower.noesis.v1.ExtractionSplit.Builder getSplitBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getSplitFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The split to read
     * </pre>
     *
     * <code>.datapower.noesis.v1.ExtractionSplit split = 3 [json_name = "split"];</code>
     */
    public datapower.noesis.v1.ExtractionSplitOrBuilder getSplitOrBuilder() {
      if (splitBuilder_ != null) {
        return splitBuilder_.getMessageOrBuilder();
      } else {
        return split_ == null ?
            datapower.noesis.v1.ExtractionSplit.getDefaultInstance() : split_;
      }
    }
    /**
     * <pre>
     * The split to read
     * </pre>
     *
     * <code>.datapower.noesis.v1.ExtractionSplit split = 3 [json_name = "split"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.ExtractionSplit, datapower.noesis.v1.ExtractionSplit.Builder, datapower.noesis.v1.ExtractionSplitOrBuilder> 
        getSplitFieldBuilder() {
      if (splitBuilder_ == null) {
        splitBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            datapower.noesis.v1.ExtractionSplit, datapower.noesis.v1.ExtractionSplit.Builder, datapower.noesis.v1.ExtractionSplitOrBuilder>(
                getSplit(),
                getParentForChildren(),
                isClean());
        split_ = null;
      }
      return splitBuilder_;
    }

    private java.lang.Object snapshotId_ = "";
    /**
     * <pre>
     * Optional: from PlanExtractionResponse
     * </pre>
     *
     * <code>string snapshot_id = 4 [json_name = "snapshotId"];</code>
     * @return The snapshotId.
     */
    public java.lang.String getSnapshotId() {
      java.lang.Object ref = snapshotId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        snapshotId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Optional: from PlanExtractionResponse
     * </pre>
     *
     * <code>string snapshot_id = 4 [json_name = "snapshotId"];</code>
     * @return The bytes for snapshotId.
     */
    public com.google.protobuf.ByteString
        getSnapshotIdBytes() {
      java.lang.Object ref = snapshotId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        snapshotId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Optional: from PlanExtractionResponse
     * </pre>
     *
     * <code>string snapshot_id = 4 [json_name = "snapshotId"];</code>
     * @param value The snapshotId to set.
     * @return This builder for chaining.
     */
    public Builder setSnapshotId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      snapshotId_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: from PlanExtractionResponse
     * </pre>
     *
     * <code>string snapshot_id = 4 [json_name = "snapshotId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearSnapshotId() {
      snapshotId_ = getDefaultInstance().getSnapshotId();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: from PlanExtractionResponse
     * </pre>
     *
     * <code>string snapshot_id = 4 [json_name = "snapshotId"];</code>
     * @param value The bytes for snapshotId to set.
     * @return This builder for chaining.
     */
    public Builder setSnapshotIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      snapshotId_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private datapower.noesis.v1.Projection projection_;
    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.Projection, datapower.noesis.v1.Projection.Builder, datapower.noesis.v1.ProjectionOrBuilder> projectionBuilder_;
    /**
     * <pre>
     * Optional: subset of fields
     * </pre>
     *
     * <code>.datapower.noesis.v1.Projection projection = 5 [json_name = "projection"];</code>
     * @return Whether the projection field is set.
     */
    public boolean hasProjection() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Optional: subset of fields
     * </pre>
     *
     * <code>.datapower.noesis.v1.Projection projection = 5 [json_name = "projection"];</code>
     * @return The projection.
     */
    public datapower.noesis.v1.Projection getProjection() {
      if (projectionBuilder_ == null) {
        return projection_ == null ? datapower.noesis.v1.Projection.getDefaultInstance() : projection_;
      } else {
        return projectionBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Optional: subset of fields
     * </pre>
     *
     * <code>.datapower.noesis.v1.Projection projection = 5 [json_name = "projection"];</code>
     */
    public Builder setProjection(datapower.noesis.v1.Projection value) {
      if (projectionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        projection_ = value;
      } else {
        projectionBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: subset of fields
     * </pre>
     *
     * <code>.datapower.noesis.v1.Projection projection = 5 [json_name = "projection"];</code>
     */
    public Builder setProjection(
        datapower.noesis.v1.Projection.Builder builderForValue) {
      if (projectionBuilder_ == null) {
        projection_ = builderForValue.build();
      } else {
        projectionBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: subset of fields
     * </pre>
     *
     * <code>.datapower.noesis.v1.Projection projection = 5 [json_name = "projection"];</code>
     */
    public Builder mergeProjection(datapower.noesis.v1.Projection value) {
      if (projectionBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0) &&
          projection_ != null &&
          projection_ != datapower.noesis.v1.Projection.getDefaultInstance()) {
          getProjectionBuilder().mergeFrom(value);
        } else {
          projection_ = value;
        }
      } else {
        projectionBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: subset of fields
     * </pre>
     *
     * <code>.datapower.noesis.v1.Projection projection = 5 [json_name = "projection"];</code>
     */
    public Builder clearProjection() {
      bitField0_ = (bitField0_ & ~0x00000010);
      projection_ = null;
      if (projectionBuilder_ != null) {
        projectionBuilder_.dispose();
        projectionBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: subset of fields
     * </pre>
     *
     * <code>.datapower.noesis.v1.Projection projection = 5 [json_name = "projection"];</code>
     */
    public datapower.noesis.v1.Projection.Builder getProjectionBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getProjectionFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Optional: subset of fields
     * </pre>
     *
     * <code>.datapower.noesis.v1.Projection projection = 5 [json_name = "projection"];</code>
     */
    public datapower.noesis.v1.ProjectionOrBuilder getProjectionOrBuilder() {
      if (projectionBuilder_ != null) {
        return projectionBuilder_.getMessageOrBuilder();
      } else {
        return projection_ == null ?
            datapower.noesis.v1.Projection.getDefaultInstance() : projection_;
      }
    }
    /**
     * <pre>
     * Optional: subset of fields
     * </pre>
     *
     * <code>.datapower.noesis.v1.Projection projection = 5 [json_name = "projection"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.Projection, datapower.noesis.v1.Projection.Builder, datapower.noesis.v1.ProjectionOrBuilder> 
        getProjectionFieldBuilder() {
      if (projectionBuilder_ == null) {
        projectionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            datapower.noesis.v1.Projection, datapower.noesis.v1.Projection.Builder, datapower.noesis.v1.ProjectionOrBuilder>(
                getProjection(),
                getParentForChildren(),
                isClean());
        projection_ = null;
      }
      return projectionBuilder_;
    }

    private datapower.noesis.v1.RateLimit rateLimit_;
    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.RateLimit, datapower.noesis.v1.RateLimit.Builder, datapower.noesis.v1.RateLimitOrBuilder> rateLimitBuilder_;
    /**
     * <pre>
     * Optional: QPS/parallelism limits
     * </pre>
     *
     * <code>.datapower.noesis.v1.RateLimit rate_limit = 6 [json_name = "rateLimit"];</code>
     * @return Whether the rateLimit field is set.
     */
    public boolean hasRateLimit() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * Optional: QPS/parallelism limits
     * </pre>
     *
     * <code>.datapower.noesis.v1.RateLimit rate_limit = 6 [json_name = "rateLimit"];</code>
     * @return The rateLimit.
     */
    public datapower.noesis.v1.RateLimit getRateLimit() {
      if (rateLimitBuilder_ == null) {
        return rateLimit_ == null ? datapower.noesis.v1.RateLimit.getDefaultInstance() : rateLimit_;
      } else {
        return rateLimitBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Optional: QPS/parallelism limits
     * </pre>
     *
     * <code>.datapower.noesis.v1.RateLimit rate_limit = 6 [json_name = "rateLimit"];</code>
     */
    public Builder setRateLimit(datapower.noesis.v1.RateLimit value) {
      if (rateLimitBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        rateLimit_ = value;
      } else {
        rateLimitBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: QPS/parallelism limits
     * </pre>
     *
     * <code>.datapower.noesis.v1.RateLimit rate_limit = 6 [json_name = "rateLimit"];</code>
     */
    public Builder setRateLimit(
        datapower.noesis.v1.RateLimit.Builder builderForValue) {
      if (rateLimitBuilder_ == null) {
        rateLimit_ = builderForValue.build();
      } else {
        rateLimitBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: QPS/parallelism limits
     * </pre>
     *
     * <code>.datapower.noesis.v1.RateLimit rate_limit = 6 [json_name = "rateLimit"];</code>
     */
    public Builder mergeRateLimit(datapower.noesis.v1.RateLimit value) {
      if (rateLimitBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0) &&
          rateLimit_ != null &&
          rateLimit_ != datapower.noesis.v1.RateLimit.getDefaultInstance()) {
          getRateLimitBuilder().mergeFrom(value);
        } else {
          rateLimit_ = value;
        }
      } else {
        rateLimitBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: QPS/parallelism limits
     * </pre>
     *
     * <code>.datapower.noesis.v1.RateLimit rate_limit = 6 [json_name = "rateLimit"];</code>
     */
    public Builder clearRateLimit() {
      bitField0_ = (bitField0_ & ~0x00000020);
      rateLimit_ = null;
      if (rateLimitBuilder_ != null) {
        rateLimitBuilder_.dispose();
        rateLimitBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: QPS/parallelism limits
     * </pre>
     *
     * <code>.datapower.noesis.v1.RateLimit rate_limit = 6 [json_name = "rateLimit"];</code>
     */
    public datapower.noesis.v1.RateLimit.Builder getRateLimitBuilder() {
      bitField0_ |= 0x00000020;
      onChanged();
      return getRateLimitFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Optional: QPS/parallelism limits
     * </pre>
     *
     * <code>.datapower.noesis.v1.RateLimit rate_limit = 6 [json_name = "rateLimit"];</code>
     */
    public datapower.noesis.v1.RateLimitOrBuilder getRateLimitOrBuilder() {
      if (rateLimitBuilder_ != null) {
        return rateLimitBuilder_.getMessageOrBuilder();
      } else {
        return rateLimit_ == null ?
            datapower.noesis.v1.RateLimit.getDefaultInstance() : rateLimit_;
      }
    }
    /**
     * <pre>
     * Optional: QPS/parallelism limits
     * </pre>
     *
     * <code>.datapower.noesis.v1.RateLimit rate_limit = 6 [json_name = "rateLimit"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.RateLimit, datapower.noesis.v1.RateLimit.Builder, datapower.noesis.v1.RateLimitOrBuilder> 
        getRateLimitFieldBuilder() {
      if (rateLimitBuilder_ == null) {
        rateLimitBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            datapower.noesis.v1.RateLimit, datapower.noesis.v1.RateLimit.Builder, datapower.noesis.v1.RateLimitOrBuilder>(
                getRateLimit(),
                getParentForChildren(),
                isClean());
        rateLimit_ = null;
      }
      return rateLimitBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:datapower.noesis.v1.ReadSplitRequest)
  }

  // @@protoc_insertion_point(class_scope:datapower.noesis.v1.ReadSplitRequest)
  private static final datapower.noesis.v1.ReadSplitRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new datapower.noesis.v1.ReadSplitRequest();
  }

  public static datapower.noesis.v1.ReadSplitRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ReadSplitRequest>
      PARSER = new com.google.protobuf.AbstractParser<ReadSplitRequest>() {
    @java.lang.Override
    public ReadSplitRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ReadSplitRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ReadSplitRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public datapower.noesis.v1.ReadSplitRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

