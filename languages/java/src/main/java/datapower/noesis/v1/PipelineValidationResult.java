// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datapower/noesis/v1/pipeline.proto

package datapower.noesis.v1;

/**
 * <pre>
 * PipelineValidationResult represents the result of pipeline definition validation
 * </pre>
 *
 * Protobuf type {@code datapower.noesis.v1.PipelineValidationResult}
 */
public final class PipelineValidationResult extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:datapower.noesis.v1.PipelineValidationResult)
    PipelineValidationResultOrBuilder {
private static final long serialVersionUID = 0L;
  // Use PipelineValidationResult.newBuilder() to construct.
  private PipelineValidationResult(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private PipelineValidationResult() {
    errors_ = java.util.Collections.emptyList();
    warnings_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new PipelineValidationResult();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return datapower.noesis.v1.Pipeline.internal_static_datapower_noesis_v1_PipelineValidationResult_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return datapower.noesis.v1.Pipeline.internal_static_datapower_noesis_v1_PipelineValidationResult_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            datapower.noesis.v1.PipelineValidationResult.class, datapower.noesis.v1.PipelineValidationResult.Builder.class);
  }

  public static final int VALID_FIELD_NUMBER = 1;
  private boolean valid_ = false;
  /**
   * <pre>
   * Whether validation passed
   * </pre>
   *
   * <code>bool valid = 1 [json_name = "valid"];</code>
   * @return The valid.
   */
  @java.lang.Override
  public boolean getValid() {
    return valid_;
  }

  public static final int ERRORS_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<datapower.noesis.v1.PipelineValidationError> errors_;
  /**
   * <pre>
   * Validation errors (if any)
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.PipelineValidationError errors = 2 [json_name = "errors"];</code>
   */
  @java.lang.Override
  public java.util.List<datapower.noesis.v1.PipelineValidationError> getErrorsList() {
    return errors_;
  }
  /**
   * <pre>
   * Validation errors (if any)
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.PipelineValidationError errors = 2 [json_name = "errors"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends datapower.noesis.v1.PipelineValidationErrorOrBuilder> 
      getErrorsOrBuilderList() {
    return errors_;
  }
  /**
   * <pre>
   * Validation errors (if any)
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.PipelineValidationError errors = 2 [json_name = "errors"];</code>
   */
  @java.lang.Override
  public int getErrorsCount() {
    return errors_.size();
  }
  /**
   * <pre>
   * Validation errors (if any)
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.PipelineValidationError errors = 2 [json_name = "errors"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.PipelineValidationError getErrors(int index) {
    return errors_.get(index);
  }
  /**
   * <pre>
   * Validation errors (if any)
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.PipelineValidationError errors = 2 [json_name = "errors"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.PipelineValidationErrorOrBuilder getErrorsOrBuilder(
      int index) {
    return errors_.get(index);
  }

  public static final int WARNINGS_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private java.util.List<datapower.noesis.v1.PipelineValidationWarning> warnings_;
  /**
   * <pre>
   * Validation warnings (non-blocking issues)
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.PipelineValidationWarning warnings = 3 [json_name = "warnings"];</code>
   */
  @java.lang.Override
  public java.util.List<datapower.noesis.v1.PipelineValidationWarning> getWarningsList() {
    return warnings_;
  }
  /**
   * <pre>
   * Validation warnings (non-blocking issues)
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.PipelineValidationWarning warnings = 3 [json_name = "warnings"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends datapower.noesis.v1.PipelineValidationWarningOrBuilder> 
      getWarningsOrBuilderList() {
    return warnings_;
  }
  /**
   * <pre>
   * Validation warnings (non-blocking issues)
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.PipelineValidationWarning warnings = 3 [json_name = "warnings"];</code>
   */
  @java.lang.Override
  public int getWarningsCount() {
    return warnings_.size();
  }
  /**
   * <pre>
   * Validation warnings (non-blocking issues)
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.PipelineValidationWarning warnings = 3 [json_name = "warnings"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.PipelineValidationWarning getWarnings(int index) {
    return warnings_.get(index);
  }
  /**
   * <pre>
   * Validation warnings (non-blocking issues)
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.PipelineValidationWarning warnings = 3 [json_name = "warnings"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.PipelineValidationWarningOrBuilder getWarningsOrBuilder(
      int index) {
    return warnings_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (valid_ != false) {
      output.writeBool(1, valid_);
    }
    for (int i = 0; i < errors_.size(); i++) {
      output.writeMessage(2, errors_.get(i));
    }
    for (int i = 0; i < warnings_.size(); i++) {
      output.writeMessage(3, warnings_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (valid_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(1, valid_);
    }
    for (int i = 0; i < errors_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, errors_.get(i));
    }
    for (int i = 0; i < warnings_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, warnings_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof datapower.noesis.v1.PipelineValidationResult)) {
      return super.equals(obj);
    }
    datapower.noesis.v1.PipelineValidationResult other = (datapower.noesis.v1.PipelineValidationResult) obj;

    if (getValid()
        != other.getValid()) return false;
    if (!getErrorsList()
        .equals(other.getErrorsList())) return false;
    if (!getWarningsList()
        .equals(other.getWarningsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + VALID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getValid());
    if (getErrorsCount() > 0) {
      hash = (37 * hash) + ERRORS_FIELD_NUMBER;
      hash = (53 * hash) + getErrorsList().hashCode();
    }
    if (getWarningsCount() > 0) {
      hash = (37 * hash) + WARNINGS_FIELD_NUMBER;
      hash = (53 * hash) + getWarningsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static datapower.noesis.v1.PipelineValidationResult parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.PipelineValidationResult parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.PipelineValidationResult parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.PipelineValidationResult parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.PipelineValidationResult parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.PipelineValidationResult parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.PipelineValidationResult parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.PipelineValidationResult parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static datapower.noesis.v1.PipelineValidationResult parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static datapower.noesis.v1.PipelineValidationResult parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static datapower.noesis.v1.PipelineValidationResult parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.PipelineValidationResult parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(datapower.noesis.v1.PipelineValidationResult prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * PipelineValidationResult represents the result of pipeline definition validation
   * </pre>
   *
   * Protobuf type {@code datapower.noesis.v1.PipelineValidationResult}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:datapower.noesis.v1.PipelineValidationResult)
      datapower.noesis.v1.PipelineValidationResultOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return datapower.noesis.v1.Pipeline.internal_static_datapower_noesis_v1_PipelineValidationResult_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return datapower.noesis.v1.Pipeline.internal_static_datapower_noesis_v1_PipelineValidationResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              datapower.noesis.v1.PipelineValidationResult.class, datapower.noesis.v1.PipelineValidationResult.Builder.class);
    }

    // Construct using datapower.noesis.v1.PipelineValidationResult.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      valid_ = false;
      if (errorsBuilder_ == null) {
        errors_ = java.util.Collections.emptyList();
      } else {
        errors_ = null;
        errorsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      if (warningsBuilder_ == null) {
        warnings_ = java.util.Collections.emptyList();
      } else {
        warnings_ = null;
        warningsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return datapower.noesis.v1.Pipeline.internal_static_datapower_noesis_v1_PipelineValidationResult_descriptor;
    }

    @java.lang.Override
    public datapower.noesis.v1.PipelineValidationResult getDefaultInstanceForType() {
      return datapower.noesis.v1.PipelineValidationResult.getDefaultInstance();
    }

    @java.lang.Override
    public datapower.noesis.v1.PipelineValidationResult build() {
      datapower.noesis.v1.PipelineValidationResult result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public datapower.noesis.v1.PipelineValidationResult buildPartial() {
      datapower.noesis.v1.PipelineValidationResult result = new datapower.noesis.v1.PipelineValidationResult(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(datapower.noesis.v1.PipelineValidationResult result) {
      if (errorsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          errors_ = java.util.Collections.unmodifiableList(errors_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.errors_ = errors_;
      } else {
        result.errors_ = errorsBuilder_.build();
      }
      if (warningsBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          warnings_ = java.util.Collections.unmodifiableList(warnings_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.warnings_ = warnings_;
      } else {
        result.warnings_ = warningsBuilder_.build();
      }
    }

    private void buildPartial0(datapower.noesis.v1.PipelineValidationResult result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.valid_ = valid_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof datapower.noesis.v1.PipelineValidationResult) {
        return mergeFrom((datapower.noesis.v1.PipelineValidationResult)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(datapower.noesis.v1.PipelineValidationResult other) {
      if (other == datapower.noesis.v1.PipelineValidationResult.getDefaultInstance()) return this;
      if (other.getValid() != false) {
        setValid(other.getValid());
      }
      if (errorsBuilder_ == null) {
        if (!other.errors_.isEmpty()) {
          if (errors_.isEmpty()) {
            errors_ = other.errors_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureErrorsIsMutable();
            errors_.addAll(other.errors_);
          }
          onChanged();
        }
      } else {
        if (!other.errors_.isEmpty()) {
          if (errorsBuilder_.isEmpty()) {
            errorsBuilder_.dispose();
            errorsBuilder_ = null;
            errors_ = other.errors_;
            bitField0_ = (bitField0_ & ~0x00000002);
            errorsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getErrorsFieldBuilder() : null;
          } else {
            errorsBuilder_.addAllMessages(other.errors_);
          }
        }
      }
      if (warningsBuilder_ == null) {
        if (!other.warnings_.isEmpty()) {
          if (warnings_.isEmpty()) {
            warnings_ = other.warnings_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureWarningsIsMutable();
            warnings_.addAll(other.warnings_);
          }
          onChanged();
        }
      } else {
        if (!other.warnings_.isEmpty()) {
          if (warningsBuilder_.isEmpty()) {
            warningsBuilder_.dispose();
            warningsBuilder_ = null;
            warnings_ = other.warnings_;
            bitField0_ = (bitField0_ & ~0x00000004);
            warningsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getWarningsFieldBuilder() : null;
          } else {
            warningsBuilder_.addAllMessages(other.warnings_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              valid_ = input.readBool();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 18: {
              datapower.noesis.v1.PipelineValidationError m =
                  input.readMessage(
                      datapower.noesis.v1.PipelineValidationError.parser(),
                      extensionRegistry);
              if (errorsBuilder_ == null) {
                ensureErrorsIsMutable();
                errors_.add(m);
              } else {
                errorsBuilder_.addMessage(m);
              }
              break;
            } // case 18
            case 26: {
              datapower.noesis.v1.PipelineValidationWarning m =
                  input.readMessage(
                      datapower.noesis.v1.PipelineValidationWarning.parser(),
                      extensionRegistry);
              if (warningsBuilder_ == null) {
                ensureWarningsIsMutable();
                warnings_.add(m);
              } else {
                warningsBuilder_.addMessage(m);
              }
              break;
            } // case 26
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private boolean valid_ ;
    /**
     * <pre>
     * Whether validation passed
     * </pre>
     *
     * <code>bool valid = 1 [json_name = "valid"];</code>
     * @return The valid.
     */
    @java.lang.Override
    public boolean getValid() {
      return valid_;
    }
    /**
     * <pre>
     * Whether validation passed
     * </pre>
     *
     * <code>bool valid = 1 [json_name = "valid"];</code>
     * @param value The valid to set.
     * @return This builder for chaining.
     */
    public Builder setValid(boolean value) {

      valid_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether validation passed
     * </pre>
     *
     * <code>bool valid = 1 [json_name = "valid"];</code>
     * @return This builder for chaining.
     */
    public Builder clearValid() {
      bitField0_ = (bitField0_ & ~0x00000001);
      valid_ = false;
      onChanged();
      return this;
    }

    private java.util.List<datapower.noesis.v1.PipelineValidationError> errors_ =
      java.util.Collections.emptyList();
    private void ensureErrorsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        errors_ = new java.util.ArrayList<datapower.noesis.v1.PipelineValidationError>(errors_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        datapower.noesis.v1.PipelineValidationError, datapower.noesis.v1.PipelineValidationError.Builder, datapower.noesis.v1.PipelineValidationErrorOrBuilder> errorsBuilder_;

    /**
     * <pre>
     * Validation errors (if any)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.PipelineValidationError errors = 2 [json_name = "errors"];</code>
     */
    public java.util.List<datapower.noesis.v1.PipelineValidationError> getErrorsList() {
      if (errorsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(errors_);
      } else {
        return errorsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Validation errors (if any)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.PipelineValidationError errors = 2 [json_name = "errors"];</code>
     */
    public int getErrorsCount() {
      if (errorsBuilder_ == null) {
        return errors_.size();
      } else {
        return errorsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Validation errors (if any)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.PipelineValidationError errors = 2 [json_name = "errors"];</code>
     */
    public datapower.noesis.v1.PipelineValidationError getErrors(int index) {
      if (errorsBuilder_ == null) {
        return errors_.get(index);
      } else {
        return errorsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Validation errors (if any)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.PipelineValidationError errors = 2 [json_name = "errors"];</code>
     */
    public Builder setErrors(
        int index, datapower.noesis.v1.PipelineValidationError value) {
      if (errorsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureErrorsIsMutable();
        errors_.set(index, value);
        onChanged();
      } else {
        errorsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Validation errors (if any)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.PipelineValidationError errors = 2 [json_name = "errors"];</code>
     */
    public Builder setErrors(
        int index, datapower.noesis.v1.PipelineValidationError.Builder builderForValue) {
      if (errorsBuilder_ == null) {
        ensureErrorsIsMutable();
        errors_.set(index, builderForValue.build());
        onChanged();
      } else {
        errorsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Validation errors (if any)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.PipelineValidationError errors = 2 [json_name = "errors"];</code>
     */
    public Builder addErrors(datapower.noesis.v1.PipelineValidationError value) {
      if (errorsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureErrorsIsMutable();
        errors_.add(value);
        onChanged();
      } else {
        errorsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Validation errors (if any)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.PipelineValidationError errors = 2 [json_name = "errors"];</code>
     */
    public Builder addErrors(
        int index, datapower.noesis.v1.PipelineValidationError value) {
      if (errorsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureErrorsIsMutable();
        errors_.add(index, value);
        onChanged();
      } else {
        errorsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Validation errors (if any)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.PipelineValidationError errors = 2 [json_name = "errors"];</code>
     */
    public Builder addErrors(
        datapower.noesis.v1.PipelineValidationError.Builder builderForValue) {
      if (errorsBuilder_ == null) {
        ensureErrorsIsMutable();
        errors_.add(builderForValue.build());
        onChanged();
      } else {
        errorsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Validation errors (if any)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.PipelineValidationError errors = 2 [json_name = "errors"];</code>
     */
    public Builder addErrors(
        int index, datapower.noesis.v1.PipelineValidationError.Builder builderForValue) {
      if (errorsBuilder_ == null) {
        ensureErrorsIsMutable();
        errors_.add(index, builderForValue.build());
        onChanged();
      } else {
        errorsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Validation errors (if any)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.PipelineValidationError errors = 2 [json_name = "errors"];</code>
     */
    public Builder addAllErrors(
        java.lang.Iterable<? extends datapower.noesis.v1.PipelineValidationError> values) {
      if (errorsBuilder_ == null) {
        ensureErrorsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, errors_);
        onChanged();
      } else {
        errorsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Validation errors (if any)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.PipelineValidationError errors = 2 [json_name = "errors"];</code>
     */
    public Builder clearErrors() {
      if (errorsBuilder_ == null) {
        errors_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        errorsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Validation errors (if any)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.PipelineValidationError errors = 2 [json_name = "errors"];</code>
     */
    public Builder removeErrors(int index) {
      if (errorsBuilder_ == null) {
        ensureErrorsIsMutable();
        errors_.remove(index);
        onChanged();
      } else {
        errorsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Validation errors (if any)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.PipelineValidationError errors = 2 [json_name = "errors"];</code>
     */
    public datapower.noesis.v1.PipelineValidationError.Builder getErrorsBuilder(
        int index) {
      return getErrorsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Validation errors (if any)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.PipelineValidationError errors = 2 [json_name = "errors"];</code>
     */
    public datapower.noesis.v1.PipelineValidationErrorOrBuilder getErrorsOrBuilder(
        int index) {
      if (errorsBuilder_ == null) {
        return errors_.get(index);  } else {
        return errorsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Validation errors (if any)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.PipelineValidationError errors = 2 [json_name = "errors"];</code>
     */
    public java.util.List<? extends datapower.noesis.v1.PipelineValidationErrorOrBuilder> 
         getErrorsOrBuilderList() {
      if (errorsBuilder_ != null) {
        return errorsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(errors_);
      }
    }
    /**
     * <pre>
     * Validation errors (if any)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.PipelineValidationError errors = 2 [json_name = "errors"];</code>
     */
    public datapower.noesis.v1.PipelineValidationError.Builder addErrorsBuilder() {
      return getErrorsFieldBuilder().addBuilder(
          datapower.noesis.v1.PipelineValidationError.getDefaultInstance());
    }
    /**
     * <pre>
     * Validation errors (if any)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.PipelineValidationError errors = 2 [json_name = "errors"];</code>
     */
    public datapower.noesis.v1.PipelineValidationError.Builder addErrorsBuilder(
        int index) {
      return getErrorsFieldBuilder().addBuilder(
          index, datapower.noesis.v1.PipelineValidationError.getDefaultInstance());
    }
    /**
     * <pre>
     * Validation errors (if any)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.PipelineValidationError errors = 2 [json_name = "errors"];</code>
     */
    public java.util.List<datapower.noesis.v1.PipelineValidationError.Builder> 
         getErrorsBuilderList() {
      return getErrorsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        datapower.noesis.v1.PipelineValidationError, datapower.noesis.v1.PipelineValidationError.Builder, datapower.noesis.v1.PipelineValidationErrorOrBuilder> 
        getErrorsFieldBuilder() {
      if (errorsBuilder_ == null) {
        errorsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            datapower.noesis.v1.PipelineValidationError, datapower.noesis.v1.PipelineValidationError.Builder, datapower.noesis.v1.PipelineValidationErrorOrBuilder>(
                errors_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        errors_ = null;
      }
      return errorsBuilder_;
    }

    private java.util.List<datapower.noesis.v1.PipelineValidationWarning> warnings_ =
      java.util.Collections.emptyList();
    private void ensureWarningsIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        warnings_ = new java.util.ArrayList<datapower.noesis.v1.PipelineValidationWarning>(warnings_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        datapower.noesis.v1.PipelineValidationWarning, datapower.noesis.v1.PipelineValidationWarning.Builder, datapower.noesis.v1.PipelineValidationWarningOrBuilder> warningsBuilder_;

    /**
     * <pre>
     * Validation warnings (non-blocking issues)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.PipelineValidationWarning warnings = 3 [json_name = "warnings"];</code>
     */
    public java.util.List<datapower.noesis.v1.PipelineValidationWarning> getWarningsList() {
      if (warningsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(warnings_);
      } else {
        return warningsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Validation warnings (non-blocking issues)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.PipelineValidationWarning warnings = 3 [json_name = "warnings"];</code>
     */
    public int getWarningsCount() {
      if (warningsBuilder_ == null) {
        return warnings_.size();
      } else {
        return warningsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Validation warnings (non-blocking issues)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.PipelineValidationWarning warnings = 3 [json_name = "warnings"];</code>
     */
    public datapower.noesis.v1.PipelineValidationWarning getWarnings(int index) {
      if (warningsBuilder_ == null) {
        return warnings_.get(index);
      } else {
        return warningsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Validation warnings (non-blocking issues)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.PipelineValidationWarning warnings = 3 [json_name = "warnings"];</code>
     */
    public Builder setWarnings(
        int index, datapower.noesis.v1.PipelineValidationWarning value) {
      if (warningsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureWarningsIsMutable();
        warnings_.set(index, value);
        onChanged();
      } else {
        warningsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Validation warnings (non-blocking issues)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.PipelineValidationWarning warnings = 3 [json_name = "warnings"];</code>
     */
    public Builder setWarnings(
        int index, datapower.noesis.v1.PipelineValidationWarning.Builder builderForValue) {
      if (warningsBuilder_ == null) {
        ensureWarningsIsMutable();
        warnings_.set(index, builderForValue.build());
        onChanged();
      } else {
        warningsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Validation warnings (non-blocking issues)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.PipelineValidationWarning warnings = 3 [json_name = "warnings"];</code>
     */
    public Builder addWarnings(datapower.noesis.v1.PipelineValidationWarning value) {
      if (warningsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureWarningsIsMutable();
        warnings_.add(value);
        onChanged();
      } else {
        warningsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Validation warnings (non-blocking issues)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.PipelineValidationWarning warnings = 3 [json_name = "warnings"];</code>
     */
    public Builder addWarnings(
        int index, datapower.noesis.v1.PipelineValidationWarning value) {
      if (warningsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureWarningsIsMutable();
        warnings_.add(index, value);
        onChanged();
      } else {
        warningsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Validation warnings (non-blocking issues)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.PipelineValidationWarning warnings = 3 [json_name = "warnings"];</code>
     */
    public Builder addWarnings(
        datapower.noesis.v1.PipelineValidationWarning.Builder builderForValue) {
      if (warningsBuilder_ == null) {
        ensureWarningsIsMutable();
        warnings_.add(builderForValue.build());
        onChanged();
      } else {
        warningsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Validation warnings (non-blocking issues)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.PipelineValidationWarning warnings = 3 [json_name = "warnings"];</code>
     */
    public Builder addWarnings(
        int index, datapower.noesis.v1.PipelineValidationWarning.Builder builderForValue) {
      if (warningsBuilder_ == null) {
        ensureWarningsIsMutable();
        warnings_.add(index, builderForValue.build());
        onChanged();
      } else {
        warningsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Validation warnings (non-blocking issues)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.PipelineValidationWarning warnings = 3 [json_name = "warnings"];</code>
     */
    public Builder addAllWarnings(
        java.lang.Iterable<? extends datapower.noesis.v1.PipelineValidationWarning> values) {
      if (warningsBuilder_ == null) {
        ensureWarningsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, warnings_);
        onChanged();
      } else {
        warningsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Validation warnings (non-blocking issues)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.PipelineValidationWarning warnings = 3 [json_name = "warnings"];</code>
     */
    public Builder clearWarnings() {
      if (warningsBuilder_ == null) {
        warnings_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        warningsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Validation warnings (non-blocking issues)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.PipelineValidationWarning warnings = 3 [json_name = "warnings"];</code>
     */
    public Builder removeWarnings(int index) {
      if (warningsBuilder_ == null) {
        ensureWarningsIsMutable();
        warnings_.remove(index);
        onChanged();
      } else {
        warningsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Validation warnings (non-blocking issues)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.PipelineValidationWarning warnings = 3 [json_name = "warnings"];</code>
     */
    public datapower.noesis.v1.PipelineValidationWarning.Builder getWarningsBuilder(
        int index) {
      return getWarningsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Validation warnings (non-blocking issues)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.PipelineValidationWarning warnings = 3 [json_name = "warnings"];</code>
     */
    public datapower.noesis.v1.PipelineValidationWarningOrBuilder getWarningsOrBuilder(
        int index) {
      if (warningsBuilder_ == null) {
        return warnings_.get(index);  } else {
        return warningsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Validation warnings (non-blocking issues)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.PipelineValidationWarning warnings = 3 [json_name = "warnings"];</code>
     */
    public java.util.List<? extends datapower.noesis.v1.PipelineValidationWarningOrBuilder> 
         getWarningsOrBuilderList() {
      if (warningsBuilder_ != null) {
        return warningsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(warnings_);
      }
    }
    /**
     * <pre>
     * Validation warnings (non-blocking issues)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.PipelineValidationWarning warnings = 3 [json_name = "warnings"];</code>
     */
    public datapower.noesis.v1.PipelineValidationWarning.Builder addWarningsBuilder() {
      return getWarningsFieldBuilder().addBuilder(
          datapower.noesis.v1.PipelineValidationWarning.getDefaultInstance());
    }
    /**
     * <pre>
     * Validation warnings (non-blocking issues)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.PipelineValidationWarning warnings = 3 [json_name = "warnings"];</code>
     */
    public datapower.noesis.v1.PipelineValidationWarning.Builder addWarningsBuilder(
        int index) {
      return getWarningsFieldBuilder().addBuilder(
          index, datapower.noesis.v1.PipelineValidationWarning.getDefaultInstance());
    }
    /**
     * <pre>
     * Validation warnings (non-blocking issues)
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.PipelineValidationWarning warnings = 3 [json_name = "warnings"];</code>
     */
    public java.util.List<datapower.noesis.v1.PipelineValidationWarning.Builder> 
         getWarningsBuilderList() {
      return getWarningsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        datapower.noesis.v1.PipelineValidationWarning, datapower.noesis.v1.PipelineValidationWarning.Builder, datapower.noesis.v1.PipelineValidationWarningOrBuilder> 
        getWarningsFieldBuilder() {
      if (warningsBuilder_ == null) {
        warningsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            datapower.noesis.v1.PipelineValidationWarning, datapower.noesis.v1.PipelineValidationWarning.Builder, datapower.noesis.v1.PipelineValidationWarningOrBuilder>(
                warnings_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        warnings_ = null;
      }
      return warningsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:datapower.noesis.v1.PipelineValidationResult)
  }

  // @@protoc_insertion_point(class_scope:datapower.noesis.v1.PipelineValidationResult)
  private static final datapower.noesis.v1.PipelineValidationResult DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new datapower.noesis.v1.PipelineValidationResult();
  }

  public static datapower.noesis.v1.PipelineValidationResult getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PipelineValidationResult>
      PARSER = new com.google.protobuf.AbstractParser<PipelineValidationResult>() {
    @java.lang.Override
    public PipelineValidationResult parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<PipelineValidationResult> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PipelineValidationResult> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public datapower.noesis.v1.PipelineValidationResult getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

