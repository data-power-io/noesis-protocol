// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datapower/noesis/v1/cdc_events.proto

package datapower.noesis.v1;

/**
 * <pre>
 * ImportConfig contains configuration for the import
 * </pre>
 *
 * Protobuf type {@code datapower.noesis.v1.ImportConfig}
 */
public final class ImportConfig extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:datapower.noesis.v1.ImportConfig)
    ImportConfigOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ImportConfig.newBuilder() to construct.
  private ImportConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ImportConfig() {
    targetPlatform_ = "";
    mode_ = "";
    idColumns_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ImportConfig();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return datapower.noesis.v1.CdcEvents.internal_static_datapower_noesis_v1_ImportConfig_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 6:
        return internalGetOptions();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return datapower.noesis.v1.CdcEvents.internal_static_datapower_noesis_v1_ImportConfig_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            datapower.noesis.v1.ImportConfig.class, datapower.noesis.v1.ImportConfig.Builder.class);
  }

  public static final int TARGET_PLATFORM_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object targetPlatform_ = "";
  /**
   * <pre>
   * Target platform/system
   * </pre>
   *
   * <code>string target_platform = 1 [json_name = "targetPlatform"];</code>
   * @return The targetPlatform.
   */
  @java.lang.Override
  public java.lang.String getTargetPlatform() {
    java.lang.Object ref = targetPlatform_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      targetPlatform_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Target platform/system
   * </pre>
   *
   * <code>string target_platform = 1 [json_name = "targetPlatform"];</code>
   * @return The bytes for targetPlatform.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTargetPlatformBytes() {
    java.lang.Object ref = targetPlatform_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      targetPlatform_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int MODE_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object mode_ = "";
  /**
   * <pre>
   * Import mode (upsert, insert, update, etc.)
   * </pre>
   *
   * <code>string mode = 2 [json_name = "mode"];</code>
   * @return The mode.
   */
  @java.lang.Override
  public java.lang.String getMode() {
    java.lang.Object ref = mode_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      mode_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Import mode (upsert, insert, update, etc.)
   * </pre>
   *
   * <code>string mode = 2 [json_name = "mode"];</code>
   * @return The bytes for mode.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getModeBytes() {
    java.lang.Object ref = mode_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      mode_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ID_COLUMNS_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringArrayList idColumns_ =
      com.google.protobuf.LazyStringArrayList.emptyList();
  /**
   * <pre>
   * ID columns for matching
   * </pre>
   *
   * <code>repeated string id_columns = 3 [json_name = "idColumns"];</code>
   * @return A list containing the idColumns.
   */
  public com.google.protobuf.ProtocolStringList
      getIdColumnsList() {
    return idColumns_;
  }
  /**
   * <pre>
   * ID columns for matching
   * </pre>
   *
   * <code>repeated string id_columns = 3 [json_name = "idColumns"];</code>
   * @return The count of idColumns.
   */
  public int getIdColumnsCount() {
    return idColumns_.size();
  }
  /**
   * <pre>
   * ID columns for matching
   * </pre>
   *
   * <code>repeated string id_columns = 3 [json_name = "idColumns"];</code>
   * @param index The index of the element to return.
   * @return The idColumns at the given index.
   */
  public java.lang.String getIdColumns(int index) {
    return idColumns_.get(index);
  }
  /**
   * <pre>
   * ID columns for matching
   * </pre>
   *
   * <code>repeated string id_columns = 3 [json_name = "idColumns"];</code>
   * @param index The index of the value to return.
   * @return The bytes of the idColumns at the given index.
   */
  public com.google.protobuf.ByteString
      getIdColumnsBytes(int index) {
    return idColumns_.getByteString(index);
  }

  public static final int CHECK_DEPENDENCIES_FIELD_NUMBER = 4;
  private boolean checkDependencies_ = false;
  /**
   * <pre>
   * Whether to check dependencies
   * </pre>
   *
   * <code>bool check_dependencies = 4 [json_name = "checkDependencies"];</code>
   * @return The checkDependencies.
   */
  @java.lang.Override
  public boolean getCheckDependencies() {
    return checkDependencies_;
  }

  public static final int BATCH_SIZE_FIELD_NUMBER = 5;
  private int batchSize_ = 0;
  /**
   * <pre>
   * Batch size for bulk operations
   * </pre>
   *
   * <code>int32 batch_size = 5 [json_name = "batchSize"];</code>
   * @return The batchSize.
   */
  @java.lang.Override
  public int getBatchSize() {
    return batchSize_;
  }

  public static final int OPTIONS_FIELD_NUMBER = 6;
  private static final class OptionsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.String>newDefaultInstance(
                datapower.noesis.v1.CdcEvents.internal_static_datapower_noesis_v1_ImportConfig_OptionsEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.String> options_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.String>
  internalGetOptions() {
    if (options_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          OptionsDefaultEntryHolder.defaultEntry);
    }
    return options_;
  }
  public int getOptionsCount() {
    return internalGetOptions().getMap().size();
  }
  /**
   * <pre>
   * Additional configuration
   * </pre>
   *
   * <code>map&lt;string, string&gt; options = 6 [json_name = "options"];</code>
   */
  @java.lang.Override
  public boolean containsOptions(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetOptions().getMap().containsKey(key);
  }
  /**
   * Use {@link #getOptionsMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getOptions() {
    return getOptionsMap();
  }
  /**
   * <pre>
   * Additional configuration
   * </pre>
   *
   * <code>map&lt;string, string&gt; options = 6 [json_name = "options"];</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.String, java.lang.String> getOptionsMap() {
    return internalGetOptions().getMap();
  }
  /**
   * <pre>
   * Additional configuration
   * </pre>
   *
   * <code>map&lt;string, string&gt; options = 6 [json_name = "options"];</code>
   */
  @java.lang.Override
  public /* nullable */
java.lang.String getOptionsOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetOptions().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Additional configuration
   * </pre>
   *
   * <code>map&lt;string, string&gt; options = 6 [json_name = "options"];</code>
   */
  @java.lang.Override
  public java.lang.String getOptionsOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetOptions().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(targetPlatform_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, targetPlatform_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(mode_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, mode_);
    }
    for (int i = 0; i < idColumns_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, idColumns_.getRaw(i));
    }
    if (checkDependencies_ != false) {
      output.writeBool(4, checkDependencies_);
    }
    if (batchSize_ != 0) {
      output.writeInt32(5, batchSize_);
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetOptions(),
        OptionsDefaultEntryHolder.defaultEntry,
        6);
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(targetPlatform_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, targetPlatform_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(mode_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, mode_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < idColumns_.size(); i++) {
        dataSize += computeStringSizeNoTag(idColumns_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getIdColumnsList().size();
    }
    if (checkDependencies_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, checkDependencies_);
    }
    if (batchSize_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, batchSize_);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
         : internalGetOptions().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
      options__ = OptionsDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, options__);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof datapower.noesis.v1.ImportConfig)) {
      return super.equals(obj);
    }
    datapower.noesis.v1.ImportConfig other = (datapower.noesis.v1.ImportConfig) obj;

    if (!getTargetPlatform()
        .equals(other.getTargetPlatform())) return false;
    if (!getMode()
        .equals(other.getMode())) return false;
    if (!getIdColumnsList()
        .equals(other.getIdColumnsList())) return false;
    if (getCheckDependencies()
        != other.getCheckDependencies()) return false;
    if (getBatchSize()
        != other.getBatchSize()) return false;
    if (!internalGetOptions().equals(
        other.internalGetOptions())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TARGET_PLATFORM_FIELD_NUMBER;
    hash = (53 * hash) + getTargetPlatform().hashCode();
    hash = (37 * hash) + MODE_FIELD_NUMBER;
    hash = (53 * hash) + getMode().hashCode();
    if (getIdColumnsCount() > 0) {
      hash = (37 * hash) + ID_COLUMNS_FIELD_NUMBER;
      hash = (53 * hash) + getIdColumnsList().hashCode();
    }
    hash = (37 * hash) + CHECK_DEPENDENCIES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getCheckDependencies());
    hash = (37 * hash) + BATCH_SIZE_FIELD_NUMBER;
    hash = (53 * hash) + getBatchSize();
    if (!internalGetOptions().getMap().isEmpty()) {
      hash = (37 * hash) + OPTIONS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetOptions().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static datapower.noesis.v1.ImportConfig parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.ImportConfig parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.ImportConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.ImportConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.ImportConfig parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.ImportConfig parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.ImportConfig parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.ImportConfig parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static datapower.noesis.v1.ImportConfig parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static datapower.noesis.v1.ImportConfig parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static datapower.noesis.v1.ImportConfig parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.ImportConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(datapower.noesis.v1.ImportConfig prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * ImportConfig contains configuration for the import
   * </pre>
   *
   * Protobuf type {@code datapower.noesis.v1.ImportConfig}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:datapower.noesis.v1.ImportConfig)
      datapower.noesis.v1.ImportConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return datapower.noesis.v1.CdcEvents.internal_static_datapower_noesis_v1_ImportConfig_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 6:
          return internalGetOptions();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 6:
          return internalGetMutableOptions();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return datapower.noesis.v1.CdcEvents.internal_static_datapower_noesis_v1_ImportConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              datapower.noesis.v1.ImportConfig.class, datapower.noesis.v1.ImportConfig.Builder.class);
    }

    // Construct using datapower.noesis.v1.ImportConfig.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      targetPlatform_ = "";
      mode_ = "";
      idColumns_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      checkDependencies_ = false;
      batchSize_ = 0;
      internalGetMutableOptions().clear();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return datapower.noesis.v1.CdcEvents.internal_static_datapower_noesis_v1_ImportConfig_descriptor;
    }

    @java.lang.Override
    public datapower.noesis.v1.ImportConfig getDefaultInstanceForType() {
      return datapower.noesis.v1.ImportConfig.getDefaultInstance();
    }

    @java.lang.Override
    public datapower.noesis.v1.ImportConfig build() {
      datapower.noesis.v1.ImportConfig result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public datapower.noesis.v1.ImportConfig buildPartial() {
      datapower.noesis.v1.ImportConfig result = new datapower.noesis.v1.ImportConfig(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(datapower.noesis.v1.ImportConfig result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.targetPlatform_ = targetPlatform_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.mode_ = mode_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        idColumns_.makeImmutable();
        result.idColumns_ = idColumns_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.checkDependencies_ = checkDependencies_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.batchSize_ = batchSize_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.options_ = internalGetOptions();
        result.options_.makeImmutable();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof datapower.noesis.v1.ImportConfig) {
        return mergeFrom((datapower.noesis.v1.ImportConfig)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(datapower.noesis.v1.ImportConfig other) {
      if (other == datapower.noesis.v1.ImportConfig.getDefaultInstance()) return this;
      if (!other.getTargetPlatform().isEmpty()) {
        targetPlatform_ = other.targetPlatform_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getMode().isEmpty()) {
        mode_ = other.mode_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (!other.idColumns_.isEmpty()) {
        if (idColumns_.isEmpty()) {
          idColumns_ = other.idColumns_;
          bitField0_ |= 0x00000004;
        } else {
          ensureIdColumnsIsMutable();
          idColumns_.addAll(other.idColumns_);
        }
        onChanged();
      }
      if (other.getCheckDependencies() != false) {
        setCheckDependencies(other.getCheckDependencies());
      }
      if (other.getBatchSize() != 0) {
        setBatchSize(other.getBatchSize());
      }
      internalGetMutableOptions().mergeFrom(
          other.internalGetOptions());
      bitField0_ |= 0x00000020;
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              targetPlatform_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              mode_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureIdColumnsIsMutable();
              idColumns_.add(s);
              break;
            } // case 26
            case 32: {
              checkDependencies_ = input.readBool();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 40: {
              batchSize_ = input.readInt32();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            case 50: {
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              options__ = input.readMessage(
                  OptionsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableOptions().getMutableMap().put(
                  options__.getKey(), options__.getValue());
              bitField0_ |= 0x00000020;
              break;
            } // case 50
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object targetPlatform_ = "";
    /**
     * <pre>
     * Target platform/system
     * </pre>
     *
     * <code>string target_platform = 1 [json_name = "targetPlatform"];</code>
     * @return The targetPlatform.
     */
    public java.lang.String getTargetPlatform() {
      java.lang.Object ref = targetPlatform_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        targetPlatform_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Target platform/system
     * </pre>
     *
     * <code>string target_platform = 1 [json_name = "targetPlatform"];</code>
     * @return The bytes for targetPlatform.
     */
    public com.google.protobuf.ByteString
        getTargetPlatformBytes() {
      java.lang.Object ref = targetPlatform_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        targetPlatform_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Target platform/system
     * </pre>
     *
     * <code>string target_platform = 1 [json_name = "targetPlatform"];</code>
     * @param value The targetPlatform to set.
     * @return This builder for chaining.
     */
    public Builder setTargetPlatform(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      targetPlatform_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Target platform/system
     * </pre>
     *
     * <code>string target_platform = 1 [json_name = "targetPlatform"];</code>
     * @return This builder for chaining.
     */
    public Builder clearTargetPlatform() {
      targetPlatform_ = getDefaultInstance().getTargetPlatform();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Target platform/system
     * </pre>
     *
     * <code>string target_platform = 1 [json_name = "targetPlatform"];</code>
     * @param value The bytes for targetPlatform to set.
     * @return This builder for chaining.
     */
    public Builder setTargetPlatformBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      targetPlatform_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object mode_ = "";
    /**
     * <pre>
     * Import mode (upsert, insert, update, etc.)
     * </pre>
     *
     * <code>string mode = 2 [json_name = "mode"];</code>
     * @return The mode.
     */
    public java.lang.String getMode() {
      java.lang.Object ref = mode_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        mode_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Import mode (upsert, insert, update, etc.)
     * </pre>
     *
     * <code>string mode = 2 [json_name = "mode"];</code>
     * @return The bytes for mode.
     */
    public com.google.protobuf.ByteString
        getModeBytes() {
      java.lang.Object ref = mode_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        mode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Import mode (upsert, insert, update, etc.)
     * </pre>
     *
     * <code>string mode = 2 [json_name = "mode"];</code>
     * @param value The mode to set.
     * @return This builder for chaining.
     */
    public Builder setMode(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      mode_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Import mode (upsert, insert, update, etc.)
     * </pre>
     *
     * <code>string mode = 2 [json_name = "mode"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMode() {
      mode_ = getDefaultInstance().getMode();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Import mode (upsert, insert, update, etc.)
     * </pre>
     *
     * <code>string mode = 2 [json_name = "mode"];</code>
     * @param value The bytes for mode to set.
     * @return This builder for chaining.
     */
    public Builder setModeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      mode_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringArrayList idColumns_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    private void ensureIdColumnsIsMutable() {
      if (!idColumns_.isModifiable()) {
        idColumns_ = new com.google.protobuf.LazyStringArrayList(idColumns_);
      }
      bitField0_ |= 0x00000004;
    }
    /**
     * <pre>
     * ID columns for matching
     * </pre>
     *
     * <code>repeated string id_columns = 3 [json_name = "idColumns"];</code>
     * @return A list containing the idColumns.
     */
    public com.google.protobuf.ProtocolStringList
        getIdColumnsList() {
      idColumns_.makeImmutable();
      return idColumns_;
    }
    /**
     * <pre>
     * ID columns for matching
     * </pre>
     *
     * <code>repeated string id_columns = 3 [json_name = "idColumns"];</code>
     * @return The count of idColumns.
     */
    public int getIdColumnsCount() {
      return idColumns_.size();
    }
    /**
     * <pre>
     * ID columns for matching
     * </pre>
     *
     * <code>repeated string id_columns = 3 [json_name = "idColumns"];</code>
     * @param index The index of the element to return.
     * @return The idColumns at the given index.
     */
    public java.lang.String getIdColumns(int index) {
      return idColumns_.get(index);
    }
    /**
     * <pre>
     * ID columns for matching
     * </pre>
     *
     * <code>repeated string id_columns = 3 [json_name = "idColumns"];</code>
     * @param index The index of the value to return.
     * @return The bytes of the idColumns at the given index.
     */
    public com.google.protobuf.ByteString
        getIdColumnsBytes(int index) {
      return idColumns_.getByteString(index);
    }
    /**
     * <pre>
     * ID columns for matching
     * </pre>
     *
     * <code>repeated string id_columns = 3 [json_name = "idColumns"];</code>
     * @param index The index to set the value at.
     * @param value The idColumns to set.
     * @return This builder for chaining.
     */
    public Builder setIdColumns(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureIdColumnsIsMutable();
      idColumns_.set(index, value);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * ID columns for matching
     * </pre>
     *
     * <code>repeated string id_columns = 3 [json_name = "idColumns"];</code>
     * @param value The idColumns to add.
     * @return This builder for chaining.
     */
    public Builder addIdColumns(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureIdColumnsIsMutable();
      idColumns_.add(value);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * ID columns for matching
     * </pre>
     *
     * <code>repeated string id_columns = 3 [json_name = "idColumns"];</code>
     * @param values The idColumns to add.
     * @return This builder for chaining.
     */
    public Builder addAllIdColumns(
        java.lang.Iterable<java.lang.String> values) {
      ensureIdColumnsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, idColumns_);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * ID columns for matching
     * </pre>
     *
     * <code>repeated string id_columns = 3 [json_name = "idColumns"];</code>
     * @return This builder for chaining.
     */
    public Builder clearIdColumns() {
      idColumns_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
      bitField0_ = (bitField0_ & ~0x00000004);;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * ID columns for matching
     * </pre>
     *
     * <code>repeated string id_columns = 3 [json_name = "idColumns"];</code>
     * @param value The bytes of the idColumns to add.
     * @return This builder for chaining.
     */
    public Builder addIdColumnsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureIdColumnsIsMutable();
      idColumns_.add(value);
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private boolean checkDependencies_ ;
    /**
     * <pre>
     * Whether to check dependencies
     * </pre>
     *
     * <code>bool check_dependencies = 4 [json_name = "checkDependencies"];</code>
     * @return The checkDependencies.
     */
    @java.lang.Override
    public boolean getCheckDependencies() {
      return checkDependencies_;
    }
    /**
     * <pre>
     * Whether to check dependencies
     * </pre>
     *
     * <code>bool check_dependencies = 4 [json_name = "checkDependencies"];</code>
     * @param value The checkDependencies to set.
     * @return This builder for chaining.
     */
    public Builder setCheckDependencies(boolean value) {

      checkDependencies_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether to check dependencies
     * </pre>
     *
     * <code>bool check_dependencies = 4 [json_name = "checkDependencies"];</code>
     * @return This builder for chaining.
     */
    public Builder clearCheckDependencies() {
      bitField0_ = (bitField0_ & ~0x00000008);
      checkDependencies_ = false;
      onChanged();
      return this;
    }

    private int batchSize_ ;
    /**
     * <pre>
     * Batch size for bulk operations
     * </pre>
     *
     * <code>int32 batch_size = 5 [json_name = "batchSize"];</code>
     * @return The batchSize.
     */
    @java.lang.Override
    public int getBatchSize() {
      return batchSize_;
    }
    /**
     * <pre>
     * Batch size for bulk operations
     * </pre>
     *
     * <code>int32 batch_size = 5 [json_name = "batchSize"];</code>
     * @param value The batchSize to set.
     * @return This builder for chaining.
     */
    public Builder setBatchSize(int value) {

      batchSize_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Batch size for bulk operations
     * </pre>
     *
     * <code>int32 batch_size = 5 [json_name = "batchSize"];</code>
     * @return This builder for chaining.
     */
    public Builder clearBatchSize() {
      bitField0_ = (bitField0_ & ~0x00000010);
      batchSize_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> options_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetOptions() {
      if (options_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            OptionsDefaultEntryHolder.defaultEntry);
      }
      return options_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMutableOptions() {
      if (options_ == null) {
        options_ = com.google.protobuf.MapField.newMapField(
            OptionsDefaultEntryHolder.defaultEntry);
      }
      if (!options_.isMutable()) {
        options_ = options_.copy();
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return options_;
    }
    public int getOptionsCount() {
      return internalGetOptions().getMap().size();
    }
    /**
     * <pre>
     * Additional configuration
     * </pre>
     *
     * <code>map&lt;string, string&gt; options = 6 [json_name = "options"];</code>
     */
    @java.lang.Override
    public boolean containsOptions(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetOptions().getMap().containsKey(key);
    }
    /**
     * Use {@link #getOptionsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getOptions() {
      return getOptionsMap();
    }
    /**
     * <pre>
     * Additional configuration
     * </pre>
     *
     * <code>map&lt;string, string&gt; options = 6 [json_name = "options"];</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.String> getOptionsMap() {
      return internalGetOptions().getMap();
    }
    /**
     * <pre>
     * Additional configuration
     * </pre>
     *
     * <code>map&lt;string, string&gt; options = 6 [json_name = "options"];</code>
     */
    @java.lang.Override
    public /* nullable */
java.lang.String getOptionsOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetOptions().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Additional configuration
     * </pre>
     *
     * <code>map&lt;string, string&gt; options = 6 [json_name = "options"];</code>
     */
    @java.lang.Override
    public java.lang.String getOptionsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetOptions().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    public Builder clearOptions() {
      bitField0_ = (bitField0_ & ~0x00000020);
      internalGetMutableOptions().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * Additional configuration
     * </pre>
     *
     * <code>map&lt;string, string&gt; options = 6 [json_name = "options"];</code>
     */
    public Builder removeOptions(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableOptions().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String>
        getMutableOptions() {
      bitField0_ |= 0x00000020;
      return internalGetMutableOptions().getMutableMap();
    }
    /**
     * <pre>
     * Additional configuration
     * </pre>
     *
     * <code>map&lt;string, string&gt; options = 6 [json_name = "options"];</code>
     */
    public Builder putOptions(
        java.lang.String key,
        java.lang.String value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) { throw new NullPointerException("map value"); }
      internalGetMutableOptions().getMutableMap()
          .put(key, value);
      bitField0_ |= 0x00000020;
      return this;
    }
    /**
     * <pre>
     * Additional configuration
     * </pre>
     *
     * <code>map&lt;string, string&gt; options = 6 [json_name = "options"];</code>
     */
    public Builder putAllOptions(
        java.util.Map<java.lang.String, java.lang.String> values) {
      internalGetMutableOptions().getMutableMap()
          .putAll(values);
      bitField0_ |= 0x00000020;
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:datapower.noesis.v1.ImportConfig)
  }

  // @@protoc_insertion_point(class_scope:datapower.noesis.v1.ImportConfig)
  private static final datapower.noesis.v1.ImportConfig DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new datapower.noesis.v1.ImportConfig();
  }

  public static datapower.noesis.v1.ImportConfig getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ImportConfig>
      PARSER = new com.google.protobuf.AbstractParser<ImportConfig>() {
    @java.lang.Override
    public ImportConfig parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ImportConfig> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ImportConfig> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public datapower.noesis.v1.ImportConfig getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

