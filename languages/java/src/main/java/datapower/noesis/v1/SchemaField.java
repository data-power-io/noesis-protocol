// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datapower/noesis/v1/pipeline.proto

package datapower.noesis.v1;

/**
 * <pre>
 * SchemaField defines a single field in a source or target schema
 * </pre>
 *
 * Protobuf type {@code datapower.noesis.v1.SchemaField}
 */
public final class SchemaField extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:datapower.noesis.v1.SchemaField)
    SchemaFieldOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SchemaField.newBuilder() to construct.
  private SchemaField(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SchemaField() {
    name_ = "";
    type_ = "";
    defaultValue_ = "";
    description_ = "";
    elementType_ = "";
    fields_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new SchemaField();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return datapower.noesis.v1.Pipeline.internal_static_datapower_noesis_v1_SchemaField_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return datapower.noesis.v1.Pipeline.internal_static_datapower_noesis_v1_SchemaField_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            datapower.noesis.v1.SchemaField.class, datapower.noesis.v1.SchemaField.Builder.class);
  }

  public static final int NAME_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object name_ = "";
  /**
   * <pre>
   * Field name
   * </pre>
   *
   * <code>string name = 1 [json_name = "name"];</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Field name
   * </pre>
   *
   * <code>string name = 1 [json_name = "name"];</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TYPE_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object type_ = "";
  /**
   * <pre>
   * Data type (STRING, LONG, INTEGER, DOUBLE, DECIMAL, BOOLEAN, DATE, TIMESTAMP, ARRAY, STRUCT)
   * </pre>
   *
   * <code>string type = 2 [json_name = "type"];</code>
   * @return The type.
   */
  @java.lang.Override
  public java.lang.String getType() {
    java.lang.Object ref = type_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      type_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Data type (STRING, LONG, INTEGER, DOUBLE, DECIMAL, BOOLEAN, DATE, TIMESTAMP, ARRAY, STRUCT)
   * </pre>
   *
   * <code>string type = 2 [json_name = "type"];</code>
   * @return The bytes for type.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTypeBytes() {
    java.lang.Object ref = type_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      type_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int NULLABLE_FIELD_NUMBER = 3;
  private boolean nullable_ = false;
  /**
   * <pre>
   * Whether this field can be null
   * </pre>
   *
   * <code>bool nullable = 3 [json_name = "nullable"];</code>
   * @return The nullable.
   */
  @java.lang.Override
  public boolean getNullable() {
    return nullable_;
  }

  public static final int DEFAULT_VALUE_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private volatile java.lang.Object defaultValue_ = "";
  /**
   * <pre>
   * Optional: Default value
   * </pre>
   *
   * <code>string default_value = 4 [json_name = "defaultValue"];</code>
   * @return The defaultValue.
   */
  @java.lang.Override
  public java.lang.String getDefaultValue() {
    java.lang.Object ref = defaultValue_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      defaultValue_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Optional: Default value
   * </pre>
   *
   * <code>string default_value = 4 [json_name = "defaultValue"];</code>
   * @return The bytes for defaultValue.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDefaultValueBytes() {
    java.lang.Object ref = defaultValue_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      defaultValue_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DESCRIPTION_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private volatile java.lang.Object description_ = "";
  /**
   * <pre>
   * Optional: Field documentation
   * </pre>
   *
   * <code>string description = 5 [json_name = "description"];</code>
   * @return The description.
   */
  @java.lang.Override
  public java.lang.String getDescription() {
    java.lang.Object ref = description_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      description_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Optional: Field documentation
   * </pre>
   *
   * <code>string description = 5 [json_name = "description"];</code>
   * @return The bytes for description.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDescriptionBytes() {
    java.lang.Object ref = description_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      description_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PRECISION_FIELD_NUMBER = 6;
  private int precision_ = 0;
  /**
   * <pre>
   * For DECIMAL types: precision and scale
   * </pre>
   *
   * <code>int32 precision = 6 [json_name = "precision"];</code>
   * @return The precision.
   */
  @java.lang.Override
  public int getPrecision() {
    return precision_;
  }

  public static final int SCALE_FIELD_NUMBER = 7;
  private int scale_ = 0;
  /**
   * <code>int32 scale = 7 [json_name = "scale"];</code>
   * @return The scale.
   */
  @java.lang.Override
  public int getScale() {
    return scale_;
  }

  public static final int ELEMENT_TYPE_FIELD_NUMBER = 8;
  @SuppressWarnings("serial")
  private volatile java.lang.Object elementType_ = "";
  /**
   * <pre>
   * For ARRAY types: element type
   * </pre>
   *
   * <code>string element_type = 8 [json_name = "elementType"];</code>
   * @return The elementType.
   */
  @java.lang.Override
  public java.lang.String getElementType() {
    java.lang.Object ref = elementType_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      elementType_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * For ARRAY types: element type
   * </pre>
   *
   * <code>string element_type = 8 [json_name = "elementType"];</code>
   * @return The bytes for elementType.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getElementTypeBytes() {
    java.lang.Object ref = elementType_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      elementType_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FIELDS_FIELD_NUMBER = 9;
  @SuppressWarnings("serial")
  private java.util.List<datapower.noesis.v1.SchemaField> fields_;
  /**
   * <pre>
   * For nested types: sub-fields
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.SchemaField fields = 9 [json_name = "fields"];</code>
   */
  @java.lang.Override
  public java.util.List<datapower.noesis.v1.SchemaField> getFieldsList() {
    return fields_;
  }
  /**
   * <pre>
   * For nested types: sub-fields
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.SchemaField fields = 9 [json_name = "fields"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends datapower.noesis.v1.SchemaFieldOrBuilder> 
      getFieldsOrBuilderList() {
    return fields_;
  }
  /**
   * <pre>
   * For nested types: sub-fields
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.SchemaField fields = 9 [json_name = "fields"];</code>
   */
  @java.lang.Override
  public int getFieldsCount() {
    return fields_.size();
  }
  /**
   * <pre>
   * For nested types: sub-fields
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.SchemaField fields = 9 [json_name = "fields"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.SchemaField getFields(int index) {
    return fields_.get(index);
  }
  /**
   * <pre>
   * For nested types: sub-fields
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.SchemaField fields = 9 [json_name = "fields"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.SchemaFieldOrBuilder getFieldsOrBuilder(
      int index) {
    return fields_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(type_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, type_);
    }
    if (nullable_ != false) {
      output.writeBool(3, nullable_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(defaultValue_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, defaultValue_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(description_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, description_);
    }
    if (precision_ != 0) {
      output.writeInt32(6, precision_);
    }
    if (scale_ != 0) {
      output.writeInt32(7, scale_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(elementType_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 8, elementType_);
    }
    for (int i = 0; i < fields_.size(); i++) {
      output.writeMessage(9, fields_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(type_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, type_);
    }
    if (nullable_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(3, nullable_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(defaultValue_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, defaultValue_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(description_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, description_);
    }
    if (precision_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, precision_);
    }
    if (scale_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, scale_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(elementType_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, elementType_);
    }
    for (int i = 0; i < fields_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, fields_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof datapower.noesis.v1.SchemaField)) {
      return super.equals(obj);
    }
    datapower.noesis.v1.SchemaField other = (datapower.noesis.v1.SchemaField) obj;

    if (!getName()
        .equals(other.getName())) return false;
    if (!getType()
        .equals(other.getType())) return false;
    if (getNullable()
        != other.getNullable()) return false;
    if (!getDefaultValue()
        .equals(other.getDefaultValue())) return false;
    if (!getDescription()
        .equals(other.getDescription())) return false;
    if (getPrecision()
        != other.getPrecision()) return false;
    if (getScale()
        != other.getScale()) return false;
    if (!getElementType()
        .equals(other.getElementType())) return false;
    if (!getFieldsList()
        .equals(other.getFieldsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    hash = (37 * hash) + TYPE_FIELD_NUMBER;
    hash = (53 * hash) + getType().hashCode();
    hash = (37 * hash) + NULLABLE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getNullable());
    hash = (37 * hash) + DEFAULT_VALUE_FIELD_NUMBER;
    hash = (53 * hash) + getDefaultValue().hashCode();
    hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
    hash = (53 * hash) + getDescription().hashCode();
    hash = (37 * hash) + PRECISION_FIELD_NUMBER;
    hash = (53 * hash) + getPrecision();
    hash = (37 * hash) + SCALE_FIELD_NUMBER;
    hash = (53 * hash) + getScale();
    hash = (37 * hash) + ELEMENT_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + getElementType().hashCode();
    if (getFieldsCount() > 0) {
      hash = (37 * hash) + FIELDS_FIELD_NUMBER;
      hash = (53 * hash) + getFieldsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static datapower.noesis.v1.SchemaField parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.SchemaField parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.SchemaField parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.SchemaField parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.SchemaField parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.SchemaField parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.SchemaField parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.SchemaField parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static datapower.noesis.v1.SchemaField parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static datapower.noesis.v1.SchemaField parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static datapower.noesis.v1.SchemaField parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.SchemaField parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(datapower.noesis.v1.SchemaField prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * SchemaField defines a single field in a source or target schema
   * </pre>
   *
   * Protobuf type {@code datapower.noesis.v1.SchemaField}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:datapower.noesis.v1.SchemaField)
      datapower.noesis.v1.SchemaFieldOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return datapower.noesis.v1.Pipeline.internal_static_datapower_noesis_v1_SchemaField_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return datapower.noesis.v1.Pipeline.internal_static_datapower_noesis_v1_SchemaField_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              datapower.noesis.v1.SchemaField.class, datapower.noesis.v1.SchemaField.Builder.class);
    }

    // Construct using datapower.noesis.v1.SchemaField.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      name_ = "";
      type_ = "";
      nullable_ = false;
      defaultValue_ = "";
      description_ = "";
      precision_ = 0;
      scale_ = 0;
      elementType_ = "";
      if (fieldsBuilder_ == null) {
        fields_ = java.util.Collections.emptyList();
      } else {
        fields_ = null;
        fieldsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000100);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return datapower.noesis.v1.Pipeline.internal_static_datapower_noesis_v1_SchemaField_descriptor;
    }

    @java.lang.Override
    public datapower.noesis.v1.SchemaField getDefaultInstanceForType() {
      return datapower.noesis.v1.SchemaField.getDefaultInstance();
    }

    @java.lang.Override
    public datapower.noesis.v1.SchemaField build() {
      datapower.noesis.v1.SchemaField result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public datapower.noesis.v1.SchemaField buildPartial() {
      datapower.noesis.v1.SchemaField result = new datapower.noesis.v1.SchemaField(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(datapower.noesis.v1.SchemaField result) {
      if (fieldsBuilder_ == null) {
        if (((bitField0_ & 0x00000100) != 0)) {
          fields_ = java.util.Collections.unmodifiableList(fields_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.fields_ = fields_;
      } else {
        result.fields_ = fieldsBuilder_.build();
      }
    }

    private void buildPartial0(datapower.noesis.v1.SchemaField result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.name_ = name_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.type_ = type_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.nullable_ = nullable_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.defaultValue_ = defaultValue_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.description_ = description_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.precision_ = precision_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.scale_ = scale_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.elementType_ = elementType_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof datapower.noesis.v1.SchemaField) {
        return mergeFrom((datapower.noesis.v1.SchemaField)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(datapower.noesis.v1.SchemaField other) {
      if (other == datapower.noesis.v1.SchemaField.getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getType().isEmpty()) {
        type_ = other.type_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (other.getNullable() != false) {
        setNullable(other.getNullable());
      }
      if (!other.getDefaultValue().isEmpty()) {
        defaultValue_ = other.defaultValue_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      if (!other.getDescription().isEmpty()) {
        description_ = other.description_;
        bitField0_ |= 0x00000010;
        onChanged();
      }
      if (other.getPrecision() != 0) {
        setPrecision(other.getPrecision());
      }
      if (other.getScale() != 0) {
        setScale(other.getScale());
      }
      if (!other.getElementType().isEmpty()) {
        elementType_ = other.elementType_;
        bitField0_ |= 0x00000080;
        onChanged();
      }
      if (fieldsBuilder_ == null) {
        if (!other.fields_.isEmpty()) {
          if (fields_.isEmpty()) {
            fields_ = other.fields_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureFieldsIsMutable();
            fields_.addAll(other.fields_);
          }
          onChanged();
        }
      } else {
        if (!other.fields_.isEmpty()) {
          if (fieldsBuilder_.isEmpty()) {
            fieldsBuilder_.dispose();
            fieldsBuilder_ = null;
            fields_ = other.fields_;
            bitField0_ = (bitField0_ & ~0x00000100);
            fieldsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getFieldsFieldBuilder() : null;
          } else {
            fieldsBuilder_.addAllMessages(other.fields_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              name_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              type_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 24: {
              nullable_ = input.readBool();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 34: {
              defaultValue_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              description_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            case 48: {
              precision_ = input.readInt32();
              bitField0_ |= 0x00000020;
              break;
            } // case 48
            case 56: {
              scale_ = input.readInt32();
              bitField0_ |= 0x00000040;
              break;
            } // case 56
            case 66: {
              elementType_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000080;
              break;
            } // case 66
            case 74: {
              datapower.noesis.v1.SchemaField m =
                  input.readMessage(
                      datapower.noesis.v1.SchemaField.parser(),
                      extensionRegistry);
              if (fieldsBuilder_ == null) {
                ensureFieldsIsMutable();
                fields_.add(m);
              } else {
                fieldsBuilder_.addMessage(m);
              }
              break;
            } // case 74
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object name_ = "";
    /**
     * <pre>
     * Field name
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Field name
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Field name
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Field name
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      name_ = getDefaultInstance().getName();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Field name
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object type_ = "";
    /**
     * <pre>
     * Data type (STRING, LONG, INTEGER, DOUBLE, DECIMAL, BOOLEAN, DATE, TIMESTAMP, ARRAY, STRUCT)
     * </pre>
     *
     * <code>string type = 2 [json_name = "type"];</code>
     * @return The type.
     */
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Data type (STRING, LONG, INTEGER, DOUBLE, DECIMAL, BOOLEAN, DATE, TIMESTAMP, ARRAY, STRUCT)
     * </pre>
     *
     * <code>string type = 2 [json_name = "type"];</code>
     * @return The bytes for type.
     */
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Data type (STRING, LONG, INTEGER, DOUBLE, DECIMAL, BOOLEAN, DATE, TIMESTAMP, ARRAY, STRUCT)
     * </pre>
     *
     * <code>string type = 2 [json_name = "type"];</code>
     * @param value The type to set.
     * @return This builder for chaining.
     */
    public Builder setType(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      type_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Data type (STRING, LONG, INTEGER, DOUBLE, DECIMAL, BOOLEAN, DATE, TIMESTAMP, ARRAY, STRUCT)
     * </pre>
     *
     * <code>string type = 2 [json_name = "type"];</code>
     * @return This builder for chaining.
     */
    public Builder clearType() {
      type_ = getDefaultInstance().getType();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Data type (STRING, LONG, INTEGER, DOUBLE, DECIMAL, BOOLEAN, DATE, TIMESTAMP, ARRAY, STRUCT)
     * </pre>
     *
     * <code>string type = 2 [json_name = "type"];</code>
     * @param value The bytes for type to set.
     * @return This builder for chaining.
     */
    public Builder setTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      type_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private boolean nullable_ ;
    /**
     * <pre>
     * Whether this field can be null
     * </pre>
     *
     * <code>bool nullable = 3 [json_name = "nullable"];</code>
     * @return The nullable.
     */
    @java.lang.Override
    public boolean getNullable() {
      return nullable_;
    }
    /**
     * <pre>
     * Whether this field can be null
     * </pre>
     *
     * <code>bool nullable = 3 [json_name = "nullable"];</code>
     * @param value The nullable to set.
     * @return This builder for chaining.
     */
    public Builder setNullable(boolean value) {

      nullable_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether this field can be null
     * </pre>
     *
     * <code>bool nullable = 3 [json_name = "nullable"];</code>
     * @return This builder for chaining.
     */
    public Builder clearNullable() {
      bitField0_ = (bitField0_ & ~0x00000004);
      nullable_ = false;
      onChanged();
      return this;
    }

    private java.lang.Object defaultValue_ = "";
    /**
     * <pre>
     * Optional: Default value
     * </pre>
     *
     * <code>string default_value = 4 [json_name = "defaultValue"];</code>
     * @return The defaultValue.
     */
    public java.lang.String getDefaultValue() {
      java.lang.Object ref = defaultValue_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        defaultValue_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Optional: Default value
     * </pre>
     *
     * <code>string default_value = 4 [json_name = "defaultValue"];</code>
     * @return The bytes for defaultValue.
     */
    public com.google.protobuf.ByteString
        getDefaultValueBytes() {
      java.lang.Object ref = defaultValue_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        defaultValue_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Optional: Default value
     * </pre>
     *
     * <code>string default_value = 4 [json_name = "defaultValue"];</code>
     * @param value The defaultValue to set.
     * @return This builder for chaining.
     */
    public Builder setDefaultValue(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      defaultValue_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: Default value
     * </pre>
     *
     * <code>string default_value = 4 [json_name = "defaultValue"];</code>
     * @return This builder for chaining.
     */
    public Builder clearDefaultValue() {
      defaultValue_ = getDefaultInstance().getDefaultValue();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: Default value
     * </pre>
     *
     * <code>string default_value = 4 [json_name = "defaultValue"];</code>
     * @param value The bytes for defaultValue to set.
     * @return This builder for chaining.
     */
    public Builder setDefaultValueBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      defaultValue_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private java.lang.Object description_ = "";
    /**
     * <pre>
     * Optional: Field documentation
     * </pre>
     *
     * <code>string description = 5 [json_name = "description"];</code>
     * @return The description.
     */
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Optional: Field documentation
     * </pre>
     *
     * <code>string description = 5 [json_name = "description"];</code>
     * @return The bytes for description.
     */
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Optional: Field documentation
     * </pre>
     *
     * <code>string description = 5 [json_name = "description"];</code>
     * @param value The description to set.
     * @return This builder for chaining.
     */
    public Builder setDescription(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      description_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: Field documentation
     * </pre>
     *
     * <code>string description = 5 [json_name = "description"];</code>
     * @return This builder for chaining.
     */
    public Builder clearDescription() {
      description_ = getDefaultInstance().getDescription();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: Field documentation
     * </pre>
     *
     * <code>string description = 5 [json_name = "description"];</code>
     * @param value The bytes for description to set.
     * @return This builder for chaining.
     */
    public Builder setDescriptionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      description_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }

    private int precision_ ;
    /**
     * <pre>
     * For DECIMAL types: precision and scale
     * </pre>
     *
     * <code>int32 precision = 6 [json_name = "precision"];</code>
     * @return The precision.
     */
    @java.lang.Override
    public int getPrecision() {
      return precision_;
    }
    /**
     * <pre>
     * For DECIMAL types: precision and scale
     * </pre>
     *
     * <code>int32 precision = 6 [json_name = "precision"];</code>
     * @param value The precision to set.
     * @return This builder for chaining.
     */
    public Builder setPrecision(int value) {

      precision_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * For DECIMAL types: precision and scale
     * </pre>
     *
     * <code>int32 precision = 6 [json_name = "precision"];</code>
     * @return This builder for chaining.
     */
    public Builder clearPrecision() {
      bitField0_ = (bitField0_ & ~0x00000020);
      precision_ = 0;
      onChanged();
      return this;
    }

    private int scale_ ;
    /**
     * <code>int32 scale = 7 [json_name = "scale"];</code>
     * @return The scale.
     */
    @java.lang.Override
    public int getScale() {
      return scale_;
    }
    /**
     * <code>int32 scale = 7 [json_name = "scale"];</code>
     * @param value The scale to set.
     * @return This builder for chaining.
     */
    public Builder setScale(int value) {

      scale_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <code>int32 scale = 7 [json_name = "scale"];</code>
     * @return This builder for chaining.
     */
    public Builder clearScale() {
      bitField0_ = (bitField0_ & ~0x00000040);
      scale_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object elementType_ = "";
    /**
     * <pre>
     * For ARRAY types: element type
     * </pre>
     *
     * <code>string element_type = 8 [json_name = "elementType"];</code>
     * @return The elementType.
     */
    public java.lang.String getElementType() {
      java.lang.Object ref = elementType_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        elementType_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * For ARRAY types: element type
     * </pre>
     *
     * <code>string element_type = 8 [json_name = "elementType"];</code>
     * @return The bytes for elementType.
     */
    public com.google.protobuf.ByteString
        getElementTypeBytes() {
      java.lang.Object ref = elementType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        elementType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * For ARRAY types: element type
     * </pre>
     *
     * <code>string element_type = 8 [json_name = "elementType"];</code>
     * @param value The elementType to set.
     * @return This builder for chaining.
     */
    public Builder setElementType(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      elementType_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * For ARRAY types: element type
     * </pre>
     *
     * <code>string element_type = 8 [json_name = "elementType"];</code>
     * @return This builder for chaining.
     */
    public Builder clearElementType() {
      elementType_ = getDefaultInstance().getElementType();
      bitField0_ = (bitField0_ & ~0x00000080);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * For ARRAY types: element type
     * </pre>
     *
     * <code>string element_type = 8 [json_name = "elementType"];</code>
     * @param value The bytes for elementType to set.
     * @return This builder for chaining.
     */
    public Builder setElementTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      elementType_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }

    private java.util.List<datapower.noesis.v1.SchemaField> fields_ =
      java.util.Collections.emptyList();
    private void ensureFieldsIsMutable() {
      if (!((bitField0_ & 0x00000100) != 0)) {
        fields_ = new java.util.ArrayList<datapower.noesis.v1.SchemaField>(fields_);
        bitField0_ |= 0x00000100;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        datapower.noesis.v1.SchemaField, datapower.noesis.v1.SchemaField.Builder, datapower.noesis.v1.SchemaFieldOrBuilder> fieldsBuilder_;

    /**
     * <pre>
     * For nested types: sub-fields
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.SchemaField fields = 9 [json_name = "fields"];</code>
     */
    public java.util.List<datapower.noesis.v1.SchemaField> getFieldsList() {
      if (fieldsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(fields_);
      } else {
        return fieldsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * For nested types: sub-fields
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.SchemaField fields = 9 [json_name = "fields"];</code>
     */
    public int getFieldsCount() {
      if (fieldsBuilder_ == null) {
        return fields_.size();
      } else {
        return fieldsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * For nested types: sub-fields
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.SchemaField fields = 9 [json_name = "fields"];</code>
     */
    public datapower.noesis.v1.SchemaField getFields(int index) {
      if (fieldsBuilder_ == null) {
        return fields_.get(index);
      } else {
        return fieldsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * For nested types: sub-fields
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.SchemaField fields = 9 [json_name = "fields"];</code>
     */
    public Builder setFields(
        int index, datapower.noesis.v1.SchemaField value) {
      if (fieldsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFieldsIsMutable();
        fields_.set(index, value);
        onChanged();
      } else {
        fieldsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * For nested types: sub-fields
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.SchemaField fields = 9 [json_name = "fields"];</code>
     */
    public Builder setFields(
        int index, datapower.noesis.v1.SchemaField.Builder builderForValue) {
      if (fieldsBuilder_ == null) {
        ensureFieldsIsMutable();
        fields_.set(index, builderForValue.build());
        onChanged();
      } else {
        fieldsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * For nested types: sub-fields
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.SchemaField fields = 9 [json_name = "fields"];</code>
     */
    public Builder addFields(datapower.noesis.v1.SchemaField value) {
      if (fieldsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFieldsIsMutable();
        fields_.add(value);
        onChanged();
      } else {
        fieldsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * For nested types: sub-fields
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.SchemaField fields = 9 [json_name = "fields"];</code>
     */
    public Builder addFields(
        int index, datapower.noesis.v1.SchemaField value) {
      if (fieldsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFieldsIsMutable();
        fields_.add(index, value);
        onChanged();
      } else {
        fieldsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * For nested types: sub-fields
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.SchemaField fields = 9 [json_name = "fields"];</code>
     */
    public Builder addFields(
        datapower.noesis.v1.SchemaField.Builder builderForValue) {
      if (fieldsBuilder_ == null) {
        ensureFieldsIsMutable();
        fields_.add(builderForValue.build());
        onChanged();
      } else {
        fieldsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * For nested types: sub-fields
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.SchemaField fields = 9 [json_name = "fields"];</code>
     */
    public Builder addFields(
        int index, datapower.noesis.v1.SchemaField.Builder builderForValue) {
      if (fieldsBuilder_ == null) {
        ensureFieldsIsMutable();
        fields_.add(index, builderForValue.build());
        onChanged();
      } else {
        fieldsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * For nested types: sub-fields
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.SchemaField fields = 9 [json_name = "fields"];</code>
     */
    public Builder addAllFields(
        java.lang.Iterable<? extends datapower.noesis.v1.SchemaField> values) {
      if (fieldsBuilder_ == null) {
        ensureFieldsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, fields_);
        onChanged();
      } else {
        fieldsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * For nested types: sub-fields
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.SchemaField fields = 9 [json_name = "fields"];</code>
     */
    public Builder clearFields() {
      if (fieldsBuilder_ == null) {
        fields_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
      } else {
        fieldsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * For nested types: sub-fields
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.SchemaField fields = 9 [json_name = "fields"];</code>
     */
    public Builder removeFields(int index) {
      if (fieldsBuilder_ == null) {
        ensureFieldsIsMutable();
        fields_.remove(index);
        onChanged();
      } else {
        fieldsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * For nested types: sub-fields
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.SchemaField fields = 9 [json_name = "fields"];</code>
     */
    public datapower.noesis.v1.SchemaField.Builder getFieldsBuilder(
        int index) {
      return getFieldsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * For nested types: sub-fields
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.SchemaField fields = 9 [json_name = "fields"];</code>
     */
    public datapower.noesis.v1.SchemaFieldOrBuilder getFieldsOrBuilder(
        int index) {
      if (fieldsBuilder_ == null) {
        return fields_.get(index);  } else {
        return fieldsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * For nested types: sub-fields
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.SchemaField fields = 9 [json_name = "fields"];</code>
     */
    public java.util.List<? extends datapower.noesis.v1.SchemaFieldOrBuilder> 
         getFieldsOrBuilderList() {
      if (fieldsBuilder_ != null) {
        return fieldsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(fields_);
      }
    }
    /**
     * <pre>
     * For nested types: sub-fields
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.SchemaField fields = 9 [json_name = "fields"];</code>
     */
    public datapower.noesis.v1.SchemaField.Builder addFieldsBuilder() {
      return getFieldsFieldBuilder().addBuilder(
          datapower.noesis.v1.SchemaField.getDefaultInstance());
    }
    /**
     * <pre>
     * For nested types: sub-fields
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.SchemaField fields = 9 [json_name = "fields"];</code>
     */
    public datapower.noesis.v1.SchemaField.Builder addFieldsBuilder(
        int index) {
      return getFieldsFieldBuilder().addBuilder(
          index, datapower.noesis.v1.SchemaField.getDefaultInstance());
    }
    /**
     * <pre>
     * For nested types: sub-fields
     * </pre>
     *
     * <code>repeated .datapower.noesis.v1.SchemaField fields = 9 [json_name = "fields"];</code>
     */
    public java.util.List<datapower.noesis.v1.SchemaField.Builder> 
         getFieldsBuilderList() {
      return getFieldsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        datapower.noesis.v1.SchemaField, datapower.noesis.v1.SchemaField.Builder, datapower.noesis.v1.SchemaFieldOrBuilder> 
        getFieldsFieldBuilder() {
      if (fieldsBuilder_ == null) {
        fieldsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            datapower.noesis.v1.SchemaField, datapower.noesis.v1.SchemaField.Builder, datapower.noesis.v1.SchemaFieldOrBuilder>(
                fields_,
                ((bitField0_ & 0x00000100) != 0),
                getParentForChildren(),
                isClean());
        fields_ = null;
      }
      return fieldsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:datapower.noesis.v1.SchemaField)
  }

  // @@protoc_insertion_point(class_scope:datapower.noesis.v1.SchemaField)
  private static final datapower.noesis.v1.SchemaField DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new datapower.noesis.v1.SchemaField();
  }

  public static datapower.noesis.v1.SchemaField getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SchemaField>
      PARSER = new com.google.protobuf.AbstractParser<SchemaField>() {
    @java.lang.Override
    public SchemaField parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<SchemaField> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SchemaField> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public datapower.noesis.v1.SchemaField getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

