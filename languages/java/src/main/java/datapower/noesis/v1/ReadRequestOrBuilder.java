// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datapower/noesis/v1/connector.proto

package datapower.noesis.v1;

public interface ReadRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:datapower.noesis.v1.ReadRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Optional, if Open/Close are used
   * </pre>
   *
   * <code>string session_id = 1 [json_name = "sessionId"];</code>
   * @return The sessionId.
   */
  java.lang.String getSessionId();
  /**
   * <pre>
   * Optional, if Open/Close are used
   * </pre>
   *
   * <code>string session_id = 1 [json_name = "sessionId"];</code>
   * @return The bytes for sessionId.
   */
  com.google.protobuf.ByteString
      getSessionIdBytes();

  /**
   * <code>.datapower.noesis.v1.FullTableScan full_table = 10 [json_name = "fullTable"];</code>
   * @return Whether the fullTable field is set.
   */
  boolean hasFullTable();
  /**
   * <code>.datapower.noesis.v1.FullTableScan full_table = 10 [json_name = "fullTable"];</code>
   * @return The fullTable.
   */
  datapower.noesis.v1.FullTableScan getFullTable();
  /**
   * <code>.datapower.noesis.v1.FullTableScan full_table = 10 [json_name = "fullTable"];</code>
   */
  datapower.noesis.v1.FullTableScanOrBuilder getFullTableOrBuilder();

  /**
   * <code>.datapower.noesis.v1.ChangeStream change_stream = 11 [json_name = "changeStream"];</code>
   * @return Whether the changeStream field is set.
   */
  boolean hasChangeStream();
  /**
   * <code>.datapower.noesis.v1.ChangeStream change_stream = 11 [json_name = "changeStream"];</code>
   * @return The changeStream.
   */
  datapower.noesis.v1.ChangeStream getChangeStream();
  /**
   * <code>.datapower.noesis.v1.ChangeStream change_stream = 11 [json_name = "changeStream"];</code>
   */
  datapower.noesis.v1.ChangeStreamOrBuilder getChangeStreamOrBuilder();

  /**
   * <code>.datapower.noesis.v1.SubgraphRead subgraph = 12 [json_name = "subgraph"];</code>
   * @return Whether the subgraph field is set.
   */
  boolean hasSubgraph();
  /**
   * <code>.datapower.noesis.v1.SubgraphRead subgraph = 12 [json_name = "subgraph"];</code>
   * @return The subgraph.
   */
  datapower.noesis.v1.SubgraphRead getSubgraph();
  /**
   * <code>.datapower.noesis.v1.SubgraphRead subgraph = 12 [json_name = "subgraph"];</code>
   */
  datapower.noesis.v1.SubgraphReadOrBuilder getSubgraphOrBuilder();

  /**
   * <pre>
   * Optional: subset of fields to return
   * </pre>
   *
   * <code>.datapower.noesis.v1.Projection projection = 2 [json_name = "projection"];</code>
   * @return Whether the projection field is set.
   */
  boolean hasProjection();
  /**
   * <pre>
   * Optional: subset of fields to return
   * </pre>
   *
   * <code>.datapower.noesis.v1.Projection projection = 2 [json_name = "projection"];</code>
   * @return The projection.
   */
  datapower.noesis.v1.Projection getProjection();
  /**
   * <pre>
   * Optional: subset of fields to return
   * </pre>
   *
   * <code>.datapower.noesis.v1.Projection projection = 2 [json_name = "projection"];</code>
   */
  datapower.noesis.v1.ProjectionOrBuilder getProjectionOrBuilder();

  /**
   * <pre>
   * Optional: QPS/parallelism limits
   * </pre>
   *
   * <code>.datapower.noesis.v1.RateLimit rate_limit = 3 [json_name = "rateLimit"];</code>
   * @return Whether the rateLimit field is set.
   */
  boolean hasRateLimit();
  /**
   * <pre>
   * Optional: QPS/parallelism limits
   * </pre>
   *
   * <code>.datapower.noesis.v1.RateLimit rate_limit = 3 [json_name = "rateLimit"];</code>
   * @return The rateLimit.
   */
  datapower.noesis.v1.RateLimit getRateLimit();
  /**
   * <pre>
   * Optional: QPS/parallelism limits
   * </pre>
   *
   * <code>.datapower.noesis.v1.RateLimit rate_limit = 3 [json_name = "rateLimit"];</code>
   */
  datapower.noesis.v1.RateLimitOrBuilder getRateLimitOrBuilder();

  datapower.noesis.v1.ReadRequest.ModeCase getModeCase();
}
