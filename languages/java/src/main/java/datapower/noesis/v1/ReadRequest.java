// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datapower/noesis/v1/connector.proto

package datapower.noesis.v1;

/**
 * Protobuf type {@code datapower.noesis.v1.ReadRequest}
 */
public final class ReadRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:datapower.noesis.v1.ReadRequest)
    ReadRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ReadRequest.newBuilder() to construct.
  private ReadRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ReadRequest() {
    sessionId_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ReadRequest();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_ReadRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_ReadRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            datapower.noesis.v1.ReadRequest.class, datapower.noesis.v1.ReadRequest.Builder.class);
  }

  private int modeCase_ = 0;
  @SuppressWarnings("serial")
  private java.lang.Object mode_;
  public enum ModeCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    FULL_TABLE(10),
    CHANGE_STREAM(11),
    SUBGRAPH(12),
    MODE_NOT_SET(0);
    private final int value;
    private ModeCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ModeCase valueOf(int value) {
      return forNumber(value);
    }

    public static ModeCase forNumber(int value) {
      switch (value) {
        case 10: return FULL_TABLE;
        case 11: return CHANGE_STREAM;
        case 12: return SUBGRAPH;
        case 0: return MODE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public ModeCase
  getModeCase() {
    return ModeCase.forNumber(
        modeCase_);
  }

  public static final int SESSION_ID_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object sessionId_ = "";
  /**
   * <pre>
   * Optional, if Open/Close are used
   * </pre>
   *
   * <code>string session_id = 1 [json_name = "sessionId"];</code>
   * @return The sessionId.
   */
  @java.lang.Override
  public java.lang.String getSessionId() {
    java.lang.Object ref = sessionId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      sessionId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Optional, if Open/Close are used
   * </pre>
   *
   * <code>string session_id = 1 [json_name = "sessionId"];</code>
   * @return The bytes for sessionId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSessionIdBytes() {
    java.lang.Object ref = sessionId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      sessionId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FULL_TABLE_FIELD_NUMBER = 10;
  /**
   * <code>.datapower.noesis.v1.FullTableScan full_table = 10 [json_name = "fullTable"];</code>
   * @return Whether the fullTable field is set.
   */
  @java.lang.Override
  public boolean hasFullTable() {
    return modeCase_ == 10;
  }
  /**
   * <code>.datapower.noesis.v1.FullTableScan full_table = 10 [json_name = "fullTable"];</code>
   * @return The fullTable.
   */
  @java.lang.Override
  public datapower.noesis.v1.FullTableScan getFullTable() {
    if (modeCase_ == 10) {
       return (datapower.noesis.v1.FullTableScan) mode_;
    }
    return datapower.noesis.v1.FullTableScan.getDefaultInstance();
  }
  /**
   * <code>.datapower.noesis.v1.FullTableScan full_table = 10 [json_name = "fullTable"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.FullTableScanOrBuilder getFullTableOrBuilder() {
    if (modeCase_ == 10) {
       return (datapower.noesis.v1.FullTableScan) mode_;
    }
    return datapower.noesis.v1.FullTableScan.getDefaultInstance();
  }

  public static final int CHANGE_STREAM_FIELD_NUMBER = 11;
  /**
   * <code>.datapower.noesis.v1.ChangeStream change_stream = 11 [json_name = "changeStream"];</code>
   * @return Whether the changeStream field is set.
   */
  @java.lang.Override
  public boolean hasChangeStream() {
    return modeCase_ == 11;
  }
  /**
   * <code>.datapower.noesis.v1.ChangeStream change_stream = 11 [json_name = "changeStream"];</code>
   * @return The changeStream.
   */
  @java.lang.Override
  public datapower.noesis.v1.ChangeStream getChangeStream() {
    if (modeCase_ == 11) {
       return (datapower.noesis.v1.ChangeStream) mode_;
    }
    return datapower.noesis.v1.ChangeStream.getDefaultInstance();
  }
  /**
   * <code>.datapower.noesis.v1.ChangeStream change_stream = 11 [json_name = "changeStream"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.ChangeStreamOrBuilder getChangeStreamOrBuilder() {
    if (modeCase_ == 11) {
       return (datapower.noesis.v1.ChangeStream) mode_;
    }
    return datapower.noesis.v1.ChangeStream.getDefaultInstance();
  }

  public static final int SUBGRAPH_FIELD_NUMBER = 12;
  /**
   * <code>.datapower.noesis.v1.SubgraphRead subgraph = 12 [json_name = "subgraph"];</code>
   * @return Whether the subgraph field is set.
   */
  @java.lang.Override
  public boolean hasSubgraph() {
    return modeCase_ == 12;
  }
  /**
   * <code>.datapower.noesis.v1.SubgraphRead subgraph = 12 [json_name = "subgraph"];</code>
   * @return The subgraph.
   */
  @java.lang.Override
  public datapower.noesis.v1.SubgraphRead getSubgraph() {
    if (modeCase_ == 12) {
       return (datapower.noesis.v1.SubgraphRead) mode_;
    }
    return datapower.noesis.v1.SubgraphRead.getDefaultInstance();
  }
  /**
   * <code>.datapower.noesis.v1.SubgraphRead subgraph = 12 [json_name = "subgraph"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.SubgraphReadOrBuilder getSubgraphOrBuilder() {
    if (modeCase_ == 12) {
       return (datapower.noesis.v1.SubgraphRead) mode_;
    }
    return datapower.noesis.v1.SubgraphRead.getDefaultInstance();
  }

  public static final int PROJECTION_FIELD_NUMBER = 2;
  private datapower.noesis.v1.Projection projection_;
  /**
   * <pre>
   * Optional: subset of fields to return
   * </pre>
   *
   * <code>.datapower.noesis.v1.Projection projection = 2 [json_name = "projection"];</code>
   * @return Whether the projection field is set.
   */
  @java.lang.Override
  public boolean hasProjection() {
    return projection_ != null;
  }
  /**
   * <pre>
   * Optional: subset of fields to return
   * </pre>
   *
   * <code>.datapower.noesis.v1.Projection projection = 2 [json_name = "projection"];</code>
   * @return The projection.
   */
  @java.lang.Override
  public datapower.noesis.v1.Projection getProjection() {
    return projection_ == null ? datapower.noesis.v1.Projection.getDefaultInstance() : projection_;
  }
  /**
   * <pre>
   * Optional: subset of fields to return
   * </pre>
   *
   * <code>.datapower.noesis.v1.Projection projection = 2 [json_name = "projection"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.ProjectionOrBuilder getProjectionOrBuilder() {
    return projection_ == null ? datapower.noesis.v1.Projection.getDefaultInstance() : projection_;
  }

  public static final int RATE_LIMIT_FIELD_NUMBER = 3;
  private datapower.noesis.v1.RateLimit rateLimit_;
  /**
   * <pre>
   * Optional: QPS/parallelism limits
   * </pre>
   *
   * <code>.datapower.noesis.v1.RateLimit rate_limit = 3 [json_name = "rateLimit"];</code>
   * @return Whether the rateLimit field is set.
   */
  @java.lang.Override
  public boolean hasRateLimit() {
    return rateLimit_ != null;
  }
  /**
   * <pre>
   * Optional: QPS/parallelism limits
   * </pre>
   *
   * <code>.datapower.noesis.v1.RateLimit rate_limit = 3 [json_name = "rateLimit"];</code>
   * @return The rateLimit.
   */
  @java.lang.Override
  public datapower.noesis.v1.RateLimit getRateLimit() {
    return rateLimit_ == null ? datapower.noesis.v1.RateLimit.getDefaultInstance() : rateLimit_;
  }
  /**
   * <pre>
   * Optional: QPS/parallelism limits
   * </pre>
   *
   * <code>.datapower.noesis.v1.RateLimit rate_limit = 3 [json_name = "rateLimit"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.RateLimitOrBuilder getRateLimitOrBuilder() {
    return rateLimit_ == null ? datapower.noesis.v1.RateLimit.getDefaultInstance() : rateLimit_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sessionId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, sessionId_);
    }
    if (projection_ != null) {
      output.writeMessage(2, getProjection());
    }
    if (rateLimit_ != null) {
      output.writeMessage(3, getRateLimit());
    }
    if (modeCase_ == 10) {
      output.writeMessage(10, (datapower.noesis.v1.FullTableScan) mode_);
    }
    if (modeCase_ == 11) {
      output.writeMessage(11, (datapower.noesis.v1.ChangeStream) mode_);
    }
    if (modeCase_ == 12) {
      output.writeMessage(12, (datapower.noesis.v1.SubgraphRead) mode_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sessionId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, sessionId_);
    }
    if (projection_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getProjection());
    }
    if (rateLimit_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getRateLimit());
    }
    if (modeCase_ == 10) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, (datapower.noesis.v1.FullTableScan) mode_);
    }
    if (modeCase_ == 11) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, (datapower.noesis.v1.ChangeStream) mode_);
    }
    if (modeCase_ == 12) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(12, (datapower.noesis.v1.SubgraphRead) mode_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof datapower.noesis.v1.ReadRequest)) {
      return super.equals(obj);
    }
    datapower.noesis.v1.ReadRequest other = (datapower.noesis.v1.ReadRequest) obj;

    if (!getSessionId()
        .equals(other.getSessionId())) return false;
    if (hasProjection() != other.hasProjection()) return false;
    if (hasProjection()) {
      if (!getProjection()
          .equals(other.getProjection())) return false;
    }
    if (hasRateLimit() != other.hasRateLimit()) return false;
    if (hasRateLimit()) {
      if (!getRateLimit()
          .equals(other.getRateLimit())) return false;
    }
    if (!getModeCase().equals(other.getModeCase())) return false;
    switch (modeCase_) {
      case 10:
        if (!getFullTable()
            .equals(other.getFullTable())) return false;
        break;
      case 11:
        if (!getChangeStream()
            .equals(other.getChangeStream())) return false;
        break;
      case 12:
        if (!getSubgraph()
            .equals(other.getSubgraph())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + SESSION_ID_FIELD_NUMBER;
    hash = (53 * hash) + getSessionId().hashCode();
    if (hasProjection()) {
      hash = (37 * hash) + PROJECTION_FIELD_NUMBER;
      hash = (53 * hash) + getProjection().hashCode();
    }
    if (hasRateLimit()) {
      hash = (37 * hash) + RATE_LIMIT_FIELD_NUMBER;
      hash = (53 * hash) + getRateLimit().hashCode();
    }
    switch (modeCase_) {
      case 10:
        hash = (37 * hash) + FULL_TABLE_FIELD_NUMBER;
        hash = (53 * hash) + getFullTable().hashCode();
        break;
      case 11:
        hash = (37 * hash) + CHANGE_STREAM_FIELD_NUMBER;
        hash = (53 * hash) + getChangeStream().hashCode();
        break;
      case 12:
        hash = (37 * hash) + SUBGRAPH_FIELD_NUMBER;
        hash = (53 * hash) + getSubgraph().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static datapower.noesis.v1.ReadRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.ReadRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.ReadRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.ReadRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.ReadRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.ReadRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.ReadRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.ReadRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static datapower.noesis.v1.ReadRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static datapower.noesis.v1.ReadRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static datapower.noesis.v1.ReadRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.ReadRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(datapower.noesis.v1.ReadRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code datapower.noesis.v1.ReadRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:datapower.noesis.v1.ReadRequest)
      datapower.noesis.v1.ReadRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_ReadRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_ReadRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              datapower.noesis.v1.ReadRequest.class, datapower.noesis.v1.ReadRequest.Builder.class);
    }

    // Construct using datapower.noesis.v1.ReadRequest.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      sessionId_ = "";
      if (fullTableBuilder_ != null) {
        fullTableBuilder_.clear();
      }
      if (changeStreamBuilder_ != null) {
        changeStreamBuilder_.clear();
      }
      if (subgraphBuilder_ != null) {
        subgraphBuilder_.clear();
      }
      projection_ = null;
      if (projectionBuilder_ != null) {
        projectionBuilder_.dispose();
        projectionBuilder_ = null;
      }
      rateLimit_ = null;
      if (rateLimitBuilder_ != null) {
        rateLimitBuilder_.dispose();
        rateLimitBuilder_ = null;
      }
      modeCase_ = 0;
      mode_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return datapower.noesis.v1.ConnectorOuterClass.internal_static_datapower_noesis_v1_ReadRequest_descriptor;
    }

    @java.lang.Override
    public datapower.noesis.v1.ReadRequest getDefaultInstanceForType() {
      return datapower.noesis.v1.ReadRequest.getDefaultInstance();
    }

    @java.lang.Override
    public datapower.noesis.v1.ReadRequest build() {
      datapower.noesis.v1.ReadRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public datapower.noesis.v1.ReadRequest buildPartial() {
      datapower.noesis.v1.ReadRequest result = new datapower.noesis.v1.ReadRequest(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(datapower.noesis.v1.ReadRequest result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.sessionId_ = sessionId_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.projection_ = projectionBuilder_ == null
            ? projection_
            : projectionBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.rateLimit_ = rateLimitBuilder_ == null
            ? rateLimit_
            : rateLimitBuilder_.build();
      }
    }

    private void buildPartialOneofs(datapower.noesis.v1.ReadRequest result) {
      result.modeCase_ = modeCase_;
      result.mode_ = this.mode_;
      if (modeCase_ == 10 &&
          fullTableBuilder_ != null) {
        result.mode_ = fullTableBuilder_.build();
      }
      if (modeCase_ == 11 &&
          changeStreamBuilder_ != null) {
        result.mode_ = changeStreamBuilder_.build();
      }
      if (modeCase_ == 12 &&
          subgraphBuilder_ != null) {
        result.mode_ = subgraphBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof datapower.noesis.v1.ReadRequest) {
        return mergeFrom((datapower.noesis.v1.ReadRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(datapower.noesis.v1.ReadRequest other) {
      if (other == datapower.noesis.v1.ReadRequest.getDefaultInstance()) return this;
      if (!other.getSessionId().isEmpty()) {
        sessionId_ = other.sessionId_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.hasProjection()) {
        mergeProjection(other.getProjection());
      }
      if (other.hasRateLimit()) {
        mergeRateLimit(other.getRateLimit());
      }
      switch (other.getModeCase()) {
        case FULL_TABLE: {
          mergeFullTable(other.getFullTable());
          break;
        }
        case CHANGE_STREAM: {
          mergeChangeStream(other.getChangeStream());
          break;
        }
        case SUBGRAPH: {
          mergeSubgraph(other.getSubgraph());
          break;
        }
        case MODE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              sessionId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getProjectionFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000010;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getRateLimitFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000020;
              break;
            } // case 26
            case 82: {
              input.readMessage(
                  getFullTableFieldBuilder().getBuilder(),
                  extensionRegistry);
              modeCase_ = 10;
              break;
            } // case 82
            case 90: {
              input.readMessage(
                  getChangeStreamFieldBuilder().getBuilder(),
                  extensionRegistry);
              modeCase_ = 11;
              break;
            } // case 90
            case 98: {
              input.readMessage(
                  getSubgraphFieldBuilder().getBuilder(),
                  extensionRegistry);
              modeCase_ = 12;
              break;
            } // case 98
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int modeCase_ = 0;
    private java.lang.Object mode_;
    public ModeCase
        getModeCase() {
      return ModeCase.forNumber(
          modeCase_);
    }

    public Builder clearMode() {
      modeCase_ = 0;
      mode_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private java.lang.Object sessionId_ = "";
    /**
     * <pre>
     * Optional, if Open/Close are used
     * </pre>
     *
     * <code>string session_id = 1 [json_name = "sessionId"];</code>
     * @return The sessionId.
     */
    public java.lang.String getSessionId() {
      java.lang.Object ref = sessionId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sessionId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Optional, if Open/Close are used
     * </pre>
     *
     * <code>string session_id = 1 [json_name = "sessionId"];</code>
     * @return The bytes for sessionId.
     */
    public com.google.protobuf.ByteString
        getSessionIdBytes() {
      java.lang.Object ref = sessionId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sessionId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Optional, if Open/Close are used
     * </pre>
     *
     * <code>string session_id = 1 [json_name = "sessionId"];</code>
     * @param value The sessionId to set.
     * @return This builder for chaining.
     */
    public Builder setSessionId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      sessionId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional, if Open/Close are used
     * </pre>
     *
     * <code>string session_id = 1 [json_name = "sessionId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearSessionId() {
      sessionId_ = getDefaultInstance().getSessionId();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional, if Open/Close are used
     * </pre>
     *
     * <code>string session_id = 1 [json_name = "sessionId"];</code>
     * @param value The bytes for sessionId to set.
     * @return This builder for chaining.
     */
    public Builder setSessionIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      sessionId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.FullTableScan, datapower.noesis.v1.FullTableScan.Builder, datapower.noesis.v1.FullTableScanOrBuilder> fullTableBuilder_;
    /**
     * <code>.datapower.noesis.v1.FullTableScan full_table = 10 [json_name = "fullTable"];</code>
     * @return Whether the fullTable field is set.
     */
    @java.lang.Override
    public boolean hasFullTable() {
      return modeCase_ == 10;
    }
    /**
     * <code>.datapower.noesis.v1.FullTableScan full_table = 10 [json_name = "fullTable"];</code>
     * @return The fullTable.
     */
    @java.lang.Override
    public datapower.noesis.v1.FullTableScan getFullTable() {
      if (fullTableBuilder_ == null) {
        if (modeCase_ == 10) {
          return (datapower.noesis.v1.FullTableScan) mode_;
        }
        return datapower.noesis.v1.FullTableScan.getDefaultInstance();
      } else {
        if (modeCase_ == 10) {
          return fullTableBuilder_.getMessage();
        }
        return datapower.noesis.v1.FullTableScan.getDefaultInstance();
      }
    }
    /**
     * <code>.datapower.noesis.v1.FullTableScan full_table = 10 [json_name = "fullTable"];</code>
     */
    public Builder setFullTable(datapower.noesis.v1.FullTableScan value) {
      if (fullTableBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        mode_ = value;
        onChanged();
      } else {
        fullTableBuilder_.setMessage(value);
      }
      modeCase_ = 10;
      return this;
    }
    /**
     * <code>.datapower.noesis.v1.FullTableScan full_table = 10 [json_name = "fullTable"];</code>
     */
    public Builder setFullTable(
        datapower.noesis.v1.FullTableScan.Builder builderForValue) {
      if (fullTableBuilder_ == null) {
        mode_ = builderForValue.build();
        onChanged();
      } else {
        fullTableBuilder_.setMessage(builderForValue.build());
      }
      modeCase_ = 10;
      return this;
    }
    /**
     * <code>.datapower.noesis.v1.FullTableScan full_table = 10 [json_name = "fullTable"];</code>
     */
    public Builder mergeFullTable(datapower.noesis.v1.FullTableScan value) {
      if (fullTableBuilder_ == null) {
        if (modeCase_ == 10 &&
            mode_ != datapower.noesis.v1.FullTableScan.getDefaultInstance()) {
          mode_ = datapower.noesis.v1.FullTableScan.newBuilder((datapower.noesis.v1.FullTableScan) mode_)
              .mergeFrom(value).buildPartial();
        } else {
          mode_ = value;
        }
        onChanged();
      } else {
        if (modeCase_ == 10) {
          fullTableBuilder_.mergeFrom(value);
        } else {
          fullTableBuilder_.setMessage(value);
        }
      }
      modeCase_ = 10;
      return this;
    }
    /**
     * <code>.datapower.noesis.v1.FullTableScan full_table = 10 [json_name = "fullTable"];</code>
     */
    public Builder clearFullTable() {
      if (fullTableBuilder_ == null) {
        if (modeCase_ == 10) {
          modeCase_ = 0;
          mode_ = null;
          onChanged();
        }
      } else {
        if (modeCase_ == 10) {
          modeCase_ = 0;
          mode_ = null;
        }
        fullTableBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.datapower.noesis.v1.FullTableScan full_table = 10 [json_name = "fullTable"];</code>
     */
    public datapower.noesis.v1.FullTableScan.Builder getFullTableBuilder() {
      return getFullTableFieldBuilder().getBuilder();
    }
    /**
     * <code>.datapower.noesis.v1.FullTableScan full_table = 10 [json_name = "fullTable"];</code>
     */
    @java.lang.Override
    public datapower.noesis.v1.FullTableScanOrBuilder getFullTableOrBuilder() {
      if ((modeCase_ == 10) && (fullTableBuilder_ != null)) {
        return fullTableBuilder_.getMessageOrBuilder();
      } else {
        if (modeCase_ == 10) {
          return (datapower.noesis.v1.FullTableScan) mode_;
        }
        return datapower.noesis.v1.FullTableScan.getDefaultInstance();
      }
    }
    /**
     * <code>.datapower.noesis.v1.FullTableScan full_table = 10 [json_name = "fullTable"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.FullTableScan, datapower.noesis.v1.FullTableScan.Builder, datapower.noesis.v1.FullTableScanOrBuilder> 
        getFullTableFieldBuilder() {
      if (fullTableBuilder_ == null) {
        if (!(modeCase_ == 10)) {
          mode_ = datapower.noesis.v1.FullTableScan.getDefaultInstance();
        }
        fullTableBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            datapower.noesis.v1.FullTableScan, datapower.noesis.v1.FullTableScan.Builder, datapower.noesis.v1.FullTableScanOrBuilder>(
                (datapower.noesis.v1.FullTableScan) mode_,
                getParentForChildren(),
                isClean());
        mode_ = null;
      }
      modeCase_ = 10;
      onChanged();
      return fullTableBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.ChangeStream, datapower.noesis.v1.ChangeStream.Builder, datapower.noesis.v1.ChangeStreamOrBuilder> changeStreamBuilder_;
    /**
     * <code>.datapower.noesis.v1.ChangeStream change_stream = 11 [json_name = "changeStream"];</code>
     * @return Whether the changeStream field is set.
     */
    @java.lang.Override
    public boolean hasChangeStream() {
      return modeCase_ == 11;
    }
    /**
     * <code>.datapower.noesis.v1.ChangeStream change_stream = 11 [json_name = "changeStream"];</code>
     * @return The changeStream.
     */
    @java.lang.Override
    public datapower.noesis.v1.ChangeStream getChangeStream() {
      if (changeStreamBuilder_ == null) {
        if (modeCase_ == 11) {
          return (datapower.noesis.v1.ChangeStream) mode_;
        }
        return datapower.noesis.v1.ChangeStream.getDefaultInstance();
      } else {
        if (modeCase_ == 11) {
          return changeStreamBuilder_.getMessage();
        }
        return datapower.noesis.v1.ChangeStream.getDefaultInstance();
      }
    }
    /**
     * <code>.datapower.noesis.v1.ChangeStream change_stream = 11 [json_name = "changeStream"];</code>
     */
    public Builder setChangeStream(datapower.noesis.v1.ChangeStream value) {
      if (changeStreamBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        mode_ = value;
        onChanged();
      } else {
        changeStreamBuilder_.setMessage(value);
      }
      modeCase_ = 11;
      return this;
    }
    /**
     * <code>.datapower.noesis.v1.ChangeStream change_stream = 11 [json_name = "changeStream"];</code>
     */
    public Builder setChangeStream(
        datapower.noesis.v1.ChangeStream.Builder builderForValue) {
      if (changeStreamBuilder_ == null) {
        mode_ = builderForValue.build();
        onChanged();
      } else {
        changeStreamBuilder_.setMessage(builderForValue.build());
      }
      modeCase_ = 11;
      return this;
    }
    /**
     * <code>.datapower.noesis.v1.ChangeStream change_stream = 11 [json_name = "changeStream"];</code>
     */
    public Builder mergeChangeStream(datapower.noesis.v1.ChangeStream value) {
      if (changeStreamBuilder_ == null) {
        if (modeCase_ == 11 &&
            mode_ != datapower.noesis.v1.ChangeStream.getDefaultInstance()) {
          mode_ = datapower.noesis.v1.ChangeStream.newBuilder((datapower.noesis.v1.ChangeStream) mode_)
              .mergeFrom(value).buildPartial();
        } else {
          mode_ = value;
        }
        onChanged();
      } else {
        if (modeCase_ == 11) {
          changeStreamBuilder_.mergeFrom(value);
        } else {
          changeStreamBuilder_.setMessage(value);
        }
      }
      modeCase_ = 11;
      return this;
    }
    /**
     * <code>.datapower.noesis.v1.ChangeStream change_stream = 11 [json_name = "changeStream"];</code>
     */
    public Builder clearChangeStream() {
      if (changeStreamBuilder_ == null) {
        if (modeCase_ == 11) {
          modeCase_ = 0;
          mode_ = null;
          onChanged();
        }
      } else {
        if (modeCase_ == 11) {
          modeCase_ = 0;
          mode_ = null;
        }
        changeStreamBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.datapower.noesis.v1.ChangeStream change_stream = 11 [json_name = "changeStream"];</code>
     */
    public datapower.noesis.v1.ChangeStream.Builder getChangeStreamBuilder() {
      return getChangeStreamFieldBuilder().getBuilder();
    }
    /**
     * <code>.datapower.noesis.v1.ChangeStream change_stream = 11 [json_name = "changeStream"];</code>
     */
    @java.lang.Override
    public datapower.noesis.v1.ChangeStreamOrBuilder getChangeStreamOrBuilder() {
      if ((modeCase_ == 11) && (changeStreamBuilder_ != null)) {
        return changeStreamBuilder_.getMessageOrBuilder();
      } else {
        if (modeCase_ == 11) {
          return (datapower.noesis.v1.ChangeStream) mode_;
        }
        return datapower.noesis.v1.ChangeStream.getDefaultInstance();
      }
    }
    /**
     * <code>.datapower.noesis.v1.ChangeStream change_stream = 11 [json_name = "changeStream"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.ChangeStream, datapower.noesis.v1.ChangeStream.Builder, datapower.noesis.v1.ChangeStreamOrBuilder> 
        getChangeStreamFieldBuilder() {
      if (changeStreamBuilder_ == null) {
        if (!(modeCase_ == 11)) {
          mode_ = datapower.noesis.v1.ChangeStream.getDefaultInstance();
        }
        changeStreamBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            datapower.noesis.v1.ChangeStream, datapower.noesis.v1.ChangeStream.Builder, datapower.noesis.v1.ChangeStreamOrBuilder>(
                (datapower.noesis.v1.ChangeStream) mode_,
                getParentForChildren(),
                isClean());
        mode_ = null;
      }
      modeCase_ = 11;
      onChanged();
      return changeStreamBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.SubgraphRead, datapower.noesis.v1.SubgraphRead.Builder, datapower.noesis.v1.SubgraphReadOrBuilder> subgraphBuilder_;
    /**
     * <code>.datapower.noesis.v1.SubgraphRead subgraph = 12 [json_name = "subgraph"];</code>
     * @return Whether the subgraph field is set.
     */
    @java.lang.Override
    public boolean hasSubgraph() {
      return modeCase_ == 12;
    }
    /**
     * <code>.datapower.noesis.v1.SubgraphRead subgraph = 12 [json_name = "subgraph"];</code>
     * @return The subgraph.
     */
    @java.lang.Override
    public datapower.noesis.v1.SubgraphRead getSubgraph() {
      if (subgraphBuilder_ == null) {
        if (modeCase_ == 12) {
          return (datapower.noesis.v1.SubgraphRead) mode_;
        }
        return datapower.noesis.v1.SubgraphRead.getDefaultInstance();
      } else {
        if (modeCase_ == 12) {
          return subgraphBuilder_.getMessage();
        }
        return datapower.noesis.v1.SubgraphRead.getDefaultInstance();
      }
    }
    /**
     * <code>.datapower.noesis.v1.SubgraphRead subgraph = 12 [json_name = "subgraph"];</code>
     */
    public Builder setSubgraph(datapower.noesis.v1.SubgraphRead value) {
      if (subgraphBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        mode_ = value;
        onChanged();
      } else {
        subgraphBuilder_.setMessage(value);
      }
      modeCase_ = 12;
      return this;
    }
    /**
     * <code>.datapower.noesis.v1.SubgraphRead subgraph = 12 [json_name = "subgraph"];</code>
     */
    public Builder setSubgraph(
        datapower.noesis.v1.SubgraphRead.Builder builderForValue) {
      if (subgraphBuilder_ == null) {
        mode_ = builderForValue.build();
        onChanged();
      } else {
        subgraphBuilder_.setMessage(builderForValue.build());
      }
      modeCase_ = 12;
      return this;
    }
    /**
     * <code>.datapower.noesis.v1.SubgraphRead subgraph = 12 [json_name = "subgraph"];</code>
     */
    public Builder mergeSubgraph(datapower.noesis.v1.SubgraphRead value) {
      if (subgraphBuilder_ == null) {
        if (modeCase_ == 12 &&
            mode_ != datapower.noesis.v1.SubgraphRead.getDefaultInstance()) {
          mode_ = datapower.noesis.v1.SubgraphRead.newBuilder((datapower.noesis.v1.SubgraphRead) mode_)
              .mergeFrom(value).buildPartial();
        } else {
          mode_ = value;
        }
        onChanged();
      } else {
        if (modeCase_ == 12) {
          subgraphBuilder_.mergeFrom(value);
        } else {
          subgraphBuilder_.setMessage(value);
        }
      }
      modeCase_ = 12;
      return this;
    }
    /**
     * <code>.datapower.noesis.v1.SubgraphRead subgraph = 12 [json_name = "subgraph"];</code>
     */
    public Builder clearSubgraph() {
      if (subgraphBuilder_ == null) {
        if (modeCase_ == 12) {
          modeCase_ = 0;
          mode_ = null;
          onChanged();
        }
      } else {
        if (modeCase_ == 12) {
          modeCase_ = 0;
          mode_ = null;
        }
        subgraphBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.datapower.noesis.v1.SubgraphRead subgraph = 12 [json_name = "subgraph"];</code>
     */
    public datapower.noesis.v1.SubgraphRead.Builder getSubgraphBuilder() {
      return getSubgraphFieldBuilder().getBuilder();
    }
    /**
     * <code>.datapower.noesis.v1.SubgraphRead subgraph = 12 [json_name = "subgraph"];</code>
     */
    @java.lang.Override
    public datapower.noesis.v1.SubgraphReadOrBuilder getSubgraphOrBuilder() {
      if ((modeCase_ == 12) && (subgraphBuilder_ != null)) {
        return subgraphBuilder_.getMessageOrBuilder();
      } else {
        if (modeCase_ == 12) {
          return (datapower.noesis.v1.SubgraphRead) mode_;
        }
        return datapower.noesis.v1.SubgraphRead.getDefaultInstance();
      }
    }
    /**
     * <code>.datapower.noesis.v1.SubgraphRead subgraph = 12 [json_name = "subgraph"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.SubgraphRead, datapower.noesis.v1.SubgraphRead.Builder, datapower.noesis.v1.SubgraphReadOrBuilder> 
        getSubgraphFieldBuilder() {
      if (subgraphBuilder_ == null) {
        if (!(modeCase_ == 12)) {
          mode_ = datapower.noesis.v1.SubgraphRead.getDefaultInstance();
        }
        subgraphBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            datapower.noesis.v1.SubgraphRead, datapower.noesis.v1.SubgraphRead.Builder, datapower.noesis.v1.SubgraphReadOrBuilder>(
                (datapower.noesis.v1.SubgraphRead) mode_,
                getParentForChildren(),
                isClean());
        mode_ = null;
      }
      modeCase_ = 12;
      onChanged();
      return subgraphBuilder_;
    }

    private datapower.noesis.v1.Projection projection_;
    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.Projection, datapower.noesis.v1.Projection.Builder, datapower.noesis.v1.ProjectionOrBuilder> projectionBuilder_;
    /**
     * <pre>
     * Optional: subset of fields to return
     * </pre>
     *
     * <code>.datapower.noesis.v1.Projection projection = 2 [json_name = "projection"];</code>
     * @return Whether the projection field is set.
     */
    public boolean hasProjection() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Optional: subset of fields to return
     * </pre>
     *
     * <code>.datapower.noesis.v1.Projection projection = 2 [json_name = "projection"];</code>
     * @return The projection.
     */
    public datapower.noesis.v1.Projection getProjection() {
      if (projectionBuilder_ == null) {
        return projection_ == null ? datapower.noesis.v1.Projection.getDefaultInstance() : projection_;
      } else {
        return projectionBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Optional: subset of fields to return
     * </pre>
     *
     * <code>.datapower.noesis.v1.Projection projection = 2 [json_name = "projection"];</code>
     */
    public Builder setProjection(datapower.noesis.v1.Projection value) {
      if (projectionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        projection_ = value;
      } else {
        projectionBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: subset of fields to return
     * </pre>
     *
     * <code>.datapower.noesis.v1.Projection projection = 2 [json_name = "projection"];</code>
     */
    public Builder setProjection(
        datapower.noesis.v1.Projection.Builder builderForValue) {
      if (projectionBuilder_ == null) {
        projection_ = builderForValue.build();
      } else {
        projectionBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: subset of fields to return
     * </pre>
     *
     * <code>.datapower.noesis.v1.Projection projection = 2 [json_name = "projection"];</code>
     */
    public Builder mergeProjection(datapower.noesis.v1.Projection value) {
      if (projectionBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0) &&
          projection_ != null &&
          projection_ != datapower.noesis.v1.Projection.getDefaultInstance()) {
          getProjectionBuilder().mergeFrom(value);
        } else {
          projection_ = value;
        }
      } else {
        projectionBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: subset of fields to return
     * </pre>
     *
     * <code>.datapower.noesis.v1.Projection projection = 2 [json_name = "projection"];</code>
     */
    public Builder clearProjection() {
      bitField0_ = (bitField0_ & ~0x00000010);
      projection_ = null;
      if (projectionBuilder_ != null) {
        projectionBuilder_.dispose();
        projectionBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: subset of fields to return
     * </pre>
     *
     * <code>.datapower.noesis.v1.Projection projection = 2 [json_name = "projection"];</code>
     */
    public datapower.noesis.v1.Projection.Builder getProjectionBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getProjectionFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Optional: subset of fields to return
     * </pre>
     *
     * <code>.datapower.noesis.v1.Projection projection = 2 [json_name = "projection"];</code>
     */
    public datapower.noesis.v1.ProjectionOrBuilder getProjectionOrBuilder() {
      if (projectionBuilder_ != null) {
        return projectionBuilder_.getMessageOrBuilder();
      } else {
        return projection_ == null ?
            datapower.noesis.v1.Projection.getDefaultInstance() : projection_;
      }
    }
    /**
     * <pre>
     * Optional: subset of fields to return
     * </pre>
     *
     * <code>.datapower.noesis.v1.Projection projection = 2 [json_name = "projection"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.Projection, datapower.noesis.v1.Projection.Builder, datapower.noesis.v1.ProjectionOrBuilder> 
        getProjectionFieldBuilder() {
      if (projectionBuilder_ == null) {
        projectionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            datapower.noesis.v1.Projection, datapower.noesis.v1.Projection.Builder, datapower.noesis.v1.ProjectionOrBuilder>(
                getProjection(),
                getParentForChildren(),
                isClean());
        projection_ = null;
      }
      return projectionBuilder_;
    }

    private datapower.noesis.v1.RateLimit rateLimit_;
    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.RateLimit, datapower.noesis.v1.RateLimit.Builder, datapower.noesis.v1.RateLimitOrBuilder> rateLimitBuilder_;
    /**
     * <pre>
     * Optional: QPS/parallelism limits
     * </pre>
     *
     * <code>.datapower.noesis.v1.RateLimit rate_limit = 3 [json_name = "rateLimit"];</code>
     * @return Whether the rateLimit field is set.
     */
    public boolean hasRateLimit() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * Optional: QPS/parallelism limits
     * </pre>
     *
     * <code>.datapower.noesis.v1.RateLimit rate_limit = 3 [json_name = "rateLimit"];</code>
     * @return The rateLimit.
     */
    public datapower.noesis.v1.RateLimit getRateLimit() {
      if (rateLimitBuilder_ == null) {
        return rateLimit_ == null ? datapower.noesis.v1.RateLimit.getDefaultInstance() : rateLimit_;
      } else {
        return rateLimitBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Optional: QPS/parallelism limits
     * </pre>
     *
     * <code>.datapower.noesis.v1.RateLimit rate_limit = 3 [json_name = "rateLimit"];</code>
     */
    public Builder setRateLimit(datapower.noesis.v1.RateLimit value) {
      if (rateLimitBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        rateLimit_ = value;
      } else {
        rateLimitBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: QPS/parallelism limits
     * </pre>
     *
     * <code>.datapower.noesis.v1.RateLimit rate_limit = 3 [json_name = "rateLimit"];</code>
     */
    public Builder setRateLimit(
        datapower.noesis.v1.RateLimit.Builder builderForValue) {
      if (rateLimitBuilder_ == null) {
        rateLimit_ = builderForValue.build();
      } else {
        rateLimitBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: QPS/parallelism limits
     * </pre>
     *
     * <code>.datapower.noesis.v1.RateLimit rate_limit = 3 [json_name = "rateLimit"];</code>
     */
    public Builder mergeRateLimit(datapower.noesis.v1.RateLimit value) {
      if (rateLimitBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0) &&
          rateLimit_ != null &&
          rateLimit_ != datapower.noesis.v1.RateLimit.getDefaultInstance()) {
          getRateLimitBuilder().mergeFrom(value);
        } else {
          rateLimit_ = value;
        }
      } else {
        rateLimitBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: QPS/parallelism limits
     * </pre>
     *
     * <code>.datapower.noesis.v1.RateLimit rate_limit = 3 [json_name = "rateLimit"];</code>
     */
    public Builder clearRateLimit() {
      bitField0_ = (bitField0_ & ~0x00000020);
      rateLimit_ = null;
      if (rateLimitBuilder_ != null) {
        rateLimitBuilder_.dispose();
        rateLimitBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: QPS/parallelism limits
     * </pre>
     *
     * <code>.datapower.noesis.v1.RateLimit rate_limit = 3 [json_name = "rateLimit"];</code>
     */
    public datapower.noesis.v1.RateLimit.Builder getRateLimitBuilder() {
      bitField0_ |= 0x00000020;
      onChanged();
      return getRateLimitFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Optional: QPS/parallelism limits
     * </pre>
     *
     * <code>.datapower.noesis.v1.RateLimit rate_limit = 3 [json_name = "rateLimit"];</code>
     */
    public datapower.noesis.v1.RateLimitOrBuilder getRateLimitOrBuilder() {
      if (rateLimitBuilder_ != null) {
        return rateLimitBuilder_.getMessageOrBuilder();
      } else {
        return rateLimit_ == null ?
            datapower.noesis.v1.RateLimit.getDefaultInstance() : rateLimit_;
      }
    }
    /**
     * <pre>
     * Optional: QPS/parallelism limits
     * </pre>
     *
     * <code>.datapower.noesis.v1.RateLimit rate_limit = 3 [json_name = "rateLimit"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.RateLimit, datapower.noesis.v1.RateLimit.Builder, datapower.noesis.v1.RateLimitOrBuilder> 
        getRateLimitFieldBuilder() {
      if (rateLimitBuilder_ == null) {
        rateLimitBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            datapower.noesis.v1.RateLimit, datapower.noesis.v1.RateLimit.Builder, datapower.noesis.v1.RateLimitOrBuilder>(
                getRateLimit(),
                getParentForChildren(),
                isClean());
        rateLimit_ = null;
      }
      return rateLimitBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:datapower.noesis.v1.ReadRequest)
  }

  // @@protoc_insertion_point(class_scope:datapower.noesis.v1.ReadRequest)
  private static final datapower.noesis.v1.ReadRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new datapower.noesis.v1.ReadRequest();
  }

  public static datapower.noesis.v1.ReadRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ReadRequest>
      PARSER = new com.google.protobuf.AbstractParser<ReadRequest>() {
    @java.lang.Override
    public ReadRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ReadRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ReadRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public datapower.noesis.v1.ReadRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

