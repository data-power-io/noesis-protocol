// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datapower/noesis/v1/patch_events.proto

package datapower.noesis.v1;

/**
 * <pre>
 * TransformEvent is the top-level message written to transform-events Kafka topics
 * All Flink jobs (streaming and batch) produce events in this format
 * </pre>
 *
 * Protobuf type {@code datapower.noesis.v1.TransformEvent}
 */
public final class TransformEvent extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:datapower.noesis.v1.TransformEvent)
    TransformEventOrBuilder {
private static final long serialVersionUID = 0L;
  // Use TransformEvent.newBuilder() to construct.
  private TransformEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TransformEvent() {
    eventType_ = 0;
    payload_ = "";
    schemaVersion_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new TransformEvent();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return datapower.noesis.v1.PatchEvents.internal_static_datapower_noesis_v1_TransformEvent_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return datapower.noesis.v1.PatchEvents.internal_static_datapower_noesis_v1_TransformEvent_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            datapower.noesis.v1.TransformEvent.class, datapower.noesis.v1.TransformEvent.Builder.class);
  }

  public static final int EVENT_TYPE_FIELD_NUMBER = 1;
  private int eventType_ = 0;
  /**
   * <pre>
   * Event type discriminator
   * </pre>
   *
   * <code>.datapower.noesis.v1.EventType event_type = 1 [json_name = "eventType"];</code>
   * @return The enum numeric value on the wire for eventType.
   */
  @java.lang.Override public int getEventTypeValue() {
    return eventType_;
  }
  /**
   * <pre>
   * Event type discriminator
   * </pre>
   *
   * <code>.datapower.noesis.v1.EventType event_type = 1 [json_name = "eventType"];</code>
   * @return The eventType.
   */
  @java.lang.Override public datapower.noesis.v1.EventType getEventType() {
    datapower.noesis.v1.EventType result = datapower.noesis.v1.EventType.forNumber(eventType_);
    return result == null ? datapower.noesis.v1.EventType.UNRECOGNIZED : result;
  }

  public static final int PAYLOAD_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object payload_ = "";
  /**
   * <pre>
   * JSON-encoded payload (either AttributePatch or FullState)
   * </pre>
   *
   * <code>string payload = 2 [json_name = "payload"];</code>
   * @return The payload.
   */
  @java.lang.Override
  public java.lang.String getPayload() {
    java.lang.Object ref = payload_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      payload_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * JSON-encoded payload (either AttributePatch or FullState)
   * </pre>
   *
   * <code>string payload = 2 [json_name = "payload"];</code>
   * @return The bytes for payload.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getPayloadBytes() {
    java.lang.Object ref = payload_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      payload_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int METADATA_FIELD_NUMBER = 3;
  private datapower.noesis.v1.EventMetadata metadata_;
  /**
   * <pre>
   * Event metadata
   * </pre>
   *
   * <code>.datapower.noesis.v1.EventMetadata metadata = 3 [json_name = "metadata"];</code>
   * @return Whether the metadata field is set.
   */
  @java.lang.Override
  public boolean hasMetadata() {
    return metadata_ != null;
  }
  /**
   * <pre>
   * Event metadata
   * </pre>
   *
   * <code>.datapower.noesis.v1.EventMetadata metadata = 3 [json_name = "metadata"];</code>
   * @return The metadata.
   */
  @java.lang.Override
  public datapower.noesis.v1.EventMetadata getMetadata() {
    return metadata_ == null ? datapower.noesis.v1.EventMetadata.getDefaultInstance() : metadata_;
  }
  /**
   * <pre>
   * Event metadata
   * </pre>
   *
   * <code>.datapower.noesis.v1.EventMetadata metadata = 3 [json_name = "metadata"];</code>
   */
  @java.lang.Override
  public datapower.noesis.v1.EventMetadataOrBuilder getMetadataOrBuilder() {
    return metadata_ == null ? datapower.noesis.v1.EventMetadata.getDefaultInstance() : metadata_;
  }

  public static final int SCHEMA_VERSION_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private volatile java.lang.Object schemaVersion_ = "";
  /**
   * <pre>
   * Optional: Schema version for payload
   * </pre>
   *
   * <code>string schema_version = 4 [json_name = "schemaVersion"];</code>
   * @return The schemaVersion.
   */
  @java.lang.Override
  public java.lang.String getSchemaVersion() {
    java.lang.Object ref = schemaVersion_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      schemaVersion_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Optional: Schema version for payload
   * </pre>
   *
   * <code>string schema_version = 4 [json_name = "schemaVersion"];</code>
   * @return The bytes for schemaVersion.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSchemaVersionBytes() {
    java.lang.Object ref = schemaVersion_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      schemaVersion_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (eventType_ != datapower.noesis.v1.EventType.EVENT_TYPE_UNSPECIFIED.getNumber()) {
      output.writeEnum(1, eventType_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(payload_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, payload_);
    }
    if (metadata_ != null) {
      output.writeMessage(3, getMetadata());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(schemaVersion_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, schemaVersion_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (eventType_ != datapower.noesis.v1.EventType.EVENT_TYPE_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, eventType_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(payload_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, payload_);
    }
    if (metadata_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getMetadata());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(schemaVersion_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, schemaVersion_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof datapower.noesis.v1.TransformEvent)) {
      return super.equals(obj);
    }
    datapower.noesis.v1.TransformEvent other = (datapower.noesis.v1.TransformEvent) obj;

    if (eventType_ != other.eventType_) return false;
    if (!getPayload()
        .equals(other.getPayload())) return false;
    if (hasMetadata() != other.hasMetadata()) return false;
    if (hasMetadata()) {
      if (!getMetadata()
          .equals(other.getMetadata())) return false;
    }
    if (!getSchemaVersion()
        .equals(other.getSchemaVersion())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + EVENT_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + eventType_;
    hash = (37 * hash) + PAYLOAD_FIELD_NUMBER;
    hash = (53 * hash) + getPayload().hashCode();
    if (hasMetadata()) {
      hash = (37 * hash) + METADATA_FIELD_NUMBER;
      hash = (53 * hash) + getMetadata().hashCode();
    }
    hash = (37 * hash) + SCHEMA_VERSION_FIELD_NUMBER;
    hash = (53 * hash) + getSchemaVersion().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static datapower.noesis.v1.TransformEvent parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.TransformEvent parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.TransformEvent parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.TransformEvent parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.TransformEvent parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.TransformEvent parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.TransformEvent parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.TransformEvent parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static datapower.noesis.v1.TransformEvent parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static datapower.noesis.v1.TransformEvent parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static datapower.noesis.v1.TransformEvent parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.TransformEvent parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(datapower.noesis.v1.TransformEvent prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * TransformEvent is the top-level message written to transform-events Kafka topics
   * All Flink jobs (streaming and batch) produce events in this format
   * </pre>
   *
   * Protobuf type {@code datapower.noesis.v1.TransformEvent}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:datapower.noesis.v1.TransformEvent)
      datapower.noesis.v1.TransformEventOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return datapower.noesis.v1.PatchEvents.internal_static_datapower_noesis_v1_TransformEvent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return datapower.noesis.v1.PatchEvents.internal_static_datapower_noesis_v1_TransformEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              datapower.noesis.v1.TransformEvent.class, datapower.noesis.v1.TransformEvent.Builder.class);
    }

    // Construct using datapower.noesis.v1.TransformEvent.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      eventType_ = 0;
      payload_ = "";
      metadata_ = null;
      if (metadataBuilder_ != null) {
        metadataBuilder_.dispose();
        metadataBuilder_ = null;
      }
      schemaVersion_ = "";
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return datapower.noesis.v1.PatchEvents.internal_static_datapower_noesis_v1_TransformEvent_descriptor;
    }

    @java.lang.Override
    public datapower.noesis.v1.TransformEvent getDefaultInstanceForType() {
      return datapower.noesis.v1.TransformEvent.getDefaultInstance();
    }

    @java.lang.Override
    public datapower.noesis.v1.TransformEvent build() {
      datapower.noesis.v1.TransformEvent result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public datapower.noesis.v1.TransformEvent buildPartial() {
      datapower.noesis.v1.TransformEvent result = new datapower.noesis.v1.TransformEvent(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(datapower.noesis.v1.TransformEvent result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.eventType_ = eventType_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.payload_ = payload_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.metadata_ = metadataBuilder_ == null
            ? metadata_
            : metadataBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.schemaVersion_ = schemaVersion_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof datapower.noesis.v1.TransformEvent) {
        return mergeFrom((datapower.noesis.v1.TransformEvent)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(datapower.noesis.v1.TransformEvent other) {
      if (other == datapower.noesis.v1.TransformEvent.getDefaultInstance()) return this;
      if (other.eventType_ != 0) {
        setEventTypeValue(other.getEventTypeValue());
      }
      if (!other.getPayload().isEmpty()) {
        payload_ = other.payload_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (other.hasMetadata()) {
        mergeMetadata(other.getMetadata());
      }
      if (!other.getSchemaVersion().isEmpty()) {
        schemaVersion_ = other.schemaVersion_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              eventType_ = input.readEnum();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 18: {
              payload_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getMetadataFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              schemaVersion_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int eventType_ = 0;
    /**
     * <pre>
     * Event type discriminator
     * </pre>
     *
     * <code>.datapower.noesis.v1.EventType event_type = 1 [json_name = "eventType"];</code>
     * @return The enum numeric value on the wire for eventType.
     */
    @java.lang.Override public int getEventTypeValue() {
      return eventType_;
    }
    /**
     * <pre>
     * Event type discriminator
     * </pre>
     *
     * <code>.datapower.noesis.v1.EventType event_type = 1 [json_name = "eventType"];</code>
     * @param value The enum numeric value on the wire for eventType to set.
     * @return This builder for chaining.
     */
    public Builder setEventTypeValue(int value) {
      eventType_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Event type discriminator
     * </pre>
     *
     * <code>.datapower.noesis.v1.EventType event_type = 1 [json_name = "eventType"];</code>
     * @return The eventType.
     */
    @java.lang.Override
    public datapower.noesis.v1.EventType getEventType() {
      datapower.noesis.v1.EventType result = datapower.noesis.v1.EventType.forNumber(eventType_);
      return result == null ? datapower.noesis.v1.EventType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Event type discriminator
     * </pre>
     *
     * <code>.datapower.noesis.v1.EventType event_type = 1 [json_name = "eventType"];</code>
     * @param value The eventType to set.
     * @return This builder for chaining.
     */
    public Builder setEventType(datapower.noesis.v1.EventType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      eventType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Event type discriminator
     * </pre>
     *
     * <code>.datapower.noesis.v1.EventType event_type = 1 [json_name = "eventType"];</code>
     * @return This builder for chaining.
     */
    public Builder clearEventType() {
      bitField0_ = (bitField0_ & ~0x00000001);
      eventType_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object payload_ = "";
    /**
     * <pre>
     * JSON-encoded payload (either AttributePatch or FullState)
     * </pre>
     *
     * <code>string payload = 2 [json_name = "payload"];</code>
     * @return The payload.
     */
    public java.lang.String getPayload() {
      java.lang.Object ref = payload_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        payload_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * JSON-encoded payload (either AttributePatch or FullState)
     * </pre>
     *
     * <code>string payload = 2 [json_name = "payload"];</code>
     * @return The bytes for payload.
     */
    public com.google.protobuf.ByteString
        getPayloadBytes() {
      java.lang.Object ref = payload_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        payload_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * JSON-encoded payload (either AttributePatch or FullState)
     * </pre>
     *
     * <code>string payload = 2 [json_name = "payload"];</code>
     * @param value The payload to set.
     * @return This builder for chaining.
     */
    public Builder setPayload(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      payload_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * JSON-encoded payload (either AttributePatch or FullState)
     * </pre>
     *
     * <code>string payload = 2 [json_name = "payload"];</code>
     * @return This builder for chaining.
     */
    public Builder clearPayload() {
      payload_ = getDefaultInstance().getPayload();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * JSON-encoded payload (either AttributePatch or FullState)
     * </pre>
     *
     * <code>string payload = 2 [json_name = "payload"];</code>
     * @param value The bytes for payload to set.
     * @return This builder for chaining.
     */
    public Builder setPayloadBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      payload_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private datapower.noesis.v1.EventMetadata metadata_;
    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.EventMetadata, datapower.noesis.v1.EventMetadata.Builder, datapower.noesis.v1.EventMetadataOrBuilder> metadataBuilder_;
    /**
     * <pre>
     * Event metadata
     * </pre>
     *
     * <code>.datapower.noesis.v1.EventMetadata metadata = 3 [json_name = "metadata"];</code>
     * @return Whether the metadata field is set.
     */
    public boolean hasMetadata() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Event metadata
     * </pre>
     *
     * <code>.datapower.noesis.v1.EventMetadata metadata = 3 [json_name = "metadata"];</code>
     * @return The metadata.
     */
    public datapower.noesis.v1.EventMetadata getMetadata() {
      if (metadataBuilder_ == null) {
        return metadata_ == null ? datapower.noesis.v1.EventMetadata.getDefaultInstance() : metadata_;
      } else {
        return metadataBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Event metadata
     * </pre>
     *
     * <code>.datapower.noesis.v1.EventMetadata metadata = 3 [json_name = "metadata"];</code>
     */
    public Builder setMetadata(datapower.noesis.v1.EventMetadata value) {
      if (metadataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        metadata_ = value;
      } else {
        metadataBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Event metadata
     * </pre>
     *
     * <code>.datapower.noesis.v1.EventMetadata metadata = 3 [json_name = "metadata"];</code>
     */
    public Builder setMetadata(
        datapower.noesis.v1.EventMetadata.Builder builderForValue) {
      if (metadataBuilder_ == null) {
        metadata_ = builderForValue.build();
      } else {
        metadataBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Event metadata
     * </pre>
     *
     * <code>.datapower.noesis.v1.EventMetadata metadata = 3 [json_name = "metadata"];</code>
     */
    public Builder mergeMetadata(datapower.noesis.v1.EventMetadata value) {
      if (metadataBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          metadata_ != null &&
          metadata_ != datapower.noesis.v1.EventMetadata.getDefaultInstance()) {
          getMetadataBuilder().mergeFrom(value);
        } else {
          metadata_ = value;
        }
      } else {
        metadataBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Event metadata
     * </pre>
     *
     * <code>.datapower.noesis.v1.EventMetadata metadata = 3 [json_name = "metadata"];</code>
     */
    public Builder clearMetadata() {
      bitField0_ = (bitField0_ & ~0x00000004);
      metadata_ = null;
      if (metadataBuilder_ != null) {
        metadataBuilder_.dispose();
        metadataBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Event metadata
     * </pre>
     *
     * <code>.datapower.noesis.v1.EventMetadata metadata = 3 [json_name = "metadata"];</code>
     */
    public datapower.noesis.v1.EventMetadata.Builder getMetadataBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getMetadataFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Event metadata
     * </pre>
     *
     * <code>.datapower.noesis.v1.EventMetadata metadata = 3 [json_name = "metadata"];</code>
     */
    public datapower.noesis.v1.EventMetadataOrBuilder getMetadataOrBuilder() {
      if (metadataBuilder_ != null) {
        return metadataBuilder_.getMessageOrBuilder();
      } else {
        return metadata_ == null ?
            datapower.noesis.v1.EventMetadata.getDefaultInstance() : metadata_;
      }
    }
    /**
     * <pre>
     * Event metadata
     * </pre>
     *
     * <code>.datapower.noesis.v1.EventMetadata metadata = 3 [json_name = "metadata"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        datapower.noesis.v1.EventMetadata, datapower.noesis.v1.EventMetadata.Builder, datapower.noesis.v1.EventMetadataOrBuilder> 
        getMetadataFieldBuilder() {
      if (metadataBuilder_ == null) {
        metadataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            datapower.noesis.v1.EventMetadata, datapower.noesis.v1.EventMetadata.Builder, datapower.noesis.v1.EventMetadataOrBuilder>(
                getMetadata(),
                getParentForChildren(),
                isClean());
        metadata_ = null;
      }
      return metadataBuilder_;
    }

    private java.lang.Object schemaVersion_ = "";
    /**
     * <pre>
     * Optional: Schema version for payload
     * </pre>
     *
     * <code>string schema_version = 4 [json_name = "schemaVersion"];</code>
     * @return The schemaVersion.
     */
    public java.lang.String getSchemaVersion() {
      java.lang.Object ref = schemaVersion_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        schemaVersion_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Optional: Schema version for payload
     * </pre>
     *
     * <code>string schema_version = 4 [json_name = "schemaVersion"];</code>
     * @return The bytes for schemaVersion.
     */
    public com.google.protobuf.ByteString
        getSchemaVersionBytes() {
      java.lang.Object ref = schemaVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        schemaVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Optional: Schema version for payload
     * </pre>
     *
     * <code>string schema_version = 4 [json_name = "schemaVersion"];</code>
     * @param value The schemaVersion to set.
     * @return This builder for chaining.
     */
    public Builder setSchemaVersion(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      schemaVersion_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: Schema version for payload
     * </pre>
     *
     * <code>string schema_version = 4 [json_name = "schemaVersion"];</code>
     * @return This builder for chaining.
     */
    public Builder clearSchemaVersion() {
      schemaVersion_ = getDefaultInstance().getSchemaVersion();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional: Schema version for payload
     * </pre>
     *
     * <code>string schema_version = 4 [json_name = "schemaVersion"];</code>
     * @param value The bytes for schemaVersion to set.
     * @return This builder for chaining.
     */
    public Builder setSchemaVersionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      schemaVersion_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:datapower.noesis.v1.TransformEvent)
  }

  // @@protoc_insertion_point(class_scope:datapower.noesis.v1.TransformEvent)
  private static final datapower.noesis.v1.TransformEvent DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new datapower.noesis.v1.TransformEvent();
  }

  public static datapower.noesis.v1.TransformEvent getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TransformEvent>
      PARSER = new com.google.protobuf.AbstractParser<TransformEvent>() {
    @java.lang.Override
    public TransformEvent parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<TransformEvent> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TransformEvent> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public datapower.noesis.v1.TransformEvent getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

