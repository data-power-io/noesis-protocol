// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datapower/noesis/v1/enrichment_service.proto

package datapower.noesis.v1;

public interface FlinkHistoricalRecordOrBuilder extends
    // @@protoc_insertion_point(interface_extends:datapower.noesis.v1.FlinkHistoricalRecord)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.google.protobuf.Struct data = 1 [json_name = "data"];</code>
   * @return Whether the data field is set.
   */
  boolean hasData();
  /**
   * <code>.google.protobuf.Struct data = 1 [json_name = "data"];</code>
   * @return The data.
   */
  com.google.protobuf.Struct getData();
  /**
   * <code>.google.protobuf.Struct data = 1 [json_name = "data"];</code>
   */
  com.google.protobuf.StructOrBuilder getDataOrBuilder();

  /**
   * <code>string valid_from = 2 [json_name = "validFrom"];</code>
   * @return The validFrom.
   */
  java.lang.String getValidFrom();
  /**
   * <code>string valid_from = 2 [json_name = "validFrom"];</code>
   * @return The bytes for validFrom.
   */
  com.google.protobuf.ByteString
      getValidFromBytes();

  /**
   * <code>string valid_to = 3 [json_name = "validTo"];</code>
   * @return The validTo.
   */
  java.lang.String getValidTo();
  /**
   * <code>string valid_to = 3 [json_name = "validTo"];</code>
   * @return The bytes for validTo.
   */
  com.google.protobuf.ByteString
      getValidToBytes();

  /**
   * <code>string change_type = 4 [json_name = "changeType"];</code>
   * @return The changeType.
   */
  java.lang.String getChangeType();
  /**
   * <code>string change_type = 4 [json_name = "changeType"];</code>
   * @return The bytes for changeType.
   */
  com.google.protobuf.ByteString
      getChangeTypeBytes();

  /**
   * <pre>
   * Flink event time
   * </pre>
   *
   * <code>int64 event_time = 5 [json_name = "eventTime"];</code>
   * @return The eventTime.
   */
  long getEventTime();

  /**
   * <pre>
   * Flink processing time
   * </pre>
   *
   * <code>int64 processing_time = 6 [json_name = "processingTime"];</code>
   * @return The processingTime.
   */
  long getProcessingTime();

  /**
   * <pre>
   * Flink watermark information
   * </pre>
   *
   * <code>string watermark = 7 [json_name = "watermark"];</code>
   * @return The watermark.
   */
  java.lang.String getWatermark();
  /**
   * <pre>
   * Flink watermark information
   * </pre>
   *
   * <code>string watermark = 7 [json_name = "watermark"];</code>
   * @return The bytes for watermark.
   */
  com.google.protobuf.ByteString
      getWatermarkBytes();
}
