// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datapower/noesis/v1/execution.proto

package datapower.noesis.v1;

public interface ExecutionPlanOrBuilder extends
    // @@protoc_insertion_point(interface_extends:datapower.noesis.v1.ExecutionPlan)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Pipeline name
   * </pre>
   *
   * <code>string pipeline_name = 1 [json_name = "pipelineName"];</code>
   * @return The pipelineName.
   */
  java.lang.String getPipelineName();
  /**
   * <pre>
   * Pipeline name
   * </pre>
   *
   * <code>string pipeline_name = 1 [json_name = "pipelineName"];</code>
   * @return The bytes for pipelineName.
   */
  com.google.protobuf.ByteString
      getPipelineNameBytes();

  /**
   * <pre>
   * Determined execution strategy
   * </pre>
   *
   * <code>.datapower.noesis.v1.ExecutionStrategy strategy = 2 [json_name = "strategy"];</code>
   * @return The enum numeric value on the wire for strategy.
   */
  int getStrategyValue();
  /**
   * <pre>
   * Determined execution strategy
   * </pre>
   *
   * <code>.datapower.noesis.v1.ExecutionStrategy strategy = 2 [json_name = "strategy"];</code>
   * @return The strategy.
   */
  datapower.noesis.v1.ExecutionStrategy getStrategy();

  /**
   * <pre>
   * Streaming job specifications (empty for BATCH_ONLY)
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.StreamingJobSpec streaming_jobs = 3 [json_name = "streamingJobs"];</code>
   */
  java.util.List<datapower.noesis.v1.StreamingJobSpec> 
      getStreamingJobsList();
  /**
   * <pre>
   * Streaming job specifications (empty for BATCH_ONLY)
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.StreamingJobSpec streaming_jobs = 3 [json_name = "streamingJobs"];</code>
   */
  datapower.noesis.v1.StreamingJobSpec getStreamingJobs(int index);
  /**
   * <pre>
   * Streaming job specifications (empty for BATCH_ONLY)
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.StreamingJobSpec streaming_jobs = 3 [json_name = "streamingJobs"];</code>
   */
  int getStreamingJobsCount();
  /**
   * <pre>
   * Streaming job specifications (empty for BATCH_ONLY)
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.StreamingJobSpec streaming_jobs = 3 [json_name = "streamingJobs"];</code>
   */
  java.util.List<? extends datapower.noesis.v1.StreamingJobSpecOrBuilder> 
      getStreamingJobsOrBuilderList();
  /**
   * <pre>
   * Streaming job specifications (empty for BATCH_ONLY)
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.StreamingJobSpec streaming_jobs = 3 [json_name = "streamingJobs"];</code>
   */
  datapower.noesis.v1.StreamingJobSpecOrBuilder getStreamingJobsOrBuilder(
      int index);

  /**
   * <pre>
   * Batch source specifications
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.BatchSourceSpec batch_sources = 4 [json_name = "batchSources"];</code>
   */
  java.util.List<datapower.noesis.v1.BatchSourceSpec> 
      getBatchSourcesList();
  /**
   * <pre>
   * Batch source specifications
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.BatchSourceSpec batch_sources = 4 [json_name = "batchSources"];</code>
   */
  datapower.noesis.v1.BatchSourceSpec getBatchSources(int index);
  /**
   * <pre>
   * Batch source specifications
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.BatchSourceSpec batch_sources = 4 [json_name = "batchSources"];</code>
   */
  int getBatchSourcesCount();
  /**
   * <pre>
   * Batch source specifications
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.BatchSourceSpec batch_sources = 4 [json_name = "batchSources"];</code>
   */
  java.util.List<? extends datapower.noesis.v1.BatchSourceSpecOrBuilder> 
      getBatchSourcesOrBuilderList();
  /**
   * <pre>
   * Batch source specifications
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.BatchSourceSpec batch_sources = 4 [json_name = "batchSources"];</code>
   */
  datapower.noesis.v1.BatchSourceSpecOrBuilder getBatchSourcesOrBuilder(
      int index);

  /**
   * <pre>
   * Batch reconciliation job specification (may be null for STREAMING_ONLY)
   * </pre>
   *
   * <code>.datapower.noesis.v1.BatchReconciliationJobSpec batch_reconciliation = 5 [json_name = "batchReconciliation"];</code>
   * @return Whether the batchReconciliation field is set.
   */
  boolean hasBatchReconciliation();
  /**
   * <pre>
   * Batch reconciliation job specification (may be null for STREAMING_ONLY)
   * </pre>
   *
   * <code>.datapower.noesis.v1.BatchReconciliationJobSpec batch_reconciliation = 5 [json_name = "batchReconciliation"];</code>
   * @return The batchReconciliation.
   */
  datapower.noesis.v1.BatchReconciliationJobSpec getBatchReconciliation();
  /**
   * <pre>
   * Batch reconciliation job specification (may be null for STREAMING_ONLY)
   * </pre>
   *
   * <code>.datapower.noesis.v1.BatchReconciliationJobSpec batch_reconciliation = 5 [json_name = "batchReconciliation"];</code>
   */
  datapower.noesis.v1.BatchReconciliationJobSpecOrBuilder getBatchReconciliationOrBuilder();

  /**
   * <pre>
   * Planning metadata
   * </pre>
   *
   * <code>.datapower.noesis.v1.PlanningMetadata metadata = 6 [json_name = "metadata"];</code>
   * @return Whether the metadata field is set.
   */
  boolean hasMetadata();
  /**
   * <pre>
   * Planning metadata
   * </pre>
   *
   * <code>.datapower.noesis.v1.PlanningMetadata metadata = 6 [json_name = "metadata"];</code>
   * @return The metadata.
   */
  datapower.noesis.v1.PlanningMetadata getMetadata();
  /**
   * <pre>
   * Planning metadata
   * </pre>
   *
   * <code>.datapower.noesis.v1.PlanningMetadata metadata = 6 [json_name = "metadata"];</code>
   */
  datapower.noesis.v1.PlanningMetadataOrBuilder getMetadataOrBuilder();

  /**
   * <pre>
   * The original pipeline definition (for reference)
   * </pre>
   *
   * <code>.datapower.noesis.v1.PipelineDefinition pipeline_definition = 7 [json_name = "pipelineDefinition"];</code>
   * @return Whether the pipelineDefinition field is set.
   */
  boolean hasPipelineDefinition();
  /**
   * <pre>
   * The original pipeline definition (for reference)
   * </pre>
   *
   * <code>.datapower.noesis.v1.PipelineDefinition pipeline_definition = 7 [json_name = "pipelineDefinition"];</code>
   * @return The pipelineDefinition.
   */
  datapower.noesis.v1.PipelineDefinition getPipelineDefinition();
  /**
   * <pre>
   * The original pipeline definition (for reference)
   * </pre>
   *
   * <code>.datapower.noesis.v1.PipelineDefinition pipeline_definition = 7 [json_name = "pipelineDefinition"];</code>
   */
  datapower.noesis.v1.PipelineDefinitionOrBuilder getPipelineDefinitionOrBuilder();
}
