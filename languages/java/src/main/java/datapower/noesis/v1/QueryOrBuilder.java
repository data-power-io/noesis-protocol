// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datapower/noesis/v1/pipeline.proto

package datapower.noesis.v1;

public interface QueryOrBuilder extends
    // @@protoc_insertion_point(interface_extends:datapower.noesis.v1.Query)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Reference to the sink alias where results are written
   * </pre>
   *
   * <code>string target = 1 [json_name = "target"];</code>
   * @return The target.
   */
  java.lang.String getTarget();
  /**
   * <pre>
   * Reference to the sink alias where results are written
   * </pre>
   *
   * <code>string target = 1 [json_name = "target"];</code>
   * @return The bytes for target.
   */
  com.google.protobuf.ByteString
      getTargetBytes();

  /**
   * <pre>
   * SQL query that transforms source data into target schema
   * This SQL is analyzed to determine execution strategy
   * </pre>
   *
   * <code>string sql = 2 [json_name = "sql"];</code>
   * @return The sql.
   */
  java.lang.String getSql();
  /**
   * <pre>
   * SQL query that transforms source data into target schema
   * This SQL is analyzed to determine execution strategy
   * </pre>
   *
   * <code>string sql = 2 [json_name = "sql"];</code>
   * @return The bytes for sql.
   */
  com.google.protobuf.ByteString
      getSqlBytes();

  /**
   * <pre>
   * Optional: Query type hint (join, aggregation, window, etc.)
   * </pre>
   *
   * <code>string query_type = 3 [json_name = "queryType"];</code>
   * @return The queryType.
   */
  java.lang.String getQueryType();
  /**
   * <pre>
   * Optional: Query type hint (join, aggregation, window, etc.)
   * </pre>
   *
   * <code>string query_type = 3 [json_name = "queryType"];</code>
   * @return The bytes for queryType.
   */
  com.google.protobuf.ByteString
      getQueryTypeBytes();

  /**
   * <pre>
   * Optional: Optimization hints
   * </pre>
   *
   * <code>map&lt;string, string&gt; hints = 4 [json_name = "hints"];</code>
   */
  int getHintsCount();
  /**
   * <pre>
   * Optional: Optimization hints
   * </pre>
   *
   * <code>map&lt;string, string&gt; hints = 4 [json_name = "hints"];</code>
   */
  boolean containsHints(
      java.lang.String key);
  /**
   * Use {@link #getHintsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getHints();
  /**
   * <pre>
   * Optional: Optimization hints
   * </pre>
   *
   * <code>map&lt;string, string&gt; hints = 4 [json_name = "hints"];</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getHintsMap();
  /**
   * <pre>
   * Optional: Optimization hints
   * </pre>
   *
   * <code>map&lt;string, string&gt; hints = 4 [json_name = "hints"];</code>
   */
  /* nullable */
java.lang.String getHintsOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * Optional: Optimization hints
   * </pre>
   *
   * <code>map&lt;string, string&gt; hints = 4 [json_name = "hints"];</code>
   */
  java.lang.String getHintsOrThrow(
      java.lang.String key);
}
