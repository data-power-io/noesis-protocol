// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datapower/noesis/v1/sidecar.proto

package datapower.noesis.v1;

/**
 * <pre>
 * Iceberg format configuration
 * </pre>
 *
 * Protobuf type {@code datapower.noesis.v1.IcebergConfig}
 */
public final class IcebergConfig extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:datapower.noesis.v1.IcebergConfig)
    IcebergConfigOrBuilder {
private static final long serialVersionUID = 0L;
  // Use IcebergConfig.newBuilder() to construct.
  private IcebergConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private IcebergConfig() {
    tableName_ = "";
    writeMode_ = 0;
    compression_ = 0;
    catalogUri_ = "";
    warehouseLocation_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new IcebergConfig();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return datapower.noesis.v1.SidecarOuterClass.internal_static_datapower_noesis_v1_IcebergConfig_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 5:
        return internalGetTableProperties();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return datapower.noesis.v1.SidecarOuterClass.internal_static_datapower_noesis_v1_IcebergConfig_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            datapower.noesis.v1.IcebergConfig.class, datapower.noesis.v1.IcebergConfig.Builder.class);
  }

  public static final int TABLE_NAME_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object tableName_ = "";
  /**
   * <pre>
   * Iceberg table name (catalog.namespace.table)
   * </pre>
   *
   * <code>string table_name = 1 [json_name = "tableName"];</code>
   * @return The tableName.
   */
  @java.lang.Override
  public java.lang.String getTableName() {
    java.lang.Object ref = tableName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      tableName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Iceberg table name (catalog.namespace.table)
   * </pre>
   *
   * <code>string table_name = 1 [json_name = "tableName"];</code>
   * @return The bytes for tableName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTableNameBytes() {
    java.lang.Object ref = tableName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      tableName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int WRITE_MODE_FIELD_NUMBER = 2;
  private int writeMode_ = 0;
  /**
   * <pre>
   * APPEND, MERGE, OVERWRITE
   * </pre>
   *
   * <code>.datapower.noesis.v1.WriteMode write_mode = 2 [json_name = "writeMode"];</code>
   * @return The enum numeric value on the wire for writeMode.
   */
  @java.lang.Override public int getWriteModeValue() {
    return writeMode_;
  }
  /**
   * <pre>
   * APPEND, MERGE, OVERWRITE
   * </pre>
   *
   * <code>.datapower.noesis.v1.WriteMode write_mode = 2 [json_name = "writeMode"];</code>
   * @return The writeMode.
   */
  @java.lang.Override public datapower.noesis.v1.WriteMode getWriteMode() {
    datapower.noesis.v1.WriteMode result = datapower.noesis.v1.WriteMode.forNumber(writeMode_);
    return result == null ? datapower.noesis.v1.WriteMode.UNRECOGNIZED : result;
  }

  public static final int COMPRESSION_FIELD_NUMBER = 3;
  private int compression_ = 0;
  /**
   * <pre>
   * Compression algorithm
   * </pre>
   *
   * <code>.datapower.noesis.v1.CompressionCodec compression = 3 [json_name = "compression"];</code>
   * @return The enum numeric value on the wire for compression.
   */
  @java.lang.Override public int getCompressionValue() {
    return compression_;
  }
  /**
   * <pre>
   * Compression algorithm
   * </pre>
   *
   * <code>.datapower.noesis.v1.CompressionCodec compression = 3 [json_name = "compression"];</code>
   * @return The compression.
   */
  @java.lang.Override public datapower.noesis.v1.CompressionCodec getCompression() {
    datapower.noesis.v1.CompressionCodec result = datapower.noesis.v1.CompressionCodec.forNumber(compression_);
    return result == null ? datapower.noesis.v1.CompressionCodec.UNRECOGNIZED : result;
  }

  public static final int TARGET_FILE_SIZE_BYTES_FIELD_NUMBER = 4;
  private long targetFileSizeBytes_ = 0L;
  /**
   * <pre>
   * Target data file size (default 128MB)
   * </pre>
   *
   * <code>int64 target_file_size_bytes = 4 [json_name = "targetFileSizeBytes"];</code>
   * @return The targetFileSizeBytes.
   */
  @java.lang.Override
  public long getTargetFileSizeBytes() {
    return targetFileSizeBytes_;
  }

  public static final int TABLE_PROPERTIES_FIELD_NUMBER = 5;
  private static final class TablePropertiesDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.String>newDefaultInstance(
                datapower.noesis.v1.SidecarOuterClass.internal_static_datapower_noesis_v1_IcebergConfig_TablePropertiesEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.String> tableProperties_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.String>
  internalGetTableProperties() {
    if (tableProperties_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          TablePropertiesDefaultEntryHolder.defaultEntry);
    }
    return tableProperties_;
  }
  public int getTablePropertiesCount() {
    return internalGetTableProperties().getMap().size();
  }
  /**
   * <pre>
   * Iceberg table properties
   * </pre>
   *
   * <code>map&lt;string, string&gt; table_properties = 5 [json_name = "tableProperties"];</code>
   */
  @java.lang.Override
  public boolean containsTableProperties(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetTableProperties().getMap().containsKey(key);
  }
  /**
   * Use {@link #getTablePropertiesMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getTableProperties() {
    return getTablePropertiesMap();
  }
  /**
   * <pre>
   * Iceberg table properties
   * </pre>
   *
   * <code>map&lt;string, string&gt; table_properties = 5 [json_name = "tableProperties"];</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.String, java.lang.String> getTablePropertiesMap() {
    return internalGetTableProperties().getMap();
  }
  /**
   * <pre>
   * Iceberg table properties
   * </pre>
   *
   * <code>map&lt;string, string&gt; table_properties = 5 [json_name = "tableProperties"];</code>
   */
  @java.lang.Override
  public /* nullable */
java.lang.String getTablePropertiesOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetTableProperties().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Iceberg table properties
   * </pre>
   *
   * <code>map&lt;string, string&gt; table_properties = 5 [json_name = "tableProperties"];</code>
   */
  @java.lang.Override
  public java.lang.String getTablePropertiesOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetTableProperties().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int CATALOG_URI_FIELD_NUMBER = 6;
  @SuppressWarnings("serial")
  private volatile java.lang.Object catalogUri_ = "";
  /**
   * <pre>
   * Iceberg catalog URI (e.g., Hive metastore, Glue, REST)
   * </pre>
   *
   * <code>string catalog_uri = 6 [json_name = "catalogUri"];</code>
   * @return The catalogUri.
   */
  @java.lang.Override
  public java.lang.String getCatalogUri() {
    java.lang.Object ref = catalogUri_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      catalogUri_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Iceberg catalog URI (e.g., Hive metastore, Glue, REST)
   * </pre>
   *
   * <code>string catalog_uri = 6 [json_name = "catalogUri"];</code>
   * @return The bytes for catalogUri.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getCatalogUriBytes() {
    java.lang.Object ref = catalogUri_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      catalogUri_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int WAREHOUSE_LOCATION_FIELD_NUMBER = 7;
  @SuppressWarnings("serial")
  private volatile java.lang.Object warehouseLocation_ = "";
  /**
   * <pre>
   * Warehouse location (S3/GCS path)
   * </pre>
   *
   * <code>string warehouse_location = 7 [json_name = "warehouseLocation"];</code>
   * @return The warehouseLocation.
   */
  @java.lang.Override
  public java.lang.String getWarehouseLocation() {
    java.lang.Object ref = warehouseLocation_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      warehouseLocation_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Warehouse location (S3/GCS path)
   * </pre>
   *
   * <code>string warehouse_location = 7 [json_name = "warehouseLocation"];</code>
   * @return The bytes for warehouseLocation.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getWarehouseLocationBytes() {
    java.lang.Object ref = warehouseLocation_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      warehouseLocation_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(tableName_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, tableName_);
    }
    if (writeMode_ != datapower.noesis.v1.WriteMode.WRITE_MODE_UNSPECIFIED.getNumber()) {
      output.writeEnum(2, writeMode_);
    }
    if (compression_ != datapower.noesis.v1.CompressionCodec.COMPRESSION_UNSPECIFIED.getNumber()) {
      output.writeEnum(3, compression_);
    }
    if (targetFileSizeBytes_ != 0L) {
      output.writeInt64(4, targetFileSizeBytes_);
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetTableProperties(),
        TablePropertiesDefaultEntryHolder.defaultEntry,
        5);
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(catalogUri_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, catalogUri_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(warehouseLocation_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, warehouseLocation_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(tableName_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, tableName_);
    }
    if (writeMode_ != datapower.noesis.v1.WriteMode.WRITE_MODE_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, writeMode_);
    }
    if (compression_ != datapower.noesis.v1.CompressionCodec.COMPRESSION_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(3, compression_);
    }
    if (targetFileSizeBytes_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(4, targetFileSizeBytes_);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
         : internalGetTableProperties().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
      tableProperties__ = TablePropertiesDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, tableProperties__);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(catalogUri_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, catalogUri_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(warehouseLocation_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, warehouseLocation_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof datapower.noesis.v1.IcebergConfig)) {
      return super.equals(obj);
    }
    datapower.noesis.v1.IcebergConfig other = (datapower.noesis.v1.IcebergConfig) obj;

    if (!getTableName()
        .equals(other.getTableName())) return false;
    if (writeMode_ != other.writeMode_) return false;
    if (compression_ != other.compression_) return false;
    if (getTargetFileSizeBytes()
        != other.getTargetFileSizeBytes()) return false;
    if (!internalGetTableProperties().equals(
        other.internalGetTableProperties())) return false;
    if (!getCatalogUri()
        .equals(other.getCatalogUri())) return false;
    if (!getWarehouseLocation()
        .equals(other.getWarehouseLocation())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TABLE_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getTableName().hashCode();
    hash = (37 * hash) + WRITE_MODE_FIELD_NUMBER;
    hash = (53 * hash) + writeMode_;
    hash = (37 * hash) + COMPRESSION_FIELD_NUMBER;
    hash = (53 * hash) + compression_;
    hash = (37 * hash) + TARGET_FILE_SIZE_BYTES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTargetFileSizeBytes());
    if (!internalGetTableProperties().getMap().isEmpty()) {
      hash = (37 * hash) + TABLE_PROPERTIES_FIELD_NUMBER;
      hash = (53 * hash) + internalGetTableProperties().hashCode();
    }
    hash = (37 * hash) + CATALOG_URI_FIELD_NUMBER;
    hash = (53 * hash) + getCatalogUri().hashCode();
    hash = (37 * hash) + WAREHOUSE_LOCATION_FIELD_NUMBER;
    hash = (53 * hash) + getWarehouseLocation().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static datapower.noesis.v1.IcebergConfig parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.IcebergConfig parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.IcebergConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.IcebergConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.IcebergConfig parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static datapower.noesis.v1.IcebergConfig parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static datapower.noesis.v1.IcebergConfig parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.IcebergConfig parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static datapower.noesis.v1.IcebergConfig parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static datapower.noesis.v1.IcebergConfig parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static datapower.noesis.v1.IcebergConfig parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static datapower.noesis.v1.IcebergConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(datapower.noesis.v1.IcebergConfig prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Iceberg format configuration
   * </pre>
   *
   * Protobuf type {@code datapower.noesis.v1.IcebergConfig}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:datapower.noesis.v1.IcebergConfig)
      datapower.noesis.v1.IcebergConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return datapower.noesis.v1.SidecarOuterClass.internal_static_datapower_noesis_v1_IcebergConfig_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 5:
          return internalGetTableProperties();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 5:
          return internalGetMutableTableProperties();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return datapower.noesis.v1.SidecarOuterClass.internal_static_datapower_noesis_v1_IcebergConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              datapower.noesis.v1.IcebergConfig.class, datapower.noesis.v1.IcebergConfig.Builder.class);
    }

    // Construct using datapower.noesis.v1.IcebergConfig.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      tableName_ = "";
      writeMode_ = 0;
      compression_ = 0;
      targetFileSizeBytes_ = 0L;
      internalGetMutableTableProperties().clear();
      catalogUri_ = "";
      warehouseLocation_ = "";
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return datapower.noesis.v1.SidecarOuterClass.internal_static_datapower_noesis_v1_IcebergConfig_descriptor;
    }

    @java.lang.Override
    public datapower.noesis.v1.IcebergConfig getDefaultInstanceForType() {
      return datapower.noesis.v1.IcebergConfig.getDefaultInstance();
    }

    @java.lang.Override
    public datapower.noesis.v1.IcebergConfig build() {
      datapower.noesis.v1.IcebergConfig result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public datapower.noesis.v1.IcebergConfig buildPartial() {
      datapower.noesis.v1.IcebergConfig result = new datapower.noesis.v1.IcebergConfig(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(datapower.noesis.v1.IcebergConfig result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.tableName_ = tableName_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.writeMode_ = writeMode_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.compression_ = compression_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.targetFileSizeBytes_ = targetFileSizeBytes_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.tableProperties_ = internalGetTableProperties();
        result.tableProperties_.makeImmutable();
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.catalogUri_ = catalogUri_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.warehouseLocation_ = warehouseLocation_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof datapower.noesis.v1.IcebergConfig) {
        return mergeFrom((datapower.noesis.v1.IcebergConfig)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(datapower.noesis.v1.IcebergConfig other) {
      if (other == datapower.noesis.v1.IcebergConfig.getDefaultInstance()) return this;
      if (!other.getTableName().isEmpty()) {
        tableName_ = other.tableName_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.writeMode_ != 0) {
        setWriteModeValue(other.getWriteModeValue());
      }
      if (other.compression_ != 0) {
        setCompressionValue(other.getCompressionValue());
      }
      if (other.getTargetFileSizeBytes() != 0L) {
        setTargetFileSizeBytes(other.getTargetFileSizeBytes());
      }
      internalGetMutableTableProperties().mergeFrom(
          other.internalGetTableProperties());
      bitField0_ |= 0x00000010;
      if (!other.getCatalogUri().isEmpty()) {
        catalogUri_ = other.catalogUri_;
        bitField0_ |= 0x00000020;
        onChanged();
      }
      if (!other.getWarehouseLocation().isEmpty()) {
        warehouseLocation_ = other.warehouseLocation_;
        bitField0_ |= 0x00000040;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              tableName_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 16: {
              writeMode_ = input.readEnum();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 24: {
              compression_ = input.readEnum();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 32: {
              targetFileSizeBytes_ = input.readInt64();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 42: {
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              tableProperties__ = input.readMessage(
                  TablePropertiesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableTableProperties().getMutableMap().put(
                  tableProperties__.getKey(), tableProperties__.getValue());
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            case 50: {
              catalogUri_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000020;
              break;
            } // case 50
            case 58: {
              warehouseLocation_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000040;
              break;
            } // case 58
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object tableName_ = "";
    /**
     * <pre>
     * Iceberg table name (catalog.namespace.table)
     * </pre>
     *
     * <code>string table_name = 1 [json_name = "tableName"];</code>
     * @return The tableName.
     */
    public java.lang.String getTableName() {
      java.lang.Object ref = tableName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        tableName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Iceberg table name (catalog.namespace.table)
     * </pre>
     *
     * <code>string table_name = 1 [json_name = "tableName"];</code>
     * @return The bytes for tableName.
     */
    public com.google.protobuf.ByteString
        getTableNameBytes() {
      java.lang.Object ref = tableName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tableName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Iceberg table name (catalog.namespace.table)
     * </pre>
     *
     * <code>string table_name = 1 [json_name = "tableName"];</code>
     * @param value The tableName to set.
     * @return This builder for chaining.
     */
    public Builder setTableName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      tableName_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Iceberg table name (catalog.namespace.table)
     * </pre>
     *
     * <code>string table_name = 1 [json_name = "tableName"];</code>
     * @return This builder for chaining.
     */
    public Builder clearTableName() {
      tableName_ = getDefaultInstance().getTableName();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Iceberg table name (catalog.namespace.table)
     * </pre>
     *
     * <code>string table_name = 1 [json_name = "tableName"];</code>
     * @param value The bytes for tableName to set.
     * @return This builder for chaining.
     */
    public Builder setTableNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      tableName_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private int writeMode_ = 0;
    /**
     * <pre>
     * APPEND, MERGE, OVERWRITE
     * </pre>
     *
     * <code>.datapower.noesis.v1.WriteMode write_mode = 2 [json_name = "writeMode"];</code>
     * @return The enum numeric value on the wire for writeMode.
     */
    @java.lang.Override public int getWriteModeValue() {
      return writeMode_;
    }
    /**
     * <pre>
     * APPEND, MERGE, OVERWRITE
     * </pre>
     *
     * <code>.datapower.noesis.v1.WriteMode write_mode = 2 [json_name = "writeMode"];</code>
     * @param value The enum numeric value on the wire for writeMode to set.
     * @return This builder for chaining.
     */
    public Builder setWriteModeValue(int value) {
      writeMode_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * APPEND, MERGE, OVERWRITE
     * </pre>
     *
     * <code>.datapower.noesis.v1.WriteMode write_mode = 2 [json_name = "writeMode"];</code>
     * @return The writeMode.
     */
    @java.lang.Override
    public datapower.noesis.v1.WriteMode getWriteMode() {
      datapower.noesis.v1.WriteMode result = datapower.noesis.v1.WriteMode.forNumber(writeMode_);
      return result == null ? datapower.noesis.v1.WriteMode.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * APPEND, MERGE, OVERWRITE
     * </pre>
     *
     * <code>.datapower.noesis.v1.WriteMode write_mode = 2 [json_name = "writeMode"];</code>
     * @param value The writeMode to set.
     * @return This builder for chaining.
     */
    public Builder setWriteMode(datapower.noesis.v1.WriteMode value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      writeMode_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * APPEND, MERGE, OVERWRITE
     * </pre>
     *
     * <code>.datapower.noesis.v1.WriteMode write_mode = 2 [json_name = "writeMode"];</code>
     * @return This builder for chaining.
     */
    public Builder clearWriteMode() {
      bitField0_ = (bitField0_ & ~0x00000002);
      writeMode_ = 0;
      onChanged();
      return this;
    }

    private int compression_ = 0;
    /**
     * <pre>
     * Compression algorithm
     * </pre>
     *
     * <code>.datapower.noesis.v1.CompressionCodec compression = 3 [json_name = "compression"];</code>
     * @return The enum numeric value on the wire for compression.
     */
    @java.lang.Override public int getCompressionValue() {
      return compression_;
    }
    /**
     * <pre>
     * Compression algorithm
     * </pre>
     *
     * <code>.datapower.noesis.v1.CompressionCodec compression = 3 [json_name = "compression"];</code>
     * @param value The enum numeric value on the wire for compression to set.
     * @return This builder for chaining.
     */
    public Builder setCompressionValue(int value) {
      compression_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Compression algorithm
     * </pre>
     *
     * <code>.datapower.noesis.v1.CompressionCodec compression = 3 [json_name = "compression"];</code>
     * @return The compression.
     */
    @java.lang.Override
    public datapower.noesis.v1.CompressionCodec getCompression() {
      datapower.noesis.v1.CompressionCodec result = datapower.noesis.v1.CompressionCodec.forNumber(compression_);
      return result == null ? datapower.noesis.v1.CompressionCodec.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Compression algorithm
     * </pre>
     *
     * <code>.datapower.noesis.v1.CompressionCodec compression = 3 [json_name = "compression"];</code>
     * @param value The compression to set.
     * @return This builder for chaining.
     */
    public Builder setCompression(datapower.noesis.v1.CompressionCodec value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      compression_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Compression algorithm
     * </pre>
     *
     * <code>.datapower.noesis.v1.CompressionCodec compression = 3 [json_name = "compression"];</code>
     * @return This builder for chaining.
     */
    public Builder clearCompression() {
      bitField0_ = (bitField0_ & ~0x00000004);
      compression_ = 0;
      onChanged();
      return this;
    }

    private long targetFileSizeBytes_ ;
    /**
     * <pre>
     * Target data file size (default 128MB)
     * </pre>
     *
     * <code>int64 target_file_size_bytes = 4 [json_name = "targetFileSizeBytes"];</code>
     * @return The targetFileSizeBytes.
     */
    @java.lang.Override
    public long getTargetFileSizeBytes() {
      return targetFileSizeBytes_;
    }
    /**
     * <pre>
     * Target data file size (default 128MB)
     * </pre>
     *
     * <code>int64 target_file_size_bytes = 4 [json_name = "targetFileSizeBytes"];</code>
     * @param value The targetFileSizeBytes to set.
     * @return This builder for chaining.
     */
    public Builder setTargetFileSizeBytes(long value) {

      targetFileSizeBytes_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Target data file size (default 128MB)
     * </pre>
     *
     * <code>int64 target_file_size_bytes = 4 [json_name = "targetFileSizeBytes"];</code>
     * @return This builder for chaining.
     */
    public Builder clearTargetFileSizeBytes() {
      bitField0_ = (bitField0_ & ~0x00000008);
      targetFileSizeBytes_ = 0L;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> tableProperties_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetTableProperties() {
      if (tableProperties_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            TablePropertiesDefaultEntryHolder.defaultEntry);
      }
      return tableProperties_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMutableTableProperties() {
      if (tableProperties_ == null) {
        tableProperties_ = com.google.protobuf.MapField.newMapField(
            TablePropertiesDefaultEntryHolder.defaultEntry);
      }
      if (!tableProperties_.isMutable()) {
        tableProperties_ = tableProperties_.copy();
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return tableProperties_;
    }
    public int getTablePropertiesCount() {
      return internalGetTableProperties().getMap().size();
    }
    /**
     * <pre>
     * Iceberg table properties
     * </pre>
     *
     * <code>map&lt;string, string&gt; table_properties = 5 [json_name = "tableProperties"];</code>
     */
    @java.lang.Override
    public boolean containsTableProperties(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetTableProperties().getMap().containsKey(key);
    }
    /**
     * Use {@link #getTablePropertiesMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getTableProperties() {
      return getTablePropertiesMap();
    }
    /**
     * <pre>
     * Iceberg table properties
     * </pre>
     *
     * <code>map&lt;string, string&gt; table_properties = 5 [json_name = "tableProperties"];</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.String> getTablePropertiesMap() {
      return internalGetTableProperties().getMap();
    }
    /**
     * <pre>
     * Iceberg table properties
     * </pre>
     *
     * <code>map&lt;string, string&gt; table_properties = 5 [json_name = "tableProperties"];</code>
     */
    @java.lang.Override
    public /* nullable */
java.lang.String getTablePropertiesOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetTableProperties().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Iceberg table properties
     * </pre>
     *
     * <code>map&lt;string, string&gt; table_properties = 5 [json_name = "tableProperties"];</code>
     */
    @java.lang.Override
    public java.lang.String getTablePropertiesOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetTableProperties().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    public Builder clearTableProperties() {
      bitField0_ = (bitField0_ & ~0x00000010);
      internalGetMutableTableProperties().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * Iceberg table properties
     * </pre>
     *
     * <code>map&lt;string, string&gt; table_properties = 5 [json_name = "tableProperties"];</code>
     */
    public Builder removeTableProperties(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableTableProperties().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String>
        getMutableTableProperties() {
      bitField0_ |= 0x00000010;
      return internalGetMutableTableProperties().getMutableMap();
    }
    /**
     * <pre>
     * Iceberg table properties
     * </pre>
     *
     * <code>map&lt;string, string&gt; table_properties = 5 [json_name = "tableProperties"];</code>
     */
    public Builder putTableProperties(
        java.lang.String key,
        java.lang.String value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) { throw new NullPointerException("map value"); }
      internalGetMutableTableProperties().getMutableMap()
          .put(key, value);
      bitField0_ |= 0x00000010;
      return this;
    }
    /**
     * <pre>
     * Iceberg table properties
     * </pre>
     *
     * <code>map&lt;string, string&gt; table_properties = 5 [json_name = "tableProperties"];</code>
     */
    public Builder putAllTableProperties(
        java.util.Map<java.lang.String, java.lang.String> values) {
      internalGetMutableTableProperties().getMutableMap()
          .putAll(values);
      bitField0_ |= 0x00000010;
      return this;
    }

    private java.lang.Object catalogUri_ = "";
    /**
     * <pre>
     * Iceberg catalog URI (e.g., Hive metastore, Glue, REST)
     * </pre>
     *
     * <code>string catalog_uri = 6 [json_name = "catalogUri"];</code>
     * @return The catalogUri.
     */
    public java.lang.String getCatalogUri() {
      java.lang.Object ref = catalogUri_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        catalogUri_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Iceberg catalog URI (e.g., Hive metastore, Glue, REST)
     * </pre>
     *
     * <code>string catalog_uri = 6 [json_name = "catalogUri"];</code>
     * @return The bytes for catalogUri.
     */
    public com.google.protobuf.ByteString
        getCatalogUriBytes() {
      java.lang.Object ref = catalogUri_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        catalogUri_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Iceberg catalog URI (e.g., Hive metastore, Glue, REST)
     * </pre>
     *
     * <code>string catalog_uri = 6 [json_name = "catalogUri"];</code>
     * @param value The catalogUri to set.
     * @return This builder for chaining.
     */
    public Builder setCatalogUri(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      catalogUri_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Iceberg catalog URI (e.g., Hive metastore, Glue, REST)
     * </pre>
     *
     * <code>string catalog_uri = 6 [json_name = "catalogUri"];</code>
     * @return This builder for chaining.
     */
    public Builder clearCatalogUri() {
      catalogUri_ = getDefaultInstance().getCatalogUri();
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Iceberg catalog URI (e.g., Hive metastore, Glue, REST)
     * </pre>
     *
     * <code>string catalog_uri = 6 [json_name = "catalogUri"];</code>
     * @param value The bytes for catalogUri to set.
     * @return This builder for chaining.
     */
    public Builder setCatalogUriBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      catalogUri_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }

    private java.lang.Object warehouseLocation_ = "";
    /**
     * <pre>
     * Warehouse location (S3/GCS path)
     * </pre>
     *
     * <code>string warehouse_location = 7 [json_name = "warehouseLocation"];</code>
     * @return The warehouseLocation.
     */
    public java.lang.String getWarehouseLocation() {
      java.lang.Object ref = warehouseLocation_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        warehouseLocation_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Warehouse location (S3/GCS path)
     * </pre>
     *
     * <code>string warehouse_location = 7 [json_name = "warehouseLocation"];</code>
     * @return The bytes for warehouseLocation.
     */
    public com.google.protobuf.ByteString
        getWarehouseLocationBytes() {
      java.lang.Object ref = warehouseLocation_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        warehouseLocation_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Warehouse location (S3/GCS path)
     * </pre>
     *
     * <code>string warehouse_location = 7 [json_name = "warehouseLocation"];</code>
     * @param value The warehouseLocation to set.
     * @return This builder for chaining.
     */
    public Builder setWarehouseLocation(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      warehouseLocation_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Warehouse location (S3/GCS path)
     * </pre>
     *
     * <code>string warehouse_location = 7 [json_name = "warehouseLocation"];</code>
     * @return This builder for chaining.
     */
    public Builder clearWarehouseLocation() {
      warehouseLocation_ = getDefaultInstance().getWarehouseLocation();
      bitField0_ = (bitField0_ & ~0x00000040);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Warehouse location (S3/GCS path)
     * </pre>
     *
     * <code>string warehouse_location = 7 [json_name = "warehouseLocation"];</code>
     * @param value The bytes for warehouseLocation to set.
     * @return This builder for chaining.
     */
    public Builder setWarehouseLocationBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      warehouseLocation_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:datapower.noesis.v1.IcebergConfig)
  }

  // @@protoc_insertion_point(class_scope:datapower.noesis.v1.IcebergConfig)
  private static final datapower.noesis.v1.IcebergConfig DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new datapower.noesis.v1.IcebergConfig();
  }

  public static datapower.noesis.v1.IcebergConfig getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<IcebergConfig>
      PARSER = new com.google.protobuf.AbstractParser<IcebergConfig>() {
    @java.lang.Override
    public IcebergConfig parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<IcebergConfig> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<IcebergConfig> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public datapower.noesis.v1.IcebergConfig getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

