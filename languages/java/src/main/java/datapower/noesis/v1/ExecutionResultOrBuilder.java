// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datapower/noesis/v1/execution.proto

package datapower.noesis.v1;

public interface ExecutionResultOrBuilder extends
    // @@protoc_insertion_point(interface_extends:datapower.noesis.v1.ExecutionResult)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Pipeline name
   * </pre>
   *
   * <code>string pipeline_name = 1 [json_name = "pipelineName"];</code>
   * @return The pipelineName.
   */
  java.lang.String getPipelineName();
  /**
   * <pre>
   * Pipeline name
   * </pre>
   *
   * <code>string pipeline_name = 1 [json_name = "pipelineName"];</code>
   * @return The bytes for pipelineName.
   */
  com.google.protobuf.ByteString
      getPipelineNameBytes();

  /**
   * <pre>
   * Execution ID (workflow run ID)
   * </pre>
   *
   * <code>string execution_id = 2 [json_name = "executionId"];</code>
   * @return The executionId.
   */
  java.lang.String getExecutionId();
  /**
   * <pre>
   * Execution ID (workflow run ID)
   * </pre>
   *
   * <code>string execution_id = 2 [json_name = "executionId"];</code>
   * @return The bytes for executionId.
   */
  com.google.protobuf.ByteString
      getExecutionIdBytes();

  /**
   * <pre>
   * Execution mode
   * </pre>
   *
   * <code>.datapower.noesis.v1.ExecutionMode mode = 3 [json_name = "mode"];</code>
   * @return The enum numeric value on the wire for mode.
   */
  int getModeValue();
  /**
   * <pre>
   * Execution mode
   * </pre>
   *
   * <code>.datapower.noesis.v1.ExecutionMode mode = 3 [json_name = "mode"];</code>
   * @return The mode.
   */
  datapower.noesis.v1.ExecutionMode getMode();

  /**
   * <pre>
   * Overall status
   * </pre>
   *
   * <code>.datapower.noesis.v1.ExecutionStatus status = 4 [json_name = "status"];</code>
   * @return The enum numeric value on the wire for status.
   */
  int getStatusValue();
  /**
   * <pre>
   * Overall status
   * </pre>
   *
   * <code>.datapower.noesis.v1.ExecutionStatus status = 4 [json_name = "status"];</code>
   * @return The status.
   */
  datapower.noesis.v1.ExecutionStatus getStatus();

  /**
   * <pre>
   * Start and end times
   * </pre>
   *
   * <code>int64 started_at_epoch_ms = 5 [json_name = "startedAtEpochMs"];</code>
   * @return The startedAtEpochMs.
   */
  long getStartedAtEpochMs();

  /**
   * <code>int64 completed_at_epoch_ms = 6 [json_name = "completedAtEpochMs"];</code>
   * @return The completedAtEpochMs.
   */
  long getCompletedAtEpochMs();

  /**
   * <pre>
   * Duration in milliseconds
   * </pre>
   *
   * <code>int64 duration_ms = 7 [json_name = "durationMs"];</code>
   * @return The durationMs.
   */
  long getDurationMs();

  /**
   * <pre>
   * Streaming job results
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.StreamingJobResult streaming_job_results = 8 [json_name = "streamingJobResults"];</code>
   */
  java.util.List<datapower.noesis.v1.StreamingJobResult> 
      getStreamingJobResultsList();
  /**
   * <pre>
   * Streaming job results
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.StreamingJobResult streaming_job_results = 8 [json_name = "streamingJobResults"];</code>
   */
  datapower.noesis.v1.StreamingJobResult getStreamingJobResults(int index);
  /**
   * <pre>
   * Streaming job results
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.StreamingJobResult streaming_job_results = 8 [json_name = "streamingJobResults"];</code>
   */
  int getStreamingJobResultsCount();
  /**
   * <pre>
   * Streaming job results
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.StreamingJobResult streaming_job_results = 8 [json_name = "streamingJobResults"];</code>
   */
  java.util.List<? extends datapower.noesis.v1.StreamingJobResultOrBuilder> 
      getStreamingJobResultsOrBuilderList();
  /**
   * <pre>
   * Streaming job results
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.StreamingJobResult streaming_job_results = 8 [json_name = "streamingJobResults"];</code>
   */
  datapower.noesis.v1.StreamingJobResultOrBuilder getStreamingJobResultsOrBuilder(
      int index);

  /**
   * <pre>
   * Batch extraction results
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.ExtractionResult extraction_results = 9 [json_name = "extractionResults"];</code>
   */
  java.util.List<datapower.noesis.v1.ExtractionResult> 
      getExtractionResultsList();
  /**
   * <pre>
   * Batch extraction results
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.ExtractionResult extraction_results = 9 [json_name = "extractionResults"];</code>
   */
  datapower.noesis.v1.ExtractionResult getExtractionResults(int index);
  /**
   * <pre>
   * Batch extraction results
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.ExtractionResult extraction_results = 9 [json_name = "extractionResults"];</code>
   */
  int getExtractionResultsCount();
  /**
   * <pre>
   * Batch extraction results
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.ExtractionResult extraction_results = 9 [json_name = "extractionResults"];</code>
   */
  java.util.List<? extends datapower.noesis.v1.ExtractionResultOrBuilder> 
      getExtractionResultsOrBuilderList();
  /**
   * <pre>
   * Batch extraction results
   * </pre>
   *
   * <code>repeated .datapower.noesis.v1.ExtractionResult extraction_results = 9 [json_name = "extractionResults"];</code>
   */
  datapower.noesis.v1.ExtractionResultOrBuilder getExtractionResultsOrBuilder(
      int index);

  /**
   * <pre>
   * Batch reconciliation result
   * </pre>
   *
   * <code>.datapower.noesis.v1.BatchJobResult batch_result = 10 [json_name = "batchResult"];</code>
   * @return Whether the batchResult field is set.
   */
  boolean hasBatchResult();
  /**
   * <pre>
   * Batch reconciliation result
   * </pre>
   *
   * <code>.datapower.noesis.v1.BatchJobResult batch_result = 10 [json_name = "batchResult"];</code>
   * @return The batchResult.
   */
  datapower.noesis.v1.BatchJobResult getBatchResult();
  /**
   * <pre>
   * Batch reconciliation result
   * </pre>
   *
   * <code>.datapower.noesis.v1.BatchJobResult batch_result = 10 [json_name = "batchResult"];</code>
   */
  datapower.noesis.v1.BatchJobResultOrBuilder getBatchResultOrBuilder();

  /**
   * <pre>
   * Error information (if failed)
   * </pre>
   *
   * <code>string error_message = 11 [json_name = "errorMessage"];</code>
   * @return The errorMessage.
   */
  java.lang.String getErrorMessage();
  /**
   * <pre>
   * Error information (if failed)
   * </pre>
   *
   * <code>string error_message = 11 [json_name = "errorMessage"];</code>
   * @return The bytes for errorMessage.
   */
  com.google.protobuf.ByteString
      getErrorMessageBytes();

  /**
   * <code>string error_stack_trace = 12 [json_name = "errorStackTrace"];</code>
   * @return The errorStackTrace.
   */
  java.lang.String getErrorStackTrace();
  /**
   * <code>string error_stack_trace = 12 [json_name = "errorStackTrace"];</code>
   * @return The bytes for errorStackTrace.
   */
  com.google.protobuf.ByteString
      getErrorStackTraceBytes();

  /**
   * <pre>
   * Metrics
   * </pre>
   *
   * <code>.datapower.noesis.v1.ExecutionMetrics metrics = 13 [json_name = "metrics"];</code>
   * @return Whether the metrics field is set.
   */
  boolean hasMetrics();
  /**
   * <pre>
   * Metrics
   * </pre>
   *
   * <code>.datapower.noesis.v1.ExecutionMetrics metrics = 13 [json_name = "metrics"];</code>
   * @return The metrics.
   */
  datapower.noesis.v1.ExecutionMetrics getMetrics();
  /**
   * <pre>
   * Metrics
   * </pre>
   *
   * <code>.datapower.noesis.v1.ExecutionMetrics metrics = 13 [json_name = "metrics"];</code>
   */
  datapower.noesis.v1.ExecutionMetricsOrBuilder getMetricsOrBuilder();
}
