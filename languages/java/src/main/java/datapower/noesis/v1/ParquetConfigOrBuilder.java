// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datapower/noesis/v1/sidecar.proto

package datapower.noesis.v1;

public interface ParquetConfigOrBuilder extends
    // @@protoc_insertion_point(interface_extends:datapower.noesis.v1.ParquetConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Compression algorithm
   * </pre>
   *
   * <code>.datapower.noesis.v1.CompressionCodec compression = 1 [json_name = "compression"];</code>
   * @return The enum numeric value on the wire for compression.
   */
  int getCompressionValue();
  /**
   * <pre>
   * Compression algorithm
   * </pre>
   *
   * <code>.datapower.noesis.v1.CompressionCodec compression = 1 [json_name = "compression"];</code>
   * @return The compression.
   */
  datapower.noesis.v1.CompressionCodec getCompression();

  /**
   * <pre>
   * Rows per row group (default 100k)
   * </pre>
   *
   * <code>int32 row_group_size = 2 [json_name = "rowGroupSize"];</code>
   * @return The rowGroupSize.
   */
  int getRowGroupSize();

  /**
   * <pre>
   * Max file size before rotation (default 128MB)
   * </pre>
   *
   * <code>int64 max_file_size_bytes = 3 [json_name = "maxFileSizeBytes"];</code>
   * @return The maxFileSizeBytes.
   */
  long getMaxFileSizeBytes();

  /**
   * <pre>
   * Page size in bytes (default 1MB)
   * </pre>
   *
   * <code>int32 page_size = 4 [json_name = "pageSize"];</code>
   * @return The pageSize.
   */
  int getPageSize();

  /**
   * <pre>
   * Custom file metadata
   * </pre>
   *
   * <code>map&lt;string, string&gt; metadata = 5 [json_name = "metadata"];</code>
   */
  int getMetadataCount();
  /**
   * <pre>
   * Custom file metadata
   * </pre>
   *
   * <code>map&lt;string, string&gt; metadata = 5 [json_name = "metadata"];</code>
   */
  boolean containsMetadata(
      java.lang.String key);
  /**
   * Use {@link #getMetadataMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getMetadata();
  /**
   * <pre>
   * Custom file metadata
   * </pre>
   *
   * <code>map&lt;string, string&gt; metadata = 5 [json_name = "metadata"];</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getMetadataMap();
  /**
   * <pre>
   * Custom file metadata
   * </pre>
   *
   * <code>map&lt;string, string&gt; metadata = 5 [json_name = "metadata"];</code>
   */
  /* nullable */
java.lang.String getMetadataOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * Custom file metadata
   * </pre>
   *
   * <code>map&lt;string, string&gt; metadata = 5 [json_name = "metadata"];</code>
   */
  java.lang.String getMetadataOrThrow(
      java.lang.String key);
}
